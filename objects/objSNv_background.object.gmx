<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha=0; dest=0; image=noone; image_path=""; tabout=0; cntdown=0; rfname=""; rpath="";
telled=0; moffx=0; moffy=0; mbackx=0; mbacky=0; addbx=1; bnum=-1; fd=0; cranim=""; doalarm=1; alarm[0]=1;
//if (room!=room_nmenu &amp;&amp; room!=room_menu) {if (global.timeSpend&lt;=30) {addbx=1.1; global.timeSpend=31;}}
noreanim=0; fadein=global.stanFade; fadeout=global.stanFade; fadeinmax=1; stnumber=1; sthorinf=0; stvertinf=0;
path=""; acount=0; stoffsetx=0; stoffsety=0; stoffsetisx=0; stoffsetisy=0; stscale=1; stdepth=0; stparallax=global.backOMove;
animation_init(); imp=0; stalpha=1; stnoscale=0; rParallax=global.backOMove; isint=1; initidepth=0;
eff3d=1; wasAnimated=0; fileNamed=""; cuposx=0; cuposy=0; _linkedas=""; backgroundDB="";
nogamenolife = 0; followalpha=-1; image_speed=0.5*Time.deltatime; stispeed=0.5; _spritenumber=1;

stoffsetx_=""; stoffsety_=""; imp_offsetisx=0; imp_offsetisy=0; imp_offsetx=""; imp_offsety="";
backoffx_set=0; backoffx=0; backoffy_set=0; backoffy=0; shDepth=0;

novid=-1; if (instance_exists(objScr_gameInit)) {novid=objScr_gameInit.novid;} else if (instance_exists(novel)) {novid=novel.novid;}
else if (instance_exists(objNMenu)) {novid=objNMenu.novid;} else if (instance_exists(objMenu)) {
    if (instance_exists(objMenu.backobj)) {if (objMenu.backobj == id) {novid=objMenu.expanedid;}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_exists(image)) {sprite_delete(image);}
for (i=0;i&lt;acount;i+=1) {if (sprite_exists(aimage[i])) {sprite_delete(aimage[i]);}}
if (!nogamenolife) {if (tabout) {if (instance_exists(novel)) {novel.waitingForComplete=0;}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animation_produce();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (doalarm) {event_user(0);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!nogamenolife) {if (room!=room_nmenu &amp;&amp; room!=room_menu) {if (!global.inGame) {instance_destroy(); exit;} if (!global.gameIsLoaded) {exit;}}}
if (global.resChanged &amp;&amp; sprite_exists(image)) {mbackx=(view_wview+(view_wview*rParallax))/((sprite_get_width(image)));
    mbacky=(view_hview+(view_hview*rParallax))/((sprite_get_height(image)));
    if (mbackx&gt;mbacky) {mbacky=mbackx;} else {mbackx=mbacky;}}
if (bnum!=-1) {if (string(novdat.backanim[novel.novid,bnum])!=string(lastanim)) {if (instance_exists(novel)) {
    if (string(novdat.backanim[novel.novid,bnum])=="clear") {
        novdat.backanim[novel.novid,bnum]=""; xoff=0; yoff=0; animated=0;}
    if (string(novdat.backanim[novel.novid,bnum])=="stop") {novdat.backanim[novel.novid,bnum]=""; animated=0;}
    if (novdat.backanim[novel.novid,bnum]!="") {isok=animation_storevar(string(novdat.backanim[novel.novid,bnum]),novel.novid);
        if (isok) {animated=1; alarm[1]=1;}}} lastanim=novdat.backanim[novel.novid,bnum];}} else {
    if (currentAnim!=lastanim) {if (string(currentAnim)=="clear") {xoff=0; yoff=0; animated=0;}
    if (string(currentAnim)=="stop") {animated=0;} lastanim=currentAnim;}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imp=0; stparallax=rParallax; stint=isint; if (sprite_exists(image)) {sprite_delete(image);} if (filename_ext(image_path)==".nsback") {if (file_exists(image_path)) {imp=1;
    number[acount]=stnumber; ispeed[acount]=stispeed; shdepth[acount]=stdepth; shscale[acount]=stscale; parallax[acount]=stparallax; maxalpha[acount]=stalpha; indxoff[acount]=0; indyoff[acount]=0;
    offsetisx[acount]=stoffsetisx; offsetisy[acount]=stoffsetisy; offsetx[acount]=stoffsetx; offsety[acount]=stoffsety;
    offsetx_[acount]=stoffsetx_; offsety_[acount]=stoffsety_;
    noscale[acount]=stnoscale; horinf[acount]=sthorinf; vertinf[acount]=stvertinf; interpolation[acount]=stint; path="";
    file=file_text_open_read(image_path); acount=0; reading=0; while (!file_text_eof(file)) {fstr=file_text_read_string(file);
    if (string_copy(fstr,1,string_length(" "))==" ") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,1,_count);
        if (string_copy(_ph,string_length(_ph),1)!=" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxSpaceCount) {break;}}}
        if (_ph!="") {fstr=string_copy(fstr,string_length(_ph)+1,string_length(fstr)-string_length(_ph));}}
    if (string_copy(fstr,1,string_length("//"))=="//") {} else if (string_copy(fstr,1,string_length(";"))==";") {}
    else if (string_copy(fstr,1,string_length("depth "))=="depth ") {_dp=string_copy(fstr,string_length("depth ")+1,string_length(fstr)-string_length("depth "));
        if (_dp!="") {_dset=_dp; shdepth[acount]=person_guess_depth(); if (path=="") {stdepth=shdepth[acount];}}}
    else if (string_copy(fstr,1,string_length("scale "))=="scale ") {_dp=string_copy(fstr,string_length("scale ")+1,string_length(fstr)-string_length("scale "));
        if (_dp!="") {shscale[acount]=string_convert_topos(_dp); if (path=="") {stscale=shscale[acount];}}}
    else if (string_copy(fstr,1,string_length("parallax "))=="parallax ") {_dp=string_copy(fstr,string_length("parallax ")+1,string_length(fstr)-string_length("parallax "));
        if (_dp!="") {_pset=_dp; parallax[acount]=person_guess_parallax(); if (path=="") {stparallax=parallax[acount];}}}
    else if (string_copy(fstr,1,string_length("interpolation "))=="interpolation ") {_dp=string_copy(fstr,string_length("interpolation ")+1,string_length(fstr)-string_length("interpolation "));
        if (_dp!="") {interpolation[acount]=string_convert_topos(_dp); if (path=="") {stint=interpolation[acount];}}}
    else if (string_copy(fstr,1,string_length("offset "))=="offset ") {_dpx=string_copy(fstr,string_length("offset ")+1,string_length(fstr)-string_length("offset "));
        if (_dpx!="") {offsetx_[acount]=(_dpx); offsetisx[acount]=1; if (path=="") {stoffsetx_=(_dpx); stoffsetisx=1;}
        _dpy=string_copy(fstr,string_length("offset  ")+string_length(_dpx)+1,string_length(fstr)-string_length("offset  ")-string_length(_dpx));
            if (_dpy!="") {offsety_[acount]=(_dpy); offsetisy[acount]=1; if (path=="") {stoffsety_=(_dpy); stoffsetisy=1;}}}}
    else if (string_copy(fstr,1,string_length("offsetx "))=="offsetx ") {_dp=string_copy(fstr,string_length("offsetx ")+1,string_length(fstr)-string_length("offsetx "));
        if (_dp!="") {offsetx_[acount]=(_dp); offsetisx[acount]=1; if (path=="") {stoffsetx_=(_dpx); stoffsetisx=1;}}}
    else if (string_copy(fstr,1,string_length("offsetx "))=="offsety ") {_dp=string_copy(fstr,string_length("offsetx ")+1,string_length(fstr)-string_length("offsetx "));
        if (_dp!="") {offsety_[acount]=(_dp); offsetisy[acount]=1; if (path=="") {stoffsety_=(_dpx); stoffsetisy=1;}}}
    else if (string_copy(fstr,1,string_length("number "))=="number ") {_dp=string_copy(fstr,string_length("number ")+1,string_length(fstr)-string_length("number "));
        if (_dp!="") {number[acount]=string_convert_topos(_dp); if (path=="") {stnumber=number[acount];}}}
    else if (string_copy(fstr,1,string_length("speed "))=="speed ") {_dp=string_copy(fstr,string_length("speed ")+1,string_length(fstr)-string_length("speed "));
        if (_dp!="") {ispeed[acount]=string_convert_topos(_dp); if (path=="") {stispeed=ispeed[acount];}}}
    else if (string_copy(fstr,1,string_length("noscale"))=="noscale") {noscale[acount]=1; if (path=="") {stnoscale=1;}}
    else if (string_copy(fstr,1,string_length("horizontal infinite"))=="horizontal infinite") {horinf[acount]=1; if (path=="") {sthorinf=1;}}
    else if (string_copy(fstr,1,string_length("vertical infinite"))=="vertical infinite") {vertinf[acount]=1; if (path=="") {stvertinf=1;}}
    else if (string_copy(fstr,1,string_length("alpha "))=="alpha ") {_dp=string_copy(fstr,string_length("alpha ")+1,string_length(fstr)-string_length("alpha "));
        if (_dp!="") {maxalpha[acount]=string_convert_topos(_dp); if (path=="") {stalpha=maxalpha[acount];}}}
    else {if (path!="") {aimage[acount]=sprite_add(path,number[acount],0,0,0,0); if (sprite_exists(aimage[acount])) {
            _ofx=sprite_get_width(aimage[acount])/2; _ofy=sprite_get_height(aimage[acount])/2;
            if (offsetisx[acount]) {_ofx=string_convert_tooffset(aimage[acount],offsetx_[acount]);}
            if (offsetisy[acount]) {_ofy=string_convert_tooffset(aimage[acount],offsety_[acount]);} sprite_set_offset(aimage[acount],_ofx,_ofy);
            if (!noscale[acount]) {real_wview=view_wview; real_hview=view_hview; if (room==room_nmenu) {real_wview=global.wSW; real_hview=global.wSH;}
                mbackx[acount]=(real_wview+(real_wview*parallax[acount]))/((sprite_get_width(aimage[acount])));
                mbacky[acount]=(real_hview+(real_hview*parallax[acount]))/((sprite_get_height(aimage[acount]))); if (mbackx[acount]&gt;mbacky[acount]) {mbacky[acount]=mbackx[acount];} else {mbackx[acount]=mbacky[acount];}}}
            acount+=1; path=""; indxoff[acount]=0; indyoff[acount]=0; number[acount]=stnumber; noscale[acount]=stnoscale; ispeed[acount]=stispeed;
            horinf[acount]=sthorinf; vertinf[acount]=stvertinf; interpolation[acount]=stint; offsetisx[acount]=stoffsetisx; offsetisy[acount]=stoffsetisy;
            maxalpha[acount]=stalpha; offsetx[acount]=stoffsetx; offsety[acount]=stoffsety;
            offsetx_[acount]=stoffsetx_; offsety_[acount]=stoffsety_;
            shdepth[acount]=stdepth; parallax[acount]=stparallax; shscale[acount]=stscale;}
        path=filename_path(image_path)+fstr; if (string_copy(fstr,1,string_length("Stuff\"))=="Stuff\") {path=current_directory()+fstr;}
        else if (string_copy(fstr,1,string_length("Stuff\"))=="Stuff\") {path=current_directory()+fstr;}}
    file_text_readln(file);} file_text_close(file); if (path!="") {aimage[acount]=sprite_add(path,number[acount],0,0,0,0);
    if (sprite_exists(aimage[acount])) {_ofx=sprite_get_width(aimage[acount])/2; _ofy=sprite_get_height(aimage[acount])/2;
        if (offsetisx[acount]) {_ofx=string_convert_tooffset(aimage[acount],offsetx_[acount]);}
        if (offsetisy[acount]) {_ofy=string_convert_tooffset(aimage[acount],offsety_[acount]);} sprite_set_offset(aimage[acount],_ofx,_ofy);
        if (!noscale[acount]) {real_wview=view_wview; real_hview=view_hview; if (room==room_nmenu) {real_wview=global.wSW; real_hview=global.wSH;}
            mbackx[acount]=(real_wview+(real_wview*parallax[acount]))/((sprite_get_width(aimage[acount])));
            mbacky[acount]=(real_hview+(real_hview*parallax[acount]))/((sprite_get_height(aimage[acount]))); if (mbackx[acount]&gt;mbacky[acount]) {mbacky[acount]=mbackx[acount];} else {mbackx[acount]=mbacky[acount];}}}
        acount+=1; path=""; indxoff[acount]=0; indyoff[acount]=0; number[acount]=stnumber; noscale[acount]=stnoscale; ispeed[acount]=stispeed;
        horinf[acount]=sthorinf; vertinf[acount]=stvertinf; interpolation[acount]=stint; offsetisx[acount]=stoffsetisx; offsetisy[acount]=stoffsetisy;
        maxalpha[acount]=stalpha; offsetx[acount]=stoffsetx; offsety[acount]=stoffsety;
        offsetx_[acount]=stoffsetx_; offsety_[acount]=stoffsety_;
        shdepth[acount]=stdepth; parallax[acount]=stparallax; shscale[acount]=stscale;}}}
if (!imp) {if (_spritenumber==1) {__fname=filename_remove_ext(image_path);
        if (string_copy(__fname,string_length(__fname)-string_length("strip1")+1,string_length("strip")) == "strip") {
            _spritenumber=real(string_copy(__fname,string_length(__fname),1));}
        else if (string_copy(__fname,string_length(__fname)-string_length("strip11")+1,string_length("strip")) == "strip") {
            _spritenumber=real(string_copy(__fname,string_length(__fname)-1,2));}
        else if (string_copy(__fname,string_length(__fname)-string_length("strip111")+1,string_length("strip")) == "strip") {
            _spritenumber=real(string_copy(__fname,string_length(__fname)-2,3));}}
    image=sprite_add(image_path,_spritenumber,0,0,0,0); if (sprite_exists(image)) {_ofx=sprite_get_width(image)/2; _ofy=sprite_get_height(image)/2;
    if (imp_offsetisx) {_ofx=string_convert_tooffset(image,imp_offsetx);}
    if (imp_offsetisy) {_ofy=string_convert_tooffset(image,imp_offsety);} sprite_set_offset(image,_ofx,_ofy);
    real_wview=view_wview; real_hview=view_hview; if (room==room_nmenu) {real_wview=global.wSW; real_hview=global.wSH;}
    moffx=-(real_wview*rParallax/2)+(mouse_x-view_xview)*rParallax; moffy=-(real_hview*rParallax/2)+(mouse_y-view_yview)*rParallax;
    mbackx=(real_wview+(real_wview*rParallax))/((sprite_get_width(image)));
    mbacky=(real_hview+(real_hview*rParallax))/((sprite_get_height(image)));
    if (mbackx&gt;mbacky) {mbacky=mbackx;} else {mbackx=mbacky;}
    if (bnum!=-1) {if (instance_exists(novel)) {if (string(novdat.backanim[novel.novid,bnum])=="stop" || string(novdat.backanim[novel.novid,bnum])=="clear") {
        novdat.backanim[novel.novid,bnum]="";} if (string(novdat.backanim[novel.novid,bnum])!="") {
            isok=animation_storevar(string(novdat.backanim[novel.novid,bnum]),novel.novid); if (isok) {animated=1; alarm[1]=1;}}}}}}

image_speed=0.5*Time.deltatime;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!nogamenolife) {if (room!=room_nmenu &amp;&amp; room!=room_menu) {if (!global.inGame) {instance_destroy(); exit;} if (!global.gameIsLoaded) {exit;}}}
else {if (objGUI_ingame.saving) {exit;}}
if (imp) {if (followalpha==-1) {if (!dest) {if (alpha&lt;fadeinmax &amp;&amp; !fd) {if (!global.gamePause) {alpha+=fadein*Time.deltatime; if (alpha&gt;1) {alpha=1;}}
        if (addbx&lt;1) {addbx+=((fadeinmax/10)*fadein);} if (addbx&gt;1) {addbx-=((fadeinmax/10)*fadein);}} else {fd=1;
        if (!global.gamePause) {if (!telled) {if (instance_exists(novel)) {novel.waitingForComplete=0;} telled=1;}}}}
    else {if (!areseted) {if (bnum!=-1) {if (instance_exists(novel)) {novdat.backanim[novel.novid,bnum]="";}} areseted=1;}
        if (alpha&gt;0) {if (!global.gamePause) {alpha-=fadeout*Time.deltatime; if (alpha&lt;0) {alpha=0;}}} else {instance_destroy();}}}
    else {if (instance_exists(followalpha)) {alpha=followalpha.alpha*fadeinmax; depth=followalpha.depth;} else {instance_destroy(); exit;}}
    if (alpha&gt;0) {for (i=0;i&lt;acount;i+=1) {if (followalpha==-1) {depth=initidepth+shdepth[i]+shDepth;} else {depth+=shdepth[i];}
    moffx=-(view_wview*parallax[i]/2)+(mouse_x-view_xview)*parallax[i];
    moffy=-(view_hview*parallax[i]/2)+(mouse_y-view_yview)*parallax[i]; if (sprite_exists(aimage[i])) {
        texture_set_interpolation(interpolation[i]); image_speed=ispeed[i]*Time.deltatime; if (horinf[i]) {
        draw_sprite_tiled_ext(aimage[i],image_index,view_xview+xoff+view_wview/2+moffx+indxoff[i]+cuposx,view_yview+yoff+view_hview/2+moffy+indyoff[i]+cuposy,addbx*mbackx[i]*xscale*shscale[i],addbx*mbacky[i]*yscale*shscale[i],c_white,alpha*maxalpha[i]);}
        else {draw_sprite_ext(aimage[i],image_index,view_xview+xoff+view_wview/2+moffx+indxoff[i]+cuposx,view_yview+yoff+view_hview/2+moffy+indyoff[i]+cuposy,addbx*mbackx[i]*xscale*shscale[i],addbx*mbacky[i]*yscale*shscale[i],0,c_white,alpha*maxalpha[i]);}
        texture_set_interpolation(global.isInterpolation);}}}}
if (!imp) {if (followalpha==-1) {depth=initidepth+shDepth; if (!sprite_exists(image)) {if (cntdown&lt;3) {cntdown+=1*Time.deltatime;}
        else {if (!telled) {if (instance_exists(novel)) {novel.waitingForComplete=0;} telled=1;} instance_destroy();} exit;}
    if (!dest) {if (alpha&lt;fadeinmax &amp;&amp; !fd) {if (!global.gamePause) {alpha+=fadein*Time.deltatime; if (alpha&gt;1) {alpha=1;}}
        if (addbx&lt;1) {addbx+=((fadeinmax/10)*fadein);} if (addbx&gt;1) {addbx-=((fadeinmax/10)*fadein);}} else {fd=1;
        if (!global.gamePause) {if (!telled) {if (instance_exists(novel)) {novel.waitingForComplete=0;} telled=1;}}}}
    else {if (!areseted) {if (bnum!=-1) {if (instance_exists(novel)) {novdat.backanim[novel.novid,bnum]="";}} areseted=1;}
        if (alpha&gt;0) {if (!global.gamePause) {alpha-=fadeout*Time.deltatime; if (alpha&lt;0) {alpha=0;}}}
            else {if (sprite_exists(image)) {sprite_delete(image);} instance_destroy();}}}
    else {if (instance_exists(followalpha)) {alpha=followalpha.alpha*fadeinmax; depth=followalpha.depth;} else {instance_destroy(); exit;}}
    if (alpha&gt;0) {if (sprite_exists(image)) {moffx=-(view_wview*rParallax/2)+(mouse_x-view_xview)*rParallax; image_speed=stispeed*Time.deltatime;
        moffy=-(view_hview*rParallax/2)+(mouse_y-view_yview)*rParallax; texture_set_interpolation(isint);
        draw_sprite_ext(image,image_index,view_xview+xoff+view_wview/2+moffx+cuposx,view_yview+yoff+view_hview/2+moffy+cuposy,addbx*mbackx*xscale,addbx*mbacky*yscale,0,c_white,alpha);
        texture_set_interpolation(global.isInterpolation);}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
