<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.trBack=0; alpha=0; trLines=0;
list=ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.inGame &amp;&amp; !global.gamePause &amp;&amp; !global.chat_open) {if (mouse_wheel_up()) {global.trBack=1;}
    if (mouse_wheel_down()) {global.trBack=0;}
    if (mouse_check_button_pressed(mb_right)) {if (global.trBack) {
        global.trBack=0; mouse_clear(mb_right);}}} else {global.trBack=0;}

if (global.trBack) {if (alpha&lt;1) {alpha+=0.14*Time.deltatime;}} else {if (alpha&gt;0) {alpha-=0.14*Time.deltatime;}}
if (alpha&gt;0) {if (sprite_exists(global.menuBackgroundBlur)) {
    mbackx=(view_wview+(view_wview*global.backOMove))/((sprite_get_width(global.menuBackgroundBlur)));
    mbacky=(view_hview+(view_hview*global.backOMove))/((sprite_get_height(global.menuBackgroundBlur)));
    if (mbackx&gt;mbacky) {mbacky=mbackx;} else {mbackx=mbacky;}
    draw_sprite_ext(global.menuBackgroundBlur,-1,view_xview+view_wview/2,
    view_yview+view_hview/2,mbackx,mbacky,0,c_white,alpha/2);}
    draw_set_alpha(alpha/2) draw_rectangle_colour(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,c_black,c_black,c_black,c_black,0);
        draw_text_set(Neucha18,c_white,fa_left,fa_top); draw_set_alpha(alpha); yy=view_hview-50;
        maxsize=view_hview/string_height("A")+1; if (maxsize&gt;ds_list_size(list)) {maxsize=ds_list_size(list);} for (i=0;i&lt;maxsize;i+=1) {if (yy&gt;=view_yview) {
            val=ds_list_find_value(list,i); draw_text_outline(view_xview+10,view_yview+yy,string(val)); yy-=string_height(val);}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
