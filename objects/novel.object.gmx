<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scenario=""; inRead=""; inRead_R=-1; _file=-1; inRead_l=""; novid=-1; alarm[0]=1;
waitingForComplete=0; statReading=0; rEnd=0; nowait=0; cuscdist=""; dialclear=1;
global.timeSpend=0; shDepth=0; chid=-1; cuposx=0; cuposy=0; cuscale=1; dialtnfot=0;
isdialpos=0; dialposx=0; dialposy=0; dialwin=1; cPressed=0; dialfull=0;
dialclrr=0; dialclrg=0; dialclrb=0; _lclMFadeIn=1000; _lclMFadeOut=500; _lclMFadeMax=1000;
noread=0; dialcolor=global.dialBackClr; dialoutcl=global.dialBackOutclr;
global.curLine=0; norwait=0; fdelay=0; nodelay=0; progress=0; chProgress=0;
musicfrom=0; _alarmStep=0; canDoSkip=1; settingSkinIngame=0; isSkip=0;
_isSkipping=0; _ifpass=1; _filetexteof=0;
lastline=0; novelstep=0; __gettingfromcache=0;

bools=ds_map_create(); integers=ds_map_create(); strings=ds_map_create();
fonts=ds_map_create(); fontspath=ds_map_create(); ambients=ds_map_create();
links=ds_map_create(); linkstype=ds_map_create(); backgrounds=ds_map_create();
ifline=ds_map_create(); linecache=ds_map_create();
nss_extbegin(); handleLogic=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ds_map_size(fonts)&gt;0) {_fo = ds_map_find_first(fonts);
for (i=0;i&lt;ds_map_size(fonts);i+=1) {_va = ds_map_find_value(fonts,_fo);
    if (font_exists(_va)) {font_delete(_va);}
    if (i+1&lt;ds_map_size(fonts)) {_fo = ds_map_find_next(fonts,_fo);}}} ds_map_destroy(fonts);
_crTime=get_timer(); if (_crTime &gt; global.tiNoStart &amp;&amp; novid!=-1) {_prefix=novdat.prefix[novid];
    flname=""; if (_prefix=="") {if (!novdat.isObsolete[novid]) {
            flname=string_replace_all(novdat.FolderName[novid],"/","."); flname=string_replace_all(flname,"\",".");}
        else {ini_open(novdat.FName[novid]); flname=ini_read_string("NOVELDATA","Folder",""); if (flname=="") {
                flname=ini_read_string("NOVELDATA","FolderName",""); if (flname=="") {flname=_hName;}} ini_close();}}
    csini_open(current_directory()+"\Data\ndb\"+_prefix+flname+".nsldb");
    _nTime=csini_read_real(global.uniqueNumber,"timeplayed",0);
    csini_write_real(global.uniqueNumber,"timeplayed",_nTime+(_crTime-global.tiNoStart)); csini_close();}
if (_file != -1) {file_text_close(_file);}
ds_map_destroy(bools); ds_map_destroy(integers); ds_map_destroy(strings); ds_map_destroy(fontspath);
ds_map_destroy(ambients); ds_map_destroy(backgrounds); ds_map_destroy(links); ds_map_destroy(linkstype);
ds_map_destroy(ifline); ds_list_destroy(ifs); ds_map_destroy(linecache); nss_extend();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OBSOLETE [build 41 and lower]
/*if (!novdat.isObsolete[novid]) {_alarmStep=0;
if (!global.inGame) {instance_destroy();} if (!global.gameIsLoaded) {alarm[0]=global.nRefreshRate; exit;}
if (keyboard_check(vk_control) &amp;&amp; !waitingForComplete) {cPressed=1;} if (!keyboard_check(vk_control)) {cPressed=0; isSkip=0;}
isSkip=0; if (cPressed) {isSkip=1; if (instance_exists(global.dialog)) {if (global.dialog.is_question[global.dialog.diag]) {waitingForComplete=1; nowait=0; isSkip=0; cPressed=0;}}
    if (instance_exists(objSNv_wait)) {if (objSNv_wait.unlimited) {waitingForComplete=1; isSkip=0; nowait=0; cPressed=0; alarm[0]=global.nRefreshRate; exit;}}} else {isSkip=0;}
if (isSkip) {if (instance_exists(global.dialog)) {waitingForComplete=1;
    _shExit=0; with (global.dialog) {if (!dest) {if (is_question[diag]) {isSkip=0; cPressed=0; waitingForComplete=1;} else {
            if (nowIsShowing) {if (txt!=dialog[diag]) {txt_speed=string_length(dialog[0]); txt=dialog[0]; if (stopcurrent&lt;stopcount) {if (txt_speed&gt;=istop[stopcurrent]) {
                txt_speed=istop[stopcurrent];} stopcurrent+=1; txt=string_copy(dialog[0],1,txt_speed);} else {instance_destroy();}
                other.alarm[0]=global.nSkipRate; other._shExit=1; exit;}
            else {other.waitingForComplete=0;}}}}
        else {other.waitingForComplete=0;}} if (_shExit) {exit;}} else {waitingForComplete=0;}
    if (instance_exists(objSNv_wait)) {if (instance_exists(global.dialog)) {if (global.dialog.nowIsShowing) {
        with (global.dialog) {instance_destroy();}}} if (objSNv_wait.unlimited) {
                waitingForComplete=1; keyboard_clear(vk_control); isSkip=0; cPressed=0; alarm[0]=global.nRefreshRate; exit;}
            else {alarm[0]=global.nSkipRate; exit;}} nowait=!waitingForComplete;}
if (inRead_l!=scenario) {isSkip=0; cPressed=0; nowait=0; keyboard_clear(vk_control);
    if (instance_exists(objSNv_wait)) {with (objSNv_wait) {instance_destroy();}} waitingForComplete=0;}
if (waitingForComplete) {alarm[0]=global.nRefreshRate; exit;}
while (!waitingForComplete) {
    if (inRead_l!=scenario) {if (inRead_R != -1) {file_text_close(inRead_R);
            if (global.debug) {with (objGUI_chat) {chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}}
        inRead_l=scenario; inRead=current_directory()+novdat.FolName[novid]+"\"+inRead_l; progress=0;
        if (global.debug) {with (objGUI_chat) {chat_add_color("Opening scenario '"+other.inRead_l+"'...",c_gray);}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Directory: '...\"+novdat.FolName[other.novid]+"\"+other.inRead_l+"'.",c_gray);}}
        if (file_exists(inRead)) {inRead_R=file_text_open_read(inRead); ds_map_clear(ifline); ds_list_clear(ifs); if (inRead_R==-1) {break;}
            if (global.debug) {with (objGUI_chat) {chat_add_color("Scenario was loaded successfully!",c_gray);}}
        } else {notcen_add("E","Scenario doesn't exists."); game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);}
            else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;}}
    
    if (inRead_R != -1 &amp;&amp; inRead_l!="") {if (file_text_eof(inRead_R) &amp;&amp; !noread) {if (_filetexteof&gt;0) {
        if (global.debug) {with (objGUI_chat) {chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}
        file_text_close(inRead_R); game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);}
        else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); break;} else {_filetexteof=1;}}
    if (global.dChoosen!=-1) {fstr=chact[global.dChoosen]; progress=chProgress; global.dChoosen=-1;}
    else {if (!noread) {fstr=file_text_read_string(inRead_R);
            global.curLine+=1; progress+=1; file_text_readln(inRead_R);} else {noread=0;}
        while (string_copy(fstr,1,1) == " ") {if (string_length(fstr)&lt;=1) {break;} else {fstr = string_copy(fstr,2,string_length(fstr)-1);}}}
    _file=inRead_R; if (inRead_R!=-1 &amp;&amp; inRead_l!="") {novelsomescript(fstr,id);}
    if (nowait) {if (waitingForComplete) {waitingForComplete=0; norwait=0; nowait=0;}}} else {notcen_add("E","Scenario doesn't exists.");
        game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid;
            global.isNExists=novid; room_goto(room_editor);} instance_destroy(); break;}}
    
if (isSkip) {alarm[0]=global.nSkipRate;} else {alarm[0]=global.nRefreshRate;}} if (_filetexteof&gt;0) {_filetexteof-=1;}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OBSOLETE (build 40 and lower)
/*if (!novdat.isObsolete[novid]) {_alarmStep=0;
if (!global.inGame) {instance_destroy();} if (!global.gameIsLoaded) {alarm[0]=global.nRefreshRate; exit;}
if (keyboard_check(vk_control) &amp;&amp; !waitingForComplete) {cPressed=1;} if (!keyboard_check(vk_control)) {cPressed=0; isSkip=0;}
isSkip=0; if (cPressed) {isSkip=1; if (instance_exists(global.dialog)) {if (global.dialog.is_question[global.dialog.diag]) {waitingForComplete=1; nowait=0; isSkip=0; cPressed=0;}}
    if (instance_exists(objSNv_wait)) {if (objSNv_wait.unlimited) {waitingForComplete=1; isSkip=0; nowait=0; cPressed=0; alarm[0]=global.nRefreshRate; exit;}}} else {isSkip=0;}
if (isSkip) {if (instance_exists(global.dialog)) {waitingForComplete=1;
    _shExit=0; with (global.dialog) {if (!dest) {if (is_question[diag]) {isSkip=0; cPressed=0; waitingForComplete=1;} else {
        if (nowIsShowing) {if (txt!=dialog[diag]) {txt_speed=string_length(dialog[0]); txt=dialog[0]; if (stopcurrent&lt;stopcount) {if (txt_speed&gt;=istop[stopcurrent]) {
        txt_speed=istop[stopcurrent];} stopcurrent+=1; txt=string_copy(dialog[0],1,txt_speed);} else {instance_destroy();} other.alarm[0]=global.nSkipRate; other._shExit=1; exit;} else {other.waitingForComplete=0;}}}} else {other.waitingForComplete=0;}} if (_shExit) {exit;}} else {waitingForComplete=0;}
    if (instance_exists(objSNv_wait)) {if (instance_exists(global.dialog)) {if (global.dialog.nowIsShowing) {with (global.dialog) {instance_destroy();}}} if (objSNv_wait.unlimited) {waitingForComplete=1; keyboard_clear(vk_control); isSkip=0; cPressed=0; alarm[0]=global.nRefreshRate; exit;} else {alarm[0]=global.nSkipRate; exit;}}
    nowait=!waitingForComplete;} if (inRead_l!=scenario) {isSkip=0; cPressed=0; nowait=0; keyboard_clear(vk_control);
        if (instance_exists(objSNv_wait)) {with (objSNv_wait) {instance_destroy();}} waitingForComplete=0;}
if (waitingForComplete) {alarm[0]=global.nRefreshRate; exit;}
rc=0; while (!waitingForComplete) {if (inRead_l!=scenario) {rEnd=0; if (file_exists(inRead)) {file_text_close(inRead_R); if (global.debug) {with (objGUI_chat) {
    chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}} inRead_l=scenario; inRead=working_directory+novdat.FolName[novid]+"\"+inRead_l; progress=0;
    if (global.debug) {with (objGUI_chat) {chat_add_color("Opening scenario '"+other.inRead_l+"'...",c_gray);}}
    if (global.debug) {with (objGUI_chat) {chat_add_color("Directory: '"+other.inRead+"'.",c_gray);}}
    if (file_exists(inRead)) {inRead_R=file_text_open_read(inRead); if (global.debug) {with (objGUI_chat) {chat_add_color("Scenario was loaded successfully!",c_gray);}}
    } else {notcen_add("E","Scenario doesn't exists."); game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;}}
    
    if (rEnd==2) {rEnd=0;} if (global.dChoosen!=-1) {fstr=chact[global.dChoosen]; progress=chProgress; global.dChoosen=-1;} else {
    if (!noread) {fstr=file_text_read_string(inRead_R);} if (rEnd==3) {if (file_exists(inRead)) {file_text_close(inRead_R);
        if (global.debug) {with (objGUI_chat) {chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}}
            game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;}
    if (file_text_eof(inRead_R)) {rEnd=1;} if (!noread) {global.curLine+=1; progress+=1; file_text_readln(inRead_R);} noread=0; while (fstr=="") {
        fstr=file_text_read_string(inRead_R); if (file_text_eof(inRead_R) &amp;&amp; (fstr="" || string_length(fstr)==string_count(" ",fstr))) {
        if (file_exists(inRead)) {file_text_close(inRead_R); if (global.debug) {with (objGUI_chat) {chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}}
            game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;} global.curLine+=1; progress+=1; file_text_readln(inRead_R);}
    if (file_text_eof(inRead_R) &amp;&amp; fstr=="") {if (file_exists(inRead)) {file_text_close(inRead_R); if (global.debug) {with (objGUI_chat) {
        chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}} game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;}}
    
    while (string_copy(fstr,1,1) == " ") {if (string_length(fstr)&lt;=1) {break;} else {fstr = string_copy(fstr,2,string_length(fstr)-1);}}
    if (rEnd==1) {rEnd=2;} _file=inRead_R; novelsomescript(fstr,id);
    if (nodelay) {nowait=1; if (!waitingForComplete) {rc=0;} else {nodelay=0; nowait=0; rc+=1; fdelay=1; waitingForComplete=0;}} else {fdelay=0; rc+=1;
        if (nowait) {if (waitingForComplete) {waitingForComplete=0; norwait=0; nowait=0;}} else {if (global.timeSpend&lt;31) {if (!instance_exists(global.nvBack)) {global.timeSpend=31;}}}}}
    
if (isSkip) {alarm[0]=global.nSkipRate;} else {alarm[0]=global.nRefreshRate;}}*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OBSOLETE (build 36 and lower)
if (novdat.isObsolete[novid]) {_alarmStep=0;
if (!global.inGame) {instance_destroy();} if (!global.gameIsLoaded) {alarm[0]=global.nRefreshRate; exit;}
if (keyboard_check(vk_control) &amp;&amp; !waitingForComplete) {cPressed=1;} if (!keyboard_check(vk_control)) {cPressed=0; isSkip=0;}
isSkip=0; if (cPressed) {isSkip=1; if (instance_exists(global.dialog)) {if (global.dialog.is_question[global.dialog.diag]) {waitingForComplete=1; nowait=0; isSkip=0; cPressed=0;}}
    if (instance_exists(objSNv_wait)) {if (objSNv_wait.unlimited) {waitingForComplete=1; isSkip=0; nowait=0; cPressed=0; alarm[0]=global.nRefreshRate; exit;}}} else {isSkip=0;}
if (isSkip) {if (instance_exists(global.dialog)) {waitingForComplete=1;
    _shExit=0; with (global.dialog) {if (!dest) {if (is_question[diag]) {isSkip=0; cPressed=0; waitingForComplete=1;} else {
        if (nowIsShowing) {if (txt!=dialog[diag]) {txt_speed=string_length(dialog[0]); txt=dialog[0]; if (stopcurrent&lt;stopcount) {if (txt_speed&gt;=istop[stopcurrent]) {
        txt_speed=istop[stopcurrent];} stopcurrent+=1; txt=string_copy(dialog[0],1,txt_speed);} else {instance_destroy();} other.alarm[0]=global.nSkipRate; other._shExit=1; exit;} else {other.waitingForComplete=0;}}}} else {other.waitingForComplete=0;}} if (_shExit) {exit;}} else {waitingForComplete=0;}
    if (instance_exists(objSNv_wait)) {if (instance_exists(global.dialog)) {if (global.dialog.nowIsShowing) {with (global.dialog) {instance_destroy();}}} if (objSNv_wait.unlimited) {waitingForComplete=1; keyboard_clear(vk_control); isSkip=0; cPressed=0; alarm[0]=global.nRefreshRate; exit;} else {alarm[0]=global.nSkipRate; exit;}}
    nowait=!waitingForComplete;} if (inRead_l!=scenario) {isSkip=0; cPressed=0; nowait=0; keyboard_clear(vk_control);
        if (instance_exists(objSNv_wait)) {with (objSNv_wait) {instance_destroy();}} waitingForComplete=0;}
if (waitingForComplete) {alarm[0]=global.nRefreshRate; exit;}
rc=0; while (/*rc&lt;1*/!waitingForComplete) {if (inRead_l!=scenario) {rEnd=0; if (file_exists(inRead)) {file_text_close(inRead_R); if (global.debug) {with (objGUI_chat) {
    chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}} inRead_l=scenario; inRead=working_directory+novdat.FolName[novid]+"\"+inRead_l; progress=0;
    if (global.debug) {with (objGUI_chat) {chat_add_color("Opening scenario '"+other.inRead_l+"'...",c_gray);}}
    if (global.debug) {with (objGUI_chat) {chat_add_color("Directory: '"+other.inRead+"'.",c_gray);}}
    if (file_exists(inRead)) {inRead_R=file_text_open_read(inRead); if (global.debug) {with (objGUI_chat) {chat_add_color("Scenario was loaded successfully!",c_gray);}}
    } else {notcen_add("E","Scenario doesn't exists."); game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;}}
    
    if (rEnd==2) {rEnd=0;} if (global.dChoosen!=-1) {fstr=chact[global.dChoosen]; progress=chProgress; global.dChoosen=-1;} else {
    if (!noread) {fstr=file_text_read_string(inRead_R);} if (rEnd==3) {if (file_exists(inRead)) {file_text_close(inRead_R);
        if (global.debug) {with (objGUI_chat) {chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}}
            game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;} if (file_text_eof(inRead_R)) {rEnd=1;} if (!noread) {global.curLine+=1; progress+=1; file_text_readln(inRead_R);} noread=0; while (fstr=="") {
        fstr=file_text_read_string(inRead_R); if (file_text_eof(inRead_R) &amp;&amp; (fstr="" || string_length(fstr)==string_count(" ",fstr))) {
        if (file_exists(inRead)) {file_text_close(inRead_R); if (global.debug) {with (objGUI_chat) {chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}}
            game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;} global.curLine+=1; progress+=1; file_text_readln(inRead_R);}
    if (file_text_eof(inRead_R) &amp;&amp; fstr=="") {if (file_exists(inRead)) {file_text_close(inRead_R); if (global.debug) {with (objGUI_chat) {
        chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}} game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;}}
    
    if (string_copy(fstr,1,string_length(" "))==" ") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,1,_count);
        if (string_copy(_ph,string_length(_ph),1)!=" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxSpaceCount) {break;}}}
        if (_ph!="") {fstr=string_copy(fstr,string_length(_ph)+1,string_length(fstr)-string_length(_ph));}}
    if (rEnd==1) {rEnd=2;} if (string_copy(fstr,1,string_length(";"))==";") {} else if (string_copy(fstr,1,string_length("//"))=="//") {}
    else if (string_copy(fstr,1,string_length("background hide"))=="background hide") {fback=1; if (instance_number(objSNv_background)&gt;0) {waitingForComplete=1;}
        for (ii=0;ii&lt;instance_number(objSNv_background);ii+=1) {with (instance_find(objSNv_background,ii)) {if (other.fback) {tabout=1;} other.fback=0; dest=1; if (other.isSkip) {alpha=0;} if (other.nowait) {tabout=0;}}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Hiding background",c_orange);}}}
    else if (string_copy(fstr,1,string_length("background "))=="background ") {imgnum=-1; fname=string_copy(fstr,string_length("background ")+1,string_length(fstr)-string_length("background "));
        if (fname!="" &amp;&amp; string_length(fname)&gt;4) {/*ext=string_lower(string_copy(fname,string_length(fname)-3,4));*/
            if (fname=="black") {_path="Stuff\Sprites\Base\"; fname="black.jpg"; global.nvBack=background_set_main(current_directory()+_path+fname,-1); global.nvBack.rpath=_path;
                global.nvBack.rfname=fname; if (nowait) {global.nvBack.telled=1;} if (isSkip) {global.nvBack.alpha=global.nvBack.fadeinmax;} waitingForComplete=1;}
            else {fname=string_replace_all(fname,'"',""); ext=string_lower(filename_ext(fname));
            if (ext==".jpg"||ext==".png") {
                _path=novdat.FolName[novid]+"\"; if (string_copy(fname,1,string_length("Stuff/"))=="Stuff/") {_path=fname;}
                else if (string_copy(fname,1,string_length("Stuff\"))=="Stuff\") {_path=fname;}
                if (_path!=novdat.FolName[novid]+"\") {fname="";} //if (_path!=novdat.FolName[novid]+"\") {fname=string_copy(fname,string_length("Stuff\")+1,string_length(fname)-string_length("Stuff\"));}
                if (fname!="") {if (!file_exists(current_directory()+_path+fname)) {if (file_exists(current_directory()+_path+"backgrounds\"+fname)) {fname="backgrounds\"+fname;}}}
                for (ii=0;ii&lt;instance_number(objSNv_background);ii+=1) {with (instance_find(objSNv_background,ii)) {dest=1;}}
                global.nvBack=background_set_main(current_directory()+_path+fname,-1); global.nvBack.rpath=_path; global.nvBack.rfname=fname; if (nowait) {global.nvBack.telled=1;} if (isSkip) {global.nvBack.alpha=global.nvBack.fadeinmax;} waitingForComplete=1;}
            else if (ext==".nsback") {
                _path=novdat.FolName[novid]+"\"; if (string_copy(fname,1,string_length("Stuff/"))=="background Stuff/") {_path=fname;}
                else if (string_copy(fname,1,string_length("Stuff\"))=="Stuff\") {_path=fname;} if (_path!=novdat.FolName[novid]+"\") {fname="";}
                if (fname!="") {if (!file_exists(current_directory()+_path+fname)) {if (file_exists(current_directory()+_path+"backgrounds\"+fname)) {fname="backgrounds\"+fname;}}}
                for (ii=0;ii&lt;instance_number(objSNv_background);ii+=1) {with (instance_find(objSNv_background,ii)) {dest=1;}}
                global.nvBack=background_set_main(current_directory()+_path+fname,-1); global.nvBack.rpath=_path; global.nvBack.rfname=fname; if (nowait) {global.nvBack.telled=1;} if (isSkip) {global.nvBack.alpha=global.nvBack.fadeinmax;} waitingForComplete=1;}}}
        if (global.debug) {with (objGUI_chat) {if (string(other.imgnum)=="-1") {chat_add_color("Loading background: '"+string(other.fname)+"'",c_orange);}
            else {chat_add_color("Loading background: 'back"+string(other.imgnum)+"'",c_orange);}}}}
    else if (string_copy(fstr,1,string_length("music seekfrom "))=="music seekfrom ") {from=string_copy(fstr,string_length("music seekfrom ")+1,string_length(fstr)-string_length("music seekfrom "));
        if (from!="" &amp;&amp; string_digits(from)!="") {global.mPrStart=real(from);}}
    else if (string_copy(fstr,1,string_length("music seek "))=="music seek ") {from=string_copy(fstr,string_length("music seek ")+1,string_length(fstr)-string_length("music seek "));
        if (from!="" &amp;&amp; string_digits(from)!="") {music_set_fseek(real(from));}}
    else if (string_copy(fstr,1,string_length("music "))=="music ") {fname=string_copy(fstr,string_length("music ")+1,string_length(fstr)-string_length("music "));
        if (fname=="stop") {_mmx=global.mFadeMax; _mfi=global.mFadeIn; _mfo=global.mFadeOut; music_play(""); global.mFadeMax=_mmx; global.mFadeIn=_mfi; global.mFadeOut=_mfo;} else if (fname=="resume") {music_resume();} else {
        ext=string_lower(string_copy(fname,string_length(fname)-3,4)); if (ext==".mp3"||ext==".fla"||ext==".wma"||ext==".aac"||ext==".wav") {if (global.debug) {with (objGUI_chat) {chat_add_color("Only .ogg files supported!",c_red);
            alarm[0]=global.nRefreshRate; exit;}}} if (ext!="" &amp;&amp; (ext==".ogg")) {
        _path=novdat.FolName[novid]+"\"; if (string_copy(fstr,1,string_length("music Stuff/"))=="music Stuff/") {_path=fname;}
        else if (string_copy(fstr,1,string_length("music Stuff\"))=="music Stuff\") {_path=fname;}
        if (_path!=novdat.FolName[novid]+"\") {fname="";} _mmx=global.mFadeMax; _mfi=global.mFadeIn; _mfo=global.mFadeOut; music_play_path(_path+fname);
        global.mFadeMax=_mmx; global.mFadeIn=_mfi; global.mFadeOut=_mfo; if (global.mPrStart!=0) {music_set_seek(global.mPrStart); global.mPrStart=0;}}}}
    else if (string_copy(fstr,1,string_length("sound "))=="sound ") {fname=string_copy(fstr,string_length("sound ")+1,string_length(fstr)-string_length("sound "));
        if (fname=="stop") {for (i=0;i&lt;instance_number(objEmitter);i+=1) {ab=instance_find(objEmitter,i); if (ab.type=='streamsound') {ab.alarm[1]=1;}}
            } else {ext=string_lower(string_copy(fname,string_length(fname)-3,4));
        if (ext==".mp3"||ext==".fla"||ext==".wma"||ext==".aac"||ext==".wav") {if (global.debug) {with (objGUI_chat) {chat_add_color("Only .ogg files supported!",c_red);
            alarm[0]=global.nRefreshRate; exit;}}} if (ext!="" &amp;&amp; (ext==".ogg")) {
        _path=novdat.FolName[novid]+"\"; if (string_copy(fstr,1,string_length("sound Stuff/"))=="sound Stuff/") {_path=fname;}
        else if (string_copy(fstr,1,string_length("sound Stuff\"))=="sound Stuff\") {_path=fname;}
        if (_path!=novdat.FolName[novid]+"\") {fname="";} sound_stream_sound(working_directory+_path+fname,_path+fname);}}}
    else if (string_copy(fstr,1,string_length("ambient all stop"))=="ambient all stop") {for (i=0;i&lt;instance_number(objEmitter);i+=1) {ab=instance_find(objEmitter,i); if (ab.type=='streamambient') {ab.alarm[1]=1;}}}
    else if (string_copy(fstr,1,string_length("ambient"))=="ambient") {blnum=string_get_sstring(fstr,string_length("ambient")+1);
        fname=string_copy(fstr,string_length("ambient ")+string_length(blnum)+1,string_length(fstr)-string_length("ambient ")-string_length(blnum));
        if (blnum=="") {for (i=0;i&lt;instance_number(objEmitter);i+=1) {ab=instance_find(objEmitter,i); if (ab.type=='streamambient') {ab.alarm[1]=1;}}}
        else {if (ds_map_exists(ambients,"ambient"+blnum)) {_va = ds_map_find_value(ambients,"ambient"+blnum); if (instance_exists(_va)) {_va.alarm[1]=1;}}}
        if (fname=="stop") {} else {ext=string_lower(string_copy(fname,string_length(fname)-3,4));
        if (ext==".mp3"||ext==".fla"||ext==".wma"||ext==".aac"||ext==".wav") {if (global.debug) {with (objGUI_chat) {chat_add_color("Only .ogg files supported!",c_red);
            alarm[0]=global.nRefreshRate; exit;}}} if (ext!="" &amp;&amp; (ext==".ogg")) {
        _path=novdat.FolName[novid]+"\"; if (string_copy(fname,1,string_length("Stuff/"))==" Stuff/") {_path=fname;}
        else if (string_copy(fname,1,string_length("Stuff\"))=="Stuff\") {_path=fname;}
        if (_path!=novdat.FolName[novid]+"\") {fname="";} sound_stream_ambient(working_directory+_path+fname,_path+fname); _snd._blnum=blnum;
        if (blnum!="") {ds_map_replace(ambients,"ambient"+blnum,_snd);}}}}
    /*else if (string_copy(fstr,1,string_length("video "))=="video ") {imgnum=string_digits(string_copy(fstr,string_length("video video")+1,global.maxDigitCount));
        if (imgnum!="") {if (real(imgnum)&lt;=novdat.videoCount[novid] &amp;&amp; real(imgnum)&gt;0) {
            video_create(working_directory+novdat.FolName[novid]+"\"+novdat.video[novid,real(imgnum)]); waitingForComplete=1;}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Loading background: 'back"+string(other.imgnum)+"'",c_orange);}}}*/
    else if (string_copy(fstr,1,string_length("animation back"))=="animation back") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('animation back')+1,_count);
        if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
        blnum=string_digits(_ph); /*if (blnum!="") {*/blnum2=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('animation back anim')+string_length(blnum)+1,_count);
            if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
            blnum2=string_digits(_ph); _ext=filename_ext(string_copy(fstr,string_length("animation back ")+string_length(blnum)+1,string_length(fstr)-string_length("animation back ")-string_length(blnum)));
                if (blnum2!="" &amp;&amp; _ext=="") {if (blnum!="") {if (real(blnum)&lt;=novdat.backCount[novid] &amp;&amp; real(blnum)&gt;0 &amp;&amp; real(blnum2)&lt;=novdat.animCount[novid] &amp;&amp; real(blnum2)&gt;0) {
                    novdat.backanim[novid,real(blnum)]=novdat.anim[novid,real(blnum2)]; if (instance_exists(global.nvBack)) {if (nowait) {global.nvBack.anotell=1;}} waitingForComplete=1;}
                    if (global.debug) {with (objGUI_chat) {chat_add_color("Setting animation to 'back"+string(other.blnum)+"': 'anim"+string(other.blnum2)+"'",c_orange);}}}
                else if (instance_exists(global.nvBack)) {if (real(blnum2)&lt;=novdat.animCount[novid] &amp;&amp; real(blnum2)&gt;0) {cp=1; if (global.nvBack.noreanim &amp;&amp; novdat.anim[novel.novid,other.blnum2]==global.nvBack.cranim) {cp=0; global.nvBack.noreanim=0;}
                    if (cp) {with (global.nvBack) {isok=animation_storevar(string(novdat.anim[novel.novid,other.blnum2]),novel.novid); if (isok) {animated=1; alarm[1]=1;}} if (nowait) {global.nvBack.anotell=1;} waitingForComplete=1;}}}}
                else {_name=string_copy(fstr,string_length("animation back ")+string_length(blnum)+1,string_length(fstr)-string_length("animation back ")-string_length(blnum));
                    fname=novdat.FolName[novid]+"\"+_name; if (string_copy(_name,1,string_length("Stuff/"))=="Stuff/") {fname=_name;} else if (string_copy(_name,1,string_length("Stuff\"))=="Stuff\") {fname=_name;}
                    if (instance_exists(global.nvBack)) {if (fname!="") {cp=1; if (global.nvBack.noreanim &amp;&amp; string(fname)==global.nvBack.cranim) {cp=0; global.nvBack.noreanim=0;} if (cp) {with (global.nvBack) {
                        isok=animation_storevar_path(string(other.fname)); if (isok) {animated=1; alarm[1]=1;}} if (nowait) {global.nvBack.anotell=1;} waitingForComplete=1;}}}
                    if (global.debug) {with (objGUI_chat) {chat_add_color("Animation of 'back' was setted to '"+string(other._name)+"'",c_orange);}}}}//}
    else if (string_copy(fstr,1,string_length("animation camera "))=="animation camera ") {if (instance_exists(obj3DCamera)) {_path = string_copy(fstr,string_length("animation camera ")+1,string_length(fstr)-string_length("animation camera "));
        _2path=""; if (string_copy(_path,1,string_length("Stuff\")) != "Stuff\" &amp;&amp; string_copy(_path,1,string_length("Stuff\")) != "Stuff/") {_2path = novdat.FolName[novid]+"\";}
        with (obj3DCamera) {isok=animation_storevar_path(string(other._2path+other._path)); if (isok) {animated=1; alarm[1]=1;} if (other.nowait) {anotell=1;}} waitingForComplete=1;}}
    else if (string_copy(fstr,1,string_length("imitate stop"))=="imitate stop") {if (instance_exists(global.imAnim)) {global.imAnim.anim="stop";}}
    else if (string_copy(fstr,1,string_length("imitate anim"))=="imitate anim") {anum=string_get_snumber(fstr,string_length("imitate anim")+1); if (anum!="") {
        if (real(anum)&lt;=novdat.animCount[novid] &amp;&amp; real(anum)&gt;0) {if (instance_exists(global.imAnim)) {with (global.imAnim) {instance_destroy();}}
            global.imAnim=instance_create(0,0,objSNv_imAnim); global.imAnim.anim=novdat.FolName[novid]+"\"+novdat.anim[novid,real(anum)];}} else if (string_length(fstr)&gt;string_length("imitate anim ")+1) {
        fname=string_copy(fstr,string_length("imitate anim ")+1,string_length(fstr)-string_length("imitate anim "));
        path=novdat.FolName[novid]+"\"+fname; if (string_copy(fname,1,string_length("Stuff/"))=="Stuff/") {path=fname;}
        else if (string_copy(fname,1,string_length("Stuff/"))=="Stuff/") {path=fname;} if (instance_exists(global.imAnim)) {with (global.imAnim) {instance_destroy();}}
            global.imAnim=instance_create(0,0,objSNv_imAnim); if (nowait) {global.imAnim.anotell=1;} global.imAnim.anim=path; waitingForComplete=1;}}
    else if (string_copy(fstr,1,string_length("animation char"))=="animation char") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('animation char')+1,_count);
        if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
        blnum=string_digits(_ph); if (blnum!="") {blnum2=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('animation char anim')+string_length(blnum)+1,_count);
            if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
            blnum2=string_digits(_ph); if (blnum2!="") {if (real(blnum)&lt;=novdat.charCount[novid] &amp;&amp; real(blnum)&gt;0 &amp;&amp; real(blnum2)&lt;=novdat.animCount[novid] &amp;&amp; real(blnum2)&gt;0) {
                if (chid==-1) {if (instance_exists(novdat.charperson[novid,real(blnum)])) {with (novdat.charperson[novid,real(blnum)]) {isok=animation_storevar(string(novdat.anim[other.novid,real(other.blnum2)]),other.novid);
                    if (isok) {animated=1; alarm[1]=1;}} if (nowait) {novdat.charperson[novid,real(blnum)].atelled=1;} waitingForComplete=1;}
                } else {if (chid==0) {_finst=1; for (i=0;i&lt;ds_list_size(novdat.charoflist[novid,real(blnum)]);i+=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(blnum)],i);
                    if (instance_exists(_inst)) {with (_inst) {isok=animation_storevar(string(novdat.anim[other.novid,real(other.blnum2)]),other.novid);
                        if (isok) {animated=1; alarm[1]=1;}} if (nowait||!_finst) {_inst.atelled=1;} _finst=0; waitingForComplete=1;}}}
                        else {crinst=1; for (i=0;i&lt;ds_list_size(novdat.charoflist[novid,real(blnum)]);i+=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(blnum)],i);
                            if (instance_exists(_inst)) {if (chid==crinst) {with (_inst) {isok=animation_storevar(string(novdat.anim[other.novid,real(other.blnum2)]),other.novid);
                                if (isok) {animated=1; alarm[1]=1;}} if (nowait) {_inst.atelled=1;} waitingForComplete=1; break;} crinst+=1;}}} chid=-1;}}}
                else {if (real(blnum)&lt;=novdat.charCount[novid] &amp;&amp; real(blnum)&gt;0) {_name=string_copy(fstr,string_length("animation char ")+string_length(blnum)+1,string_length(fstr)-string_length("animation char ")-string_length(blnum));
                    fname=novdat.FolName[novid]+"\"+_name; if (string_copy(_name,1,string_length("Stuff/"))=="Stuff/") {fname=_name;} else if (string_copy(_name,1,string_length("Stuff\"))=="Stuff\") {fname=_name;}
                    if (chid==-1) {if (instance_exists(novdat.charperson[novid,real(blnum)])) {with (novdat.charperson[novid,real(blnum)]) {isok=animation_storevar_path(string(other.fname));
                        if (isok) {animated=1; alarm[1]=1;}} if (nowait) {novdat.charperson[novid,real(blnum)].atelled=1;} waitingForComplete=1;}
                    } else {if (chid==0) {_finst=1; for (i=0;i&lt;ds_list_size(novdat.charoflist[novid,real(blnum)]);i+=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(blnum)],i);
                        if (instance_exists(_inst)) {with (_inst) {isok=animation_storevar_path(string(other.fname));
                            if (isok) {animated=1; alarm[1]=1;}} if (nowait||!_finst) {_inst.atelled=1;} _finst=0; waitingForComplete=1;}}}
                            else {crinst=1; for (i=0;i&lt;ds_list_size(novdat.charoflist[novid,real(blnum)]);i+=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(blnum)],i);
                                if (instance_exists(_inst)) {if (chid==crinst) {with (_inst) {isok=animation_storevar_path(string(other.fname));
                                    if (isok) {animated=1; alarm[1]=1;}} if (nowait) {_inst.atelled=1;} waitingForComplete=1; break;} crinst+=1;}}} chid=-1;}}}
                if (global.debug) {with (objGUI_chat) {chat_add_color("Setting animation to 'char"+string(other.blnum)+"': 'anim"+string(other.blnum2)+"'",c_orange);}}}}
    else if (string_copy(fstr,1,string_length("animation clear back"))=="animation clear back") {imgnum=string_digits(string_copy(fstr,string_length("animation clear back")+1,global.maxDigitCount));
        if (imgnum!="") {if (real(imgnum)&lt;=novdat.backCount[novid] &amp;&amp; real(imgnum)&gt;0) {novdat.backanim[novid,real(blnum)]="clear";}} else {if (instance_exists(global.nvBack)) {global.nvBack.currentAnim="clear";}}}
    else if (string_copy(fstr,1,string_length("animation stop back"))=="animation stop back") {imgnum=string_digits(string_copy(fstr,string_length("animation stop back")+1,global.maxDigitCount));
        if (imgnum!="") {if (real(imgnum)&lt;=novdat.backCount[novid] &amp;&amp; real(imgnum)&gt;0) {novdat.backanim[novid,real(blnum)]="stop";}} else {if (instance_exists(global.nvBack)) {global.nvBack.currentAnim="clear";}}}
    else if (string_copy(fstr,1,string_length("animation clear char"))=="animation clear char") {imgnum=string_digits(string_copy(fstr,string_length("animation clear char")+1,global.maxDigitCount));
        if (imgnum!="") {if (real(imgnum)&lt;=novdat.charCount[novid] &amp;&amp; real(imgnum)&gt;0) {novdat.charanim[novid,real(blnum)]="clear";}}}
    else if (string_copy(fstr,1,string_length("animation stop char"))=="animation stop char") {imgnum=string_digits(string_copy(fstr,string_length("animation stop char")+1,global.maxDigitCount));
        if (imgnum!="") {if (real(imgnum)&lt;=novdat.charCount[novid] &amp;&amp; real(imgnum)&gt;0) {novdat.charanim[novid,real(blnum)]="stop";}}}
    else if (string_copy(fstr,1,string_length("animation "))=="animation ") {blname=string_get_sstring(fstr,string_length("animation ")+1);
         if (blname!="") {blnum=-1; for (i=1;i&lt;=novdat.charCount[novid];i+=1) {if (string(novdat.char[novid,i])==string(blname)) {blnum=i; break;}} if (blnum!=-1) {
            blnum2=""; bldef=""; num="_"; _count=1; /*while (num!="") {_ph=string_copy(fstr,string_length('animation  anim')+string_length(blname)+1,_count);
            if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
            blnum2=string_digits(_ph); if (blnum2!="") {if (real(blnum)&lt;=novdat.charCount[novid] &amp;&amp; real(blnum)&gt;0 &amp;&amp; real(blnum2)&lt;=novdat.animCount[novid] &amp;&amp; real(blnum2)&gt;0) {
                if (chid==-1) {if (instance_exists(novdat.charperson[novid,real(blnum)])) {with (novdat.charperson[novid,real(blnum)]) {isok=animation_storevar(string(novdat.anim[other.novid,real(other.blnum2)]),other.novid);
                    if (isok) {animated=1; alarm[1]=1;}} if (nowait) {novdat.charperson[novid,real(blnum)].atelled=1;} waitingForComplete=1;}
                } else {if (chid==0) {_finst=1; for (i=0;i&lt;ds_list_size(novdat.charoflist[novid,real(blnum)]);i+=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(blnum)],i);
                    if (instance_exists(_inst)) {with (_inst) {isok=animation_storevar(string(novdat.anim[other.novid,real(other.blnum2)]),other.novid);
                        if (isok) {animated=1; alarm[1]=1;}} if (nowait||!_finst) {_inst.atelled=1;} _finst=0; waitingForComplete=1;}}}
                        else {crinst=1; for (i=0;i&lt;ds_list_size(novdat.charoflist[novid,real(blnum)]);i+=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(blnum)],i);
                            if (instance_exists(_inst)) {if (chid==crinst) {with (_inst) {isok=animation_storevar(string(novdat.anim[other.novid,real(other.blnum2)]),other.novid);
                                if (isok) {animated=1; alarm[1]=1;}} if (nowait) {_inst.atelled=1;} waitingForComplete=1; break;} crinst+=1;}}} chid=-1;}}}
                else {*/if (real(blnum)&lt;=novdat.charCount[novid] &amp;&amp; real(blnum)&gt;0) {_name=string_copy(fstr,string_length("animation  ")+string_length(blname)+1,string_length(fstr)-string_length("animation  ")-string_length(blname));
                    fname=novdat.FolName[novid]+"\"+_name; if (string_copy(_name,1,string_length("Stuff/"))=="Stuff/") {fname=_name;} else if (string_copy(_name,1,string_length("Stuff\"))=="Stuff\") {fname=_name;}
                    if (chid==-1) {if (instance_exists(novdat.charperson[novid,real(blnum)])) {with (novdat.charperson[novid,real(blnum)]) {isok=animation_storevar_path(string(other.fname));
                        if (isok) {animated=1; alarm[1]=1;}} if (nowait) {novdat.charperson[novid,real(blnum)].atelled=1;} waitingForComplete=1;}
                    } else {if (chid==0) {_finst=1; for (i=0;i&lt;ds_list_size(novdat.charoflist[novid,real(blnum)]);i+=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(blnum)],i);
                        if (instance_exists(_inst)) {with (_inst) {isok=animation_storevar_path(string(other.fname));
                            if (isok) {animated=1; alarm[1]=1;}} if (nowait||!_finst) {_inst.atelled=1;} _finst=0; waitingForComplete=1;}}}
                            else {crinst=1; for (i=0;i&lt;ds_list_size(novdat.charoflist[novid,real(blnum)]);i+=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(blnum)],i);
                                if (instance_exists(_inst)) {if (chid==crinst) {with (_inst) {isok=animation_storevar_path(string(other.fname));
                                    if (isok) {animated=1; alarm[1]=1;}} if (nowait) {_inst.atelled=1;} waitingForComplete=1; break;} crinst+=1;}}} chid=-1;}}//}
                if (global.debug) {with (objGUI_chat) {chat_add_color("Setting animation to 'char"+string(other.blnum)+"': 'anim"+string(other.blnum2)+"'",c_orange);}}}}}
    else if (string_copy(fstr,1,string_length("hud "))=="hud ") {fname=string_copy(fstr,string_length("hud ")+1,string_length(fstr)-string_length("hud "));
        if (fname=="reset") {hud_set("");} else if (fname=="hide") {objHUD.hudHide=1; objHUD.doSmooth=0;} else {_path=novdat.FolName[novid]+"\"; if (string_copy(fstr,1,string_length("hud Stuff/"))=="hud Stuff/") {_path=fname;}
        else if (string_copy(fstr,1,string_length("hud Stuff\"))=="hud Stuff\") {_path=fname;}
        if (_path!=novdat.FolName[novid]+"\") {fname="";} hud_set(_path+fname);}}
    else if (string_copy(fstr,1,string_length("s hud "))=="s hud ") {fname=string_copy(fstr,string_length("s hud ")+1,string_length(fstr)-string_length("s hud "));
        if (fname=="reset") {hud_set("");} else if (fname=="hide") {objHUD.hudHide=1; objHUD.doSmooth=1;} else {_path=novdat.FolName[novid]+"\"; if (string_copy(fstr,1,string_length("s hud Stuff/"))=="s hud Stuff/") {_path=fname;}
        else if (string_copy(fstr,1,string_length("s hud Stuff\"))=="s hud Stuff\") {_path=fname;}
        if (_path!=novdat.FolName[novid]+"\") {fname="";} hud_set_smooth(_path+fname);}}
    else if (string_copy(fstr,1,string_length("shud "))=="shud ") {fname=string_copy(fstr,string_length("shud ")+1,string_length(fstr)-string_length("shud "));
        if (fname=="reset") {hud_set("");} else if (fname=="hide") {objHUD.hudHide=1; objHUD.doSmooth=1;} else {_path=novdat.FolName[novid]+"\"; if (string_copy(fstr,1,string_length("shud Stuff/"))=="shud Stuff/") {_path=fname;}
        else if (string_copy(fstr,1,string_length("shud Stuff\"))=="shud Stuff\") {_path=fname;}
        if (_path!=novdat.FolName[novid]+"\") {fname="";} hud_set_smooth(_path+fname);}}
    else if (string_copy(fstr,1,string_length("3d start"))=="3d start") {if (!instance_exists(obj3DCamera)) {__a=instance_create(0,0,obj3DCamera);}}
    else if (string_copy(fstr,1,string_length("3d end"))=="3d end") {if (instance_exists(obj3DCamera)) {with (obj3DCamera) {instance_destroy();}}
        if (instance_exists(objPlayer)) {with (objPlayer) {instance_destroy();}} objScene.path=""; with (objScene) {scene_load();}}
    else if (string_copy(fstr,1,string_length("3d start"))=="start 3d") {if (!instance_exists(obj3DCamera)) {__a=instance_create(0,0,obj3DCamera);}}
    else if (string_copy(fstr,1,string_length("3d hide"))=="3d hide") {global.is3DHide = 1;}
    else if (string_copy(fstr,1,string_length("3d hide"))=="hide 3d") {global.is3DHide = 1;}
    else if (string_copy(fstr,1,string_length("3d hide"))=="3d show") {global.is3DHide = 0;}
    else if (string_copy(fstr,1,string_length("3d hide"))=="show 3d") {global.is3DHide = 0;}
    else if (string_copy(fstr,1,string_length("3d end"))=="end 3d") {if (instance_exists(obj3DCamera)) {with (obj3DCamera) {instance_destroy();}}
        if (instance_exists(objPlayer)) {with (objPlayer) {instance_destroy();}} objScene.path=""; with (objScene) {scene_load();}}
    else if (string_copy(fstr,1,string_length("scene "))=="scene ") {fname=string_copy(fstr,string_length("scene ")+1,string_length(fstr)-string_length("scene "));
        if (fname=="reset") {scene_set("");} /*else if (fname=="hide") {objHUD.hudHide=1; objHUD.doSmooth=1;}*/ else {_path=novdat.FolName[novid]+"\"; if (string_copy(fstr,1,string_length("scene Stuff/"))=="scene Stuff/") {_path=fname;}
        else if (string_copy(fstr,1,string_length("scene Stuff\"))=="scene Stuff\") {_path=fname;}
        if (_path!=novdat.FolName[novid]+"\") {fname="";} scene_set(_path+fname);}}
    else if (string_copy(fstr,1,string_length("camera pos "))=="camera pos ") {imgnum1=string_get_sstring(fstr,string_length("camera pos ")+1);
        if (imgnum1!="") {imgnum2=string_get_sstring(fstr,string_length("camera pos  ")+string_length(imgnum1)+1); if (imgnum2!="") {
            imgnum3=string_get_sstring(fstr,string_length("camera pos   ")+string_length(imgnum1)+string_length(imgnum2)+1); if (imgnum3!="") {
                if (instance_exists(obj3DCamera)) {obj3DCamera.x = real(imgnum1); obj3DCamera.y = real(imgnum2); obj3DCamera.z = real(imgnum3);}}}
            else {if (ds_map_exists(objScene.objects,imgnum1)) {_obj = ds_map_find_value(objScene.objects,imgnum1);
                if (instance_exists(obj3DCamera)) {obj3DCamera.x = _obj.x; obj3DCamera.y = _obj.y; obj3DCamera.z = _obj.z;}}}}}
    else if (string_copy(fstr,1,string_length("player pos "))=="player pos ") {imgnum1=string_get_sstring(fstr,string_length("player pos ")+1);
        if (imgnum1!="") {imgnum2=string_get_sstring(fstr,string_length("player pos  ")+string_length(imgnum1)+1); if (imgnum2!="") {
            imgnum3=string_get_sstring(fstr,string_length("player pos   ")+string_length(imgnum1)+string_length(imgnum2)+1); if (imgnum3!="") {
            if (instance_exists(objPlayer)) {objPlayer.x = real(imgnum1); objPlayer.y = real(imgnum2); objPlayer.z = real(imgnum3);}}}}}
    else if (string_copy(fstr,1,string_length("spawn player "))=="spawn player ") {imgnum1=string_get_sstring(fstr,string_length("player spawn ")+1);
        if (imgnum1!="") {imgnum2=string_get_sstring(fstr,string_length("player spawn  ")+string_length(imgnum1)+1); if (imgnum2!="") {
            imgnum3=string_get_sstring(fstr,string_length("player spawn   ")+string_length(imgnum1)+string_length(imgnum2)+1); if (imgnum3!="") {
            if (!instance_exists(objPlayer)) {instance_create(0,0,objPlayer);}
            objPlayer.x = real(imgnum1); objPlayer.y = real(imgnum2); objPlayer.z = real(imgnum3);}}}}
    else if (string_copy(fstr,1,string_length("camera lookat "))=="camera lookat ") {imgnum=string_get_sstring(fstr,string_length("camera lookat ")+1);
        if (imgnum!="") {if (instance_exists(obj3DCamera)) {if (ds_map_exists(objScene.objects,imgnum)) {if (instance_exists(obj3DCamera.follow)) {if (obj3DCamera.follow.object_index!=objPlayer) {obj3DCamera.follow=noone;}}
            camera_lookat(ds_map_find_value(objScene.objects,imgnum));} else {if (imgnum=="point") {imgnum1=string_get_sstring(fstr,string_length('camera lookat point ')+1);
                if (imgnum1!="") {imgnum2=string_get_sstring(fstr,string_length('camera lookat point  ')+string_length(imgnum1)+1);
                    if (imgnum2!="") {imgnum3=string_get_sstring(fstr,string_length('camera lookat point   ')+string_length(imgnum1)+string_length(imgnum2)+1);
                        if (imgnum3!="") {if (instance_exists(obj3DCamera.follow)) {if (obj3DCamera.follow.object_index!=objPlayer) {obj3DCamera.follow=noone;}}
                            _point = instance_create(real(imgnum1),real(imgnum2),obj3DPoint); _point.z=real(imgnum3); camera_lookat(_point);}}}}}}}}
    else if (string_copy(fstr,1,string_length("camera mode "))=="camera mode ") {imgnum=string_copy(fstr,string_length("camera mode ")+1,string_length(fstr)-string_length("camera mode "));
        if (imgnum!="") {if (instance_exists(obj3DCamera)) {obj3DCamera.moveMouse = real(imgnum); if (instance_exists(objPlayer)) {if (instance_exists(obj3DCamera.follow)) {
            if (obj3DCamera.follow.object_index == objPlayer) {if (obj3DCamera.moveMouse != 0) {obj3DCamera.follow = noone;}}}
            if (obj3DCamera.moveMouse == 0) {obj3DCamera.follow = objPlayer; obj3DCamera.viewLimx1=0; obj3DCamera.viewLimx2=0; obj3DCamera.viewLimz=89;}}}}}
    else if (string_copy(fstr,1,string_length("camera canview "))=="camera canview ") {imgnum=string_copy(fstr,string_length("camera canview ")+1,string_length(fstr)-string_length("camera canview "));
        if (imgnum!="") {if (instance_exists(obj3DCamera)) {obj3DCamera.canView = real(imgnum);}}}
    else if (string_copy(fstr,1,string_length("camera zheight "))=="camera zheight ") {imgnum=string_copy(fstr,string_length("camera zheight ")+1,string_length(fstr)-string_length("camera zheight "));
        if (imgnum!="") {if (instance_exists(obj3DCamera)) {obj3DCamera._zheight = real(imgnum); obj3DCamera.zheight = obj3DCamera._zheight;}}}
    else if (string_copy(fstr,1,string_length("player canmove "))=="camera canmove ") {imgnum=string_copy(fstr,string_length("player canmove ")+1,string_length(fstr)-string_length("player canmove "));
        if (imgnum!="") {if (instance_exists(objPlayer)) {objPlayer.canMove = real(imgnum);}}}
    else if (string_copy(fstr,1,string_length("camera angle "))=="camera angle ") {imgnum=string_copy(fstr,string_length("camera angle ")+1,string_length(fstr)-string_length("camera angle "));
        if (imgnum!="") {if (instance_exists(obj3DCamera)) {obj3DCamera.cameraangle = real(imgnum);}}}
    else if (string_copy(fstr,1,string_length("camera fov "))=="camera fov ") {imgnum=string_copy(fstr,string_length("camera fov ")+1,string_length(fstr)-string_length("camera fov "));
        if (imgnum!="") {if (instance_exists(obj3DCamera)) {obj3DCamera.FOV = real(imgnum);}}}
    else if (string_copy(fstr,1,string_length("camera limitx "))=="camera limitx ") {imgnum=string_copy(fstr,string_length("camera limitx ")+1,string_length(fstr)-string_length("camera limitx "));
        if (imgnum!="") {if (instance_exists(obj3DCamera)) {obj3DCamera.viewLimx1 = obj3DCamera.direction+real(imgnum); if (obj3DCamera.viewLimx1&gt;360) {obj3DCamera.viewLimx1 = obj3DCamera.direction+real(imgnum)-360;}
            obj3DCamera.viewLimx2 = obj3DCamera.direction-real(imgnum); if (obj3DCamera.viewLimx2&lt;0) {obj3DCamera.viewLimx2 = abs(obj3DCamera.direction-real(imgnum));}}}}
    else if (string_copy(fstr,1,string_length("camera limity "))=="camera limity ") {imgnum=string_copy(fstr,string_length("camera limitx ")+1,string_length(fstr)-string_length("camera limitx "));
        if (imgnum!="") {if (instance_exists(obj3DCamera)) {obj3DCamera.viewLimz = real(imgnum);}}}
    else if (string_copy(fstr,1,string_length("camera limity "))=="camera limitz ") {imgnum=string_copy(fstr,string_length("camera limitx ")+1,string_length(fstr)-string_length("camera limitx "));
        if (imgnum!="") {if (instance_exists(obj3DCamera)) {obj3DCamera.viewLimz = real(imgnum);}}}
    else if (string_copy(fstr,1,string_length("object "))=="object ") {imgnum=string_get_sstring(fstr,string_length("object ")+1);
        if (imgnum!="") {__obj = ds_map_find_value(objScene.objects,imgnum); if (!is_undefined(imgnum)) {func=string_get_sstring(fstr,string_length("object  ")+string_length(imgnum)+1);
            if (func == "setstate") {_to=string_get_sstring(fstr,string_length("object   ")+string_length(imgnum)+string_length(func)+1); ds_map_replace(objScene.states,imgnum,_to);
                for (_i=0;_i&lt;__obj.acount;_i+=1) {if (sprite_exists(__obj.aimage[_i])) {sprite_delete(__obj.aimage[_i]);}} __obj.acount=0; __obj.sprState=_to; with (__obj) {person_alarm0();}}}}}
    else if (string_copy(fstr,1,string_length("fadeset "))=="fadeset ") {imgnum=string_copy(fstr,string_length("fadeset ")+1,global.maxDigitCount); if (imgnum!="") {global.curFade=real(imgnum);}
        if (instance_exists(global.nvBack)) {global.nvBack.fadeout=global.curFade; global.nvBack.fadein=global.curFade;}}
    else if (string_copy(fstr,1,string_length("fadeoutset "))=="fadeoutset ") {imgnum=string_copy(fstr,string_length("fadeoutset ")+1,global.maxDigitCount); if (imgnum!="") {global.curFadeout=real(imgnum);}
        if (instance_exists(global.nvBack)) {global.nvBack.fadeout=global.curFadeout;}}
    else if (string_copy(fstr,1,string_length("fadeinset "))=="fadeinset ") {imgnum=string_copy(fstr,string_length("fadeinset ")+1,global.maxDigitCount); if (imgnum!="") {global.curFadein=real(imgnum);}
        if (instance_exists(global.nvBack)) {global.nvBack.fadein=global.curFadein;}}
    else if (string_copy(fstr,1,string_length("fadeinmax "))=="fadeinmax ") {imgnum=string_copy(fstr,string_length("fadeinmax ")+1,global.maxDigitCount); if (imgnum!="") {global.maxFadein=real(imgnum);}
        if (instance_exists(global.nvBack)) {global.nvBack.fadeinmax=global.maxFadein;}}
    else if (string_copy(fstr,1,string_length("fade "))=="fade ") {imgnum=string_copy(fstr,string_length("fade ")+1,global.maxDigitCount); if (imgnum!="") {global.curFade=real(imgnum);}
        if (instance_exists(global.nvBack)) {global.nvBack.fadeout=global.curFade; global.nvBack.fadein=global.curFade;}}
    else if (string_copy(fstr,1,string_length("fadeout "))=="fadeout ") {imgnum=string_copy(fstr,string_length("fadeout ")+1,global.maxDigitCount); if (imgnum!="") {global.curFadeout=real(imgnum);}
        if (instance_exists(global.nvBack)) {global.nvBack.fadeout=global.curFadeout;}}
    else if (string_copy(fstr,1,string_length("fadein "))=="fadein ") {imgnum=string_copy(fstr,string_length("fadein ")+1,global.maxDigitCount); if (imgnum!="") {global.curFadein=real(imgnum);}
        if (instance_exists(global.nvBack)) {global.nvBack.fadein=global.curFadein;}}
    else if (string_copy(fstr,1,string_length("fademax "))=="fademax ") {imgnum=string_copy(fstr,string_length("fademax ")+1,global.maxDigitCount); if (imgnum!="") {global.maxFadein=real(imgnum);}
        if (instance_exists(global.nvBack)) {global.nvBack.fadeinmax=global.maxFadein;}}
    else if (string_copy(fstr,1,string_length("musicfade "))=="musicfade ") {imgnum=string_copy(fstr,string_length("musicfade ")+1,global.maxDigitCount); if (imgnum!="") {global.mFadeIn=real(imgnum)*1000; global.mFadeOut=real(imgnum)*1000;}}
    else if (string_copy(fstr,1,string_length("musicfadeout "))=="musicfadeout ") {imgnum=string_copy(fstr,string_length("musicfadeout ")+1,global.maxDigitCount); if (imgnum!="") {global.mFadeOut=real(imgnum)*1000;}}
    else if (string_copy(fstr,1,string_length("musicfadein "))=="musicfadein ") {imgnum=string_copy(fstr,string_length("musicfadein ")+1,global.maxDigitCount); if (imgnum!="") {global.mFadeIn=real(imgnum)*1000;}}
    else if (string_copy(fstr,1,string_length("musicfademax "))=="musicfademax ") {imgnum=string_copy(fstr,string_length("musicfademax ")+1,global.maxDigitCount); if (imgnum!="") {global.mFadeMax=real(imgnum)*1000;}}
    else if (string_copy(fstr,1,string_length("ambfade "))=="ambfade ") {imgnum=string_copy(fstr,string_length("ambfade ")+1,global.maxDigitCount); if (imgnum!="") {global.ambFadeIn=real(imgnum)*1000; global.ambFadeOut=real(imgnum)*1000;}}
    else if (string_copy(fstr,1,string_length("ambfadeout "))=="ambfadeout ") {imgnum=string_copy(fstr,string_length("ambfadeout ")+1,global.maxDigitCount); if (imgnum!="") {global.ambFadeOut=real(imgnum)*1000;}}
    else if (string_copy(fstr,1,string_length("ambfadein "))=="ambfadein ") {imgnum=string_copy(fstr,string_length("ambfadein ")+1,global.maxDigitCount); if (imgnum!="") {global.ambFadeIn=real(imgnum)*1000;}}
    else if (string_copy(fstr,1,string_length("ambfademax "))=="ambfademax ") {imgnum=string_copy(fstr,string_length("ambfademax ")+1,global.maxDigitCount); if (imgnum!="") {global.ambFadeMax=real(imgnum)*1000;}}
    else if (string_copy(fstr,1,string_length("dialogue center"))=="dialogue center") {isdialpos=1; dialposx=view_wview/2; dialposy=view_hview/2;}
    else if (string_copy(fstr,1,string_length("dialogue pos "))=="dialogue pos ") {_xp=string_get_ssnumber(fstr,string_length("dialogue pos ")+1);
        if (_xp!="") {isdialpos=1; dialposx=real(_xp); _yp=string_get_ssnumber(fstr,string_length("dialogue pos  ")+string_length(_xp)+1); if (_yp!="") {dialposy=real(_yp);}}}
    else if (string_copy(fstr,1,string_length("dialogue normal"))=="dialogue normal") {isdialpos=0;}
    else if (string_copy(fstr,1,string_length("dialogue show"))=="dialogue show") {if (instance_exists(global.dialog)) {global.dialog.dShowed=1; global.dialog.canPress=1;} if (instance_exists(global.dialogBack)) {global.dialogBack.dShowed=1;}}
    else if (string_copy(fstr,1,string_length("dialogue hide"))=="dialogue hide") {if (instance_exists(global.dialog)) {global.dialog.dShowed=0; global.dialog.canPress=0;} if (instance_exists(global.dialogBack)) {global.dialogBack.dShowed=0;}}
    else if (string_copy(fstr,1,string_length("dialogue text dofadeout"))=="dialogue text dofadeout") {dialtnfot=0;}
    else if (string_copy(fstr,1,string_length("dialogue text nofadeout"))=="dialogue text nofadeout") {dialtnfot=1;}
    else if (string_copy(fstr,1,string_length("dialogue box noclear"))=="dialogue box noclear") {dialclear=0;}
    else if (string_copy(fstr,1,string_length("dialogue box doclear"))=="dialogue box doclear") {dialclear=1;}
    else if (string_copy(fstr,1,string_length("dialogue box clear"))=="dialogue box clear") {if (instance_exists(global.dialogBack)) {global.dialogBack.dest=1;} if (instance_exists(global.dialog)) {global.dialog.dest=1;}}
    else if (string_copy(fstr,1,string_length("dialogue nobox"))=="dialogue nobox") {dialfull=0; dialclear=1; dlt=0; if (instance_exists(global.dialog)) {if (global.dialog.fullSize) {global.dialog.dest=1; dlt=1;}} if (dlt) {if (instance_exists(global.dialogBack)) {global.dialogBack.dest=1;}}}
    else if (string_copy(fstr,1,string_length("dialogue box"))=="dialogue box") {dialfull=1; dialclear=1;}
    else if (string_copy(fstr,1,string_length("dialogue nowin"))=="dialogue nowin") {dialwin=0;}
    else if (string_copy(fstr,1,string_length("dialogue win"))=="dialogue win") {dialwin=1;}
    else if (string_copy(fstr,1,string_length("rgb color "))=="rgb color ") {_iclr1=string_get_snumber(fstr,string_length("rgb color ")+1); if (_iclr1!="") {dialclrr=real(_iclr1);
        _iclr2=string_get_snumber(fstr,string_length("rgb color  ")+1+string_length(_iclr1)); if (_iclr2!="") {dialclrg=real(_iclr2);
            _iclr3=string_get_snumber(fstr,string_length("rgb color   ")+1+string_length(_iclr1)+string_length(_iclr2)); if (_iclr3!="") {dialclrb=real(_iclr3);}}}}
    else if (string_copy(fstr,1,string_length("dialogue reset"))=="dialogue reset") {dialwin=1; isdialpos=0; dialcolor=global.dialBackClr; dialoutcl=global.dialBackOutclr;}
    else if (string_copy(fstr,1,string_length("dialogue color"))=="dialogue color") {_clr=string_copy(fstr,string_length("dialogue color ")+1,string_length(fstr)-string_length("dialogue color "));
        if (_clr!="") {if (_clr=='rgb') {dialcolor=make_colour_rgb(dialclrr,dialclrg,dialclrb);} else {dialcolor=convertToColor(_clr);} dialoutcl=dialcolor;}}
    else if (string_copy(fstr,1,string_length("dialogue bordercolor"))=="dialogue bordercolor") {_clr=string_copy(fstr,string_length("dialogue bordercolor ")+1,string_length(fstr)-string_length("dialogue bordercolor "));
        if (_clr!="") {if (_clr=='rgb') {dialoutcl=make_colour_rgb(dialclrr,dialclrg,dialclrb);} else {dialoutcl=convertToColor(_clr);}}}
    else if (string_copy(fstr,1,string_length("notadd "))=="notadd ") {type=string_copy(fstr,string_length("notadd ")+1,1); if (type!="") {
        message=string_copy(fstr,string_length("notadd E ")+1,string_length(fstr)-string_length("notadd E ")); if (message!="") {notcen_add(type,message);}}}
    else if (string_copy(fstr,1,string_length("nowait"))=="nowait") {nowait=1;}
    else if (string_copy(fstr,1,string_length("nodelay"))=="nodelay") {nowait=1; /*fdelay=0; nodelay=1;*/}
    else if (string_copy(fstr,1,string_length("wait "))=="wait ") {imgnum=string_copy(fstr,string_length("wait ")+1,string_length(fstr)-string_length("wait "));
        if (imgnum!="") {if (imgnum == "unlimited") {ab=instance_create(0,0,objSNv_wait); if (instance_exists(global.dialog)) {with (global.dialog) {instance_destroy();}} ab.unlimited=1; waitingForComplete=1; if (isSkip) {nowait=0; cPressed=0; isSkip=0; keyboard_clear(vk_control); alarm[0]=global.nRefreshRate; exit;}} else {
            if (!isSkip) {if (imgnum!="") {ab=instance_create(0,0,objSNv_wait); if (novdat.isObsolete[novid]) {ab.time=real(imgnum);}
            else {ab.time=30*real(imgnum);} waitingForComplete=1;}} else {alarm[0]=global.nSkipRate; exit;}}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Waiting: '"+string(other.imgnum)+"'",c_blue);}}}
    else if (string_copy(fstr,1,string_length('jump '))=='jump ') {toscen=string_copy(fstr,string_length('jump ')+1,string_length(fstr)-5); scenario=toscen;}
    else if (string_copy(fstr,1,string_length('start again'))=='start again') {inRead_l="";}
    else if (string_copy(fstr,1,string_length('skin '))=='skin ') {if (!global.ignoreNovelSkin) {imgnum = string_copy(fstr,string_length('skin ')+1,string_length(fstr)-string_length('skin '));
        if (imgnum!="") {if (imgnum == "reset" || imgnum == "default") {if (global.skinChanged) {skin_deapply(); skin_apply();
            for (i=0;i&lt;instance_number(objGUI_dialogue);i+=1) {__dialog = instance_find(objGUI_dialogue,i); if (!__dialog.tdest) {with (__dialog) {objGUI_dialogue_create();}}}
            for (i=0;i&lt;instance_number(objDialBack);i+=1) {__dialog = instance_find(objDialBack,i); if (!__dialog.tdest) {with (__dialog) {objDialBack_create();}}}}} else {
            _path=""; if (string_copy(imgnum,1,string_length("Stuff/")) == "Stuff/" || string_copy(imgnum,1,string_length("Stuff/")) == "Stuff\") {
                _path = imgnum; global.skChanged_isFN=0;} else {_path = novdat.FolName[novid]+"\"+imgnum; global.skChanged_isFN=1;} global.skChanged_path=imgnum;
            skin_deapply(); skin_apply_path(current_directory()+_path,filename_path(_path)); global.skinChanged=1;
            for (i=0;i&lt;instance_number(objGUI_dialogue);i+=1) {__dialog = instance_find(objGUI_dialogue,i); if (!__dialog.tdest) {with (__dialog) {objGUI_dialogue_create();}}}
            for (i=0;i&lt;instance_number(objDialBack);i+=1) {__dialog = instance_find(objDialBack,i); if (!__dialog.tdest) {with (__dialog) {objDialBack_create();}}}}}}}
    else if (string_copy(fstr,1,string_length('string'))=='string') {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('string')+1,_count);
        if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
        blnum=string_digits(_ph); if (blnum!="") {bldef=string_copy(fstr,string_length('string ')+1+string_length(_ph),string_length(fstr)-string_length('string ')-string_length(_ph));
            if (bldef!="") {if (real(blnum)&gt;0) {novdat.strng[novid,real(blnum)]=bldef; ds_map_replace(strings,"string"+string(blnum),string(bldef)); if (real(blnum)&gt;novdat.stringCount[novid]) {novdat.stringCount[novid]=real(blnum);}}}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Setting bool"+string(other.blnum)+" to ("+string(other.bldef)+")",c_yellow);}}}
    else if (string_copy(fstr,1,string_length('bool'))=='bool') {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('bool')+1,_count);
        if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
        blnum=string_digits(_ph); if (blnum!="") {if (real(blnum)&gt;0) {bldef=string_digits(string_copy(fstr,string_length('bool ')+1+string_length(_ph),1));
            if (bldef!="") {novdat.bool[novid,real(blnum)]=real(bldef); ds_map_replace(bools,"bool"+string(blnum),real(bldef)); if (real(blnum)&gt;novdat.boolCount[novid]) {novdat.boolCount[novid]=real(blnum);}}}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Setting bool"+string(other.blnum)+" to ("+string(other.bldef)+")",c_yellow);}}}
    else if (string_copy(fstr,1,string_length('integer'))=='integer') {blnum=""; res=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('integer')+1,_count);
        if (string_copy(_ph,string_length(_ph),1)==" " || string_copy(_ph,string_length(_ph),1)=="+" ||string_copy(_ph,string_length(_ph),1)=="-") {
            _ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
        blnum=string_digits(_ph); if (blnum!="") {if (string_copy(fstr,string_length('integer')+string_length(blnum)+1,1)==' ') {
            bldef=string_digits(string_copy(fstr,string_length('integer ')+1+string_length(_ph),global.maxDigitCount)); if (bldef!="") {
                if (real(blnum)&gt;0) {novdat.integer[novid,real(blnum)]=real(bldef); ds_map_replace(integers,"integer"+string(blnum),real(bldef)); if (real(blnum)&gt;novdat.integerCount[novid]) {novdat.integerCount[novid]=real(blnum);} res=novdat.integer[novid,real(blnum)];}}
            } else if (string_copy(fstr,string_length('integer')+string_length(blnum)+1,1)=='+') {
                bldef=string_digits(string_copy(fstr,string_length('integer+ ')+1+string_length(_ph),global.maxDigitCount)); if (bldef!="") {
                    if (real(blnum)&lt;=novdat.integerCount[novid] &amp;&amp; real(blnum)&gt;0) {novdat.integer[novid,real(blnum)]+=real(bldef); ds_map_replace(integers,"integer"+string(blnum),real(novdat.integer[novid,real(blnum)])); res=novdat.integer[novid,real(blnum)];}}
            } else if (string_copy(fstr,string_length('integer')+string_length(blnum)+1,1)=='-') {
                bldef=string_digits(string_copy(fstr,string_length('integer- ')+1+string_length(_ph),global.maxDigitCount)); if (bldef!="") {
                    if (real(blnum)&lt;=novdat.integerCount[novid] &amp;&amp; real(blnum)&gt;0) {novdat.integer[novid,real(blnum)]-=real(bldef); ds_map_replace(integers,"integer"+string(blnum),real(novdat.integer[novid,real(blnum)])); res=novdat.integer[novid,real(blnum)];}}}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Setting integer"+string(other.blnum)+" to ("+string(other.res)+")",c_yellow);}}}
    else if (string_copy(fstr,1,string_length('var '))=='var ') {_name = string_get_sstring(fstr,string_length("var ")+1); if (_name != "") {
        _type = string_get_sstring(fstr,string_length("var  ")+1+string_length(_name)); if (_type!="") {
            _defin = string_get_sstring(fstr,string_length("var   ")+1+string_length(_name)+string_length(_type)); if (_defin != "") {
                if (_defin=="=") {_onum = string_length("var    = ")+1+string_length(_name)+string_length(_type); _defin = string_copy(fstr,_onum,string_length(fstr)-_onum);} else {
                _onum = string_length("var   ")+1+string_length(_name)+string_length(_type); _defin = string_copy(fstr,_onum,string_length(fstr)-_onum);}}
                switch (_type) {default: break;
                    case "integer": _tdefin=0; if ((_defin)!="") {_tdefin = real(_defin);} if (ds_map_exists(integers,_name)) {ds_map_replace(integers,_name,_tdefin);} else {ds_map_add(integers,_name,_tdefin);} break;
                    case "real": _tdefin=0; if ((_defin)!="") {_tdefin = real(_defin);} if (ds_map_exists(integers,_name)) {ds_map_replace(integers,_name,_tdefin);} else {ds_map_add(integers,_name,_tdefin);} break;
                    case "string": _tdefin=0; if ((_defin)!="") {_tdefin = (_defin);} if (ds_map_exists(strings,_name)) {ds_map_replace(strings,_name,_tdefin);} else {ds_map_add(strings,_name,_tdefin);} break;
                    case "font": _tdefin=0; if ((_defin)!="") {_tdefin = (_defin);}
                        _size = string_get_sstring(_tdefin,1); if (_size != "" &amp;&amp; string_digits(_size)!="") {
                            _path = string_copy(_tdefin,string_length(_size)+2,string_length(_tdefin)-(string_length(_size))+1); if (_path!="") {if (string_copy(_path,1,string_length("Stuff/")) == "Stuff/" || string_copy(_path,1,string_length("Stuff/")) == "Stuff\") {
                                _rpath = current_directory()+_path;} else {_rpath=current_directory()+novdat.FolName[novid]+"\"+_path;}
                                if (file_exists(_rpath)) {_font = font_add(_rpath,real(_size),0,0,0,0); if (ds_map_exists(fonts,_name)) {
                                    _va = ds_map_find_value(fonts,_name); ds_map_replace(fontspath,_name+" "+string(real(_size)),_path); if (font_exists(_va)) {font_delete(_va);}
                                    ds_map_replace(fonts,_name,_font);} else {ds_map_add(fonts,_name,_font); ds_map_add(fontspath,_name+" "+string(real(_size)),_path);}}}} break;
                    case "boolean": _tdefin=0; if (string_digits(_defin)!="") {_tdefin = real(_defin);} if (ds_map_exists(bools,_name)) {ds_map_replace(bools,_name,clamp(_tdefin,0,1));} else {ds_map_add(bools,_name,clamp(_tdefin,0,1));} break;}}}}
    else if (string_copy(fstr,1,string_length('"'))=='"') {phrase=string_copy(fstr,string_length('"')+1,string_length(fstr)-2);
        if (phrase!="") {global.diWindow=dialwin; dialog_text(0,noone,"",phrase); dialog_customize(isdialpos,dialposx,dialposy,dialwin,dialcolor,dialoutcl,dialfull); dialog_deadend(1); waitingForComplete=1;}}
    else if (string_copy(fstr,1,string_length('choose start'))=='choose start') {cPressed=0; chProgress=progress; isSkip=0; nowait=0; chCount=0; for (ii=0;ii&lt;=9;ii+=1) {chstr[ii]=""; chact[ii]="";}
        cstr=""; chtype=1; while (string_copy(cstr,1,string_length('choose end'))!='choose end') {cstr=file_text_read_string(inRead_R);
            if (string_copy(cstr,1,string_length(" "))==" ") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(cstr,1,_count);
                if (string_copy(_ph,string_length(_ph),1)!=" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxSpaceCount) {break;}}}
                if (_ph!="") {cstr=string_copy(cstr,string_length(_ph)+1,string_length(cstr)-string_length(_ph));}} global.curLine+=1; chProgress+=1; file_text_readln(inRead_R);
            if (string_copy(cstr,1,string_length('choose end'))=='choose end') {break;} else if (string_copy(cstr,1,string_length('choose type'))=='choose type') {
                _tp=string_digits(string_copy(cstr,string_length('choose type ')+1,1)); if (_tp!="") {chtype=real(_tp);}} else if (cstr!="") {
                chstr[chCount]=string_copy(cstr,string_length('choose "')+1,string_length(cstr)-string_length('choose "')-1);
                chact[chCount]=file_text_read_string(inRead_R); global.curLine+=1; chProgress+=1; file_text_readln(inRead_R); chCount+=1;}}
        if (chCount&gt;0) {global.diWindow=dialwin; dialog_question(0,-1,-1,-1,-1,-1); global.diWindow=dialwin; dialog_qutype(0,chtype); dialog_customize(isdialpos,dialposx,dialposy,dialwin,dialcolor,dialoutcl,dialfull);
            for (ii=0;ii&lt;chCount;ii+=1) {dialog_add_question(0,chstr[ii]);} dialog_deadend(1); waitingForComplete=1;}}
    else if (string_copy(fstr,1,string_length("font add "))=="font add ") {_chid = string_get_sstring(fstr,string_length("font add ")+1); if (_chid!="") {
        _size = string_get_sstring(fstr,string_length("font add  ")+string_length(_chid)+1); if (_size != "" &amp;&amp; string_digits(_size)!="") {_osize = string_length("font add   ")+string_length(_chid)+string_length(_size)+1;
            _path = string_copy(fstr,_osize,string_length(fstr)+1-_osize); if (_path!="") {if (string_copy(_path,1,string_length("Stuff/")) == "Stuff/" || string_copy(_path,1,string_length("Stuff/")) == "Stuff\") {
                _rpath = current_directory()+_path;} else {_rpath=current_directory()+novdat.FolName[novid]+"\"+_path;}
                if (file_exists(_rpath)) {_font = font_add(_rpath,real(_size),0,0,0,0); if (ds_map_exists(fonts,_chid+string(real(_size)))) {
                    _va = ds_map_find_value(fonts,_chid+string(real(_size))); ds_map_replace(fontspath,_chid+string(real(_size))+" "+string(real(_size)),_path); if (font_exists(_va)) {font_delete(_va);}
                    ds_map_replace(fonts,_chid+string(real(_size)),_font);} else {ds_map_add(fonts,_chid+string(real(_size)),_font); ds_map_add(fontspath,_chid+string(real(_size))+" "+string(real(_size)),_path);}}}}}}
    else if (string_copy(fstr,1,string_length("font "))=="font ") {_chid=string_copy(fstr,string_length("font ")+1,string_length(fstr)-string_length("font "));
        if (_chid!="") {if (_chid=="reset") {global.dDrawFont=global.dialTextFont; global.dDrawFont_t=global.dialTextFont_t;} else {
            if (ds_map_exists(fonts,_chid)) {global.dDrawFont=ds_map_find_value(fonts,_chid);} else {global.dDrawFont=convertToFont(_chid);} global.dDrawFont_t=_chid;}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Font changed to: "+string(other._chid)+"",c_fuchsia);}}}
    else if (string_copy(fstr,1,string_length("charset all"))=="charset all") {chid=0; if (global.debug) {with (objGUI_chat) {chat_add_color("Addicted to char: all",c_purple);}}}
    else if (string_copy(fstr,1,string_length("charset id "))=="charset id ") {_chid=string_copy(fstr,string_length("charset id ")+1,global.maxDigitCount);
        if (string_digits(_chid)!="") {chid=real(_chid);} if (global.debug) {with (objGUI_chat) {chat_add_color("Addicted to char: "+other.chid+"",c_purple);}}}
    else if (string_copy(fstr,1,string_length("charset "))=="charset ") {_chid=string_copy(fstr,string_length("charset ")+1,global.maxDigitCount);
        if (string_digits(_chid)!="") {chid=real(_chid);} if (global.debug) {with (objGUI_chat) {chat_add_color("Addicted to char: "+string(other.chid)+"",c_purple);}}}
    else if (string_copy(fstr,1,string_length('char'))=='char') {num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('char')+1,_count);
        if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
        chnum=string_digits(_ph); if (chnum!="") {phrase=string_copy(fstr,string_length('char "')+string_length(_ph)+1,string_length(fstr)-7-string_length(_ph));
            if (phrase!="") {if (real(chnum)&lt;=novdat.charCount[novid] &amp;&amp; real(chnum)&gt;0) {_actor=novdat.dchar[novid,real(chnum)];} else {_actor="UNEXPECTED ID: "+string(chnum);}
                global.diWindow=dialwin; dialog_text(0,noone,_actor,phrase); dialog_customize(isdialpos,dialposx,dialposy,dialwin,dialcolor,dialoutcl,dialfull); if (_actor!="UNEXPECTED ID: "+string(chnum)) {
                    dialog_acolor(0,novdat.charclr[novid,real(chnum)],novdat.charoutclr[novid,real(chnum)]);} dialog_deadend(1); waitingForComplete=1;}}}
    else if (string_copy(fstr,1,string_length("show integer"))=="show integer") {num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('show integer')+1,_count);
        if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
        chnum=string_digits(_ph); if (chnum!="") {if (real(chnum)&lt;=novdat.integerCount[novid] &amp;&amp; real(chnum)&gt;0) {
            dialog_text(0,noone,"",novdat.integer[novid,chnum]); dialog_deadend(1); waitingForComplete=1;}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Showing integer: 'integer"+string(other.chnum)+"'",c_yellow);}}}
    else if (string_copy(fstr,1,string_length("show bool"))=="show bool") {num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('show bool')+1,_count);
        if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
        chnum=string_digits(_ph); if (chnum!="") {if (real(chnum)&lt;=novdat.boolCount[novid] &amp;&amp; real(chnum)&gt;0) {
            dialog_text(0,noone,"",novdat.bool[novid,chnum]); dialog_deadend(1); waitingForComplete=1;}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Showing bool: 'bool"+string(other.chnum)+"'",c_yellow);}}}
    else if (string_copy(fstr,1,string_length("show string"))=="show string") {num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('show string')+1,_count);
        if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
        chnum=string_digits(_ph); if (chnum!="") {if (real(chnum)&lt;=novdat.stringCount[novid] &amp;&amp; real(chnum)&gt;0) {
            dialog_text(0,noone,"",novdat.strng[novid,chnum]); dialog_deadend(1); waitingForComplete=1;}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Showing string: 'string"+string(other.chnum)+"'",c_yellow);}}}
    else if (string_copy(fstr,1,string_length("show depth "))=="show depth ") {dcon=string_copy(fstr,string_length("show depth ")+1,global.maxDigitCount);
        if (dcon!="") {shDepth=real(dcon);}}
    else if (string_copy(fstr,1,string_length("custompos "))=="custompos ") {cx_=string_get_ssnumber(fstr,string_length("custompos ")+1);
        if (cx_!="") {cuposx=string_convert_topos(cx_); cy_=string_get_ssnumber(fstr,string_length("custompos  ")+string_length(cx_)+1); if (cy_!="") {cuposy=string_convert_topos(cy_);}}}
    else if (string_copy(fstr,1,string_length("customscale "))=="customscale ") {cuscdist=""; if (string_copy(fstr,string_length("customscale ")+1,string_length("close"))=="close") {cuscdist="close";}
        else if (string_copy(fstr,string_length("customscale ")+1,string_length("normal"))=="normal") {cuscdist="normal";}
        else if (string_copy(fstr,string_length("customscale ")+1,string_length("far"))=="far") {cuscdist="far";} if (cuscdist!="") {
            _scl=string_copy(fstr,string_length("customscale  ")+string_length(cuscdist)+1,global.maxDigitCount); if (_scl!="") {cuscale=real(_scl);}}}
    else if (string_copy(fstr,1,string_length("show char"))=="show char") {dist="normal"; pos="center"; sstate="normal"; res=0; num="_"; _count=1; xrev=1; yrev=1; _chnum=string_get_snumber(fstr,string_length("show char")+1);
        chnum=string_digits(_chnum); if (chnum!="") {if (real(chnum)&lt;=novdat.charCount[novid] &amp;&amp; real(chnum)&gt;0) {
            if (string_length(fstr)&gt;=string_length("show char ")+string_length(chnum)+1) {/*old*/ strl=string_length("show char ")+string_length(chnum)+1; while (strl&lt;string_length(fstr)) {
                _st=string_get_sstring(fstr,strl); if (_st!="") {person_do_action(_st); strl+=string_length(_st)+1} else {break;}}
                if (string_copy(fstr,string_length("show char ")+string_length(chnum)+1,string_length("bool"))=="bool") {res=1;
                    num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length("show char bool")+string_length(chnum)+1,_count);
                    if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
                    strnum=string_digits(_ph); if (strnum!="") {if (real(strnum)&lt;=novdat.boolCount[novid] &amp;&amp; real(strnum)&gt;0) {dialog_text(0,noone,novdat.dchar[novid,real(chnum)],novdat.bool[novid,strnum]);
                        dialog_acolor(0,novdat.charclr[novid,real(chnum)],novdat.charoutclr[novid,real(chnum)]); dialog_deadend(1); waitingForComplete=1;}}
                } else if (string_copy(fstr,string_length("show char ")+string_length(chnum)+1,string_length("string"))=="string") {res=2;
                    num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length("show char string")+string_length(chnum)+1,_count);
                    if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
                    strnum=string_digits(_ph); if (strnum!="") {if (real(strnum)&lt;=novdat.stringCount[novid] &amp;&amp; real(strnum)&gt;0) {dialog_text(0,noone,novdat.dchar[novid,real(chnum)],novdat.strng[novid,strnum]);
                        dialog_acolor(0,novdat.charclr[novid,real(chnum)],novdat.charoutclr[novid,real(chnum)]); dialog_deadend(1); waitingForComplete=1;}}
                } else if (string_copy(fstr,string_length("show char ")+string_length(chnum)+1,string_length("integer"))=="integer") {res=3;
                    num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length("show char integer")+string_length(chnum)+1,_count);
                    if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
                    strnum=string_digits(_ph); if (strnum!="") {if (real(strnum)&lt;=novdat.integerCount[novid] &amp;&amp; real(strnum)&gt;0) {dialog_text(0,noone,novdat.dchar[novid,real(chnum)],novdat.integer[novid,strnum]);
                        dialog_acolor(0,novdat.charclr[novid,real(chnum)],novdat.charoutclr[novid,real(chnum)]); dialog_deadend(1); waitingForComplete=1;}}
                } else {_img=""; _rimg=""; if (novdat.charf[novid,real(chnum)]=="") {if (dist=='normal' ||(dist=='custom' &amp;&amp; cuscdist=='normal')) {_img=novdat.FolName[novid]+"\"+novdat.charimg_normal[novid,real(chnum)];}
                    else if (dist=='far' ||(dist=='custom' &amp;&amp; cuscdist=='far')) {_img=novdat.FolName[novid]+"\"+novdat.charimg_far[novid,real(chnum)];}
                    else if (dist=='close' ||(dist=='custom' &amp;&amp; cuscdist=='close')) {_img=novdat.FolName[novid]+"\"+novdat.charimg_close[novid,real(chnum)];}
                    _rimg=_img; if (_img!="") {_img=current_directory()+_img;}}
                    novdat.charperson[novid,real(chnum)]=person_create(_img,real(chnum),pos,dist,xrev,yrev,shDepth,sstate); ps=novdat.charperson[novid,real(chnum)]; if (instance_exists(novdat.charperson[novid,real(chnum)])) {
                        ds_list_add(novdat.charoflist[novid,real(chnum)],ps); ps.rpath=_rimg; if (nowait) {ps.telled=1;} if (isSkip) {ps.alpha=1;} waitingForComplete=1;}
                        if (shDepth!=0) {shDepth=0;}}
            } else {_img=""; _rimg=""; if (novdat.charf[novid,real(chnum)]=="") {_img=novdat.FolName[novid]+"\"+novdat.charimg[novid,real(chnum)]; if (dist=='normal' ||(dist=='custom' &amp;&amp; cuscdist=='normal')) {
                    _img=current_directory()+novdat.FolName[novid]+"\"+novdat.charimg_normal[novid,real(chnum)];}
                else if (dist=='far' ||(dist=='custom' &amp;&amp; cuscdist=='far')) {_img=novdat.FolName[novid]+"\"+novdat.charimg_far[novid,real(chnum)];}
                else if (dist=='close' ||(dist=='custom' &amp;&amp; cuscdist=='close')) {_img=novdat.FolName[novid]+"\"+novdat.charimg_close[novid,real(chnum)];}
                _rimg=_img; if (_img!="") {_img=current_directory()+_img;}}
            novdat.charperson[novid,real(chnum)]=person_create(_img,real(chnum),pos,dist,xrev,yrev,shDepth,sstate); ps=novdat.charperson[novid,real(chnum)]; if (instance_exists(novdat.charperson[novid,real(chnum)])) {
                ds_list_add(novdat.charoflist[novid,real(chnum)],ps); ps.rpath=_rimg; if (nowait) {ps.telled=1;} if (isSkip) {ps.alpha=1;} waitingForComplete=1;} if (shDepth!=0) {shDepth=0;}}}}
        if (global.debug) {with (objGUI_chat) {if (other.res==0) {
            chat_add_color("Showing character: 'char"+string(other.chnum)+"' at '"+string(other.pos)+"' and '"+string(other.dist)+"'",c_purple);} else if (other.res==1) {
            chat_add_color("Showing 'bool"+string(other.strnum)+"' as: 'char"+string(other.chnum)+"'",c_yellow);} else if (other.res==2) {
            chat_add_color("Showing 'string"+string(other.strnum)+"' as: 'char"+string(other.chnum)+"'",c_yellow);} else if (other.res==3) {
            chat_add_color("Showing 'integer"+string(other.strnum)+"' as: 'char"+string(other.chnum)+"'",c_yellow);}}}}
    else if (string_copy(fstr,1,string_length("show "))=="show ") {dist="normal"; pos="center"; sstate="normal"; res=0; num="_"; _count=1; xrev=1; yrev=1; chname=string_get_sstring(fstr,string_length("show ")+1);
        chnum=-1; if (chname!="") {chnum=person_exists(chname); if (chnum!=-1) {
            if (string_length(fstr)&gt;=string_length("show  ")+string_length(chname)+1) {/*old*/ strl=string_length("show  ")+string_length(chname)+1; while (strl&lt;string_length(fstr)) {
                _st=string_get_sstring(fstr,strl); if (_st!="") {person_do_action(_st); strl+=string_length(_st)+1} else {break;}}
                _img=""; _rimg=""; if (novdat.charf[novid,real(chnum)]=="") {_img=current_directory()+novdat.FolName[novid]+"\"+novdat.charimg[novid,real(chnum)]; if (dist=='normal' ||(dist=='custom' &amp;&amp; cuscdist=='normal')) {
                    _img=novdat.FolName[novid]+"\"+novdat.charimg_normal[novid,real(chnum)];}
                else if (dist=='far' ||(dist=='custom' &amp;&amp; cuscdist=='far')) {_img=novdat.FolName[novid]+"\"+novdat.charimg_far[novid,real(chnum)];}
                else if (dist=='close' ||(dist=='custom' &amp;&amp; cuscdist=='close')) {_img=novdat.FolName[novid]+"\"+novdat.charimg_close[novid,real(chnum)];}
                _rimg=_img; if (_img!="") {_img=current_directory()+_img;}}
                novdat.charperson[novid,real(chnum)]=person_create(_img,real(chnum),pos,dist,xrev,yrev,shDepth,sstate); if (instance_exists(novdat.charperson[novid,real(chnum)])) {
                    ds_list_add(novdat.charoflist[novid,real(chnum)],novdat.charperson[novid,real(chnum)]); novdat.charperson[novid,real(chnum)].rpath=_rimg; if (nowait) {novdat.charperson[novid,real(chnum)].telled=1;} waitingForComplete=1;} if (shDepth!=0) {shDepth=0;}
            } else {_img=""; _rimg=""; if (novdat.charf[novid,real(chnum)]=="") {_img=current_directory()+novdat.FolName[novid]+"\"+novdat.charimg[novid,real(chnum)]; if (dist=='normal' ||(dist=='custom' &amp;&amp; cuscdist=='normal')) {
                    _img=novdat.FolName[novid]+"\"+novdat.charimg_normal[novid,real(chnum)];}
                else if (dist=='far' ||(dist=='custom' &amp;&amp; cuscdist=='far')) {_img=novdat.FolName[novid]+"\"+novdat.charimg_far[novid,real(chnum)];}
                else if (dist=='close' ||(dist=='custom' &amp;&amp; cuscdist=='close')) {_img=novdat.FolName[novid]+"\"+novdat.charimg_close[novid,real(chnum)];}
                _rimg=_img; if (_img!="") {_img=current_directory()+_img;}}
            novdat.charperson[novid,real(chnum)]=person_create(_img,real(chnum),pos,dist,xrev,yrev,shDepth,sstate); ps=novdat.charperson[novid,real(chnum)]; if (instance_exists(novdat.charperson[novid,real(chnum)])) {
                ds_list_add(novdat.charoflist[novid,real(chnum)],ps); ps.rpath=_rimg; if (nowait) {ps.telled=1;} if (isSkip) {ps.alpha=1;} waitingForComplete=1;} if (shDepth!=0) {shDepth=0;}}}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Showing character: '"+string(other.chname)+"' at '"+string(other.pos)+"' and '"+string(other.dist)+"'",c_purple);}}}
    else if (string_copy(fstr,1,string_length("hide char"))=="hide char") {num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,string_length('show char')+1,_count);
        if (string_copy(_ph,string_length(_ph),1)==" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxDigitCount) {break;}}}
        chnum=string_digits(_ph); if (chnum!="") {if (real(chnum)&lt;=novdat.charCount[novid] &amp;&amp; real(chnum)&gt;0) {if (chid==-1) {_pers=novdat.charperson[novid,real(chnum)];
            if (instance_exists(_pers)) {_val=ds_list_find_index(novdat.charoflist[novid,real(chnum)],novdat.charperson[novid,real(chnum)]);
                if (_val!=-1) {ds_list_delete(novdat.charoflist[novid,real(chnum)],_val);} _pers.dest=1; if (nowait) {_pers.ntell=0;} waitingForComplete=1;}} else {
                if (chid==0) {_finst=1; _lc=ds_list_size(novdat.charoflist[novid,real(chnum)]); for (i=_lc-1;i&gt;=0;i-=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(chnum)],i);
                    if (instance_exists(_inst)) {_inst.dest=1; if (!_finst||nowait) {_inst.ntell=0;} _finst=0; ds_list_delete(novdat.charoflist[novid,real(chnum)],i);}}
                        if (_lc&gt;0) {waitingForComplete=1;}} else {crinst=1; bin=0; for (i=0;i&lt;ds_list_size(novdat.charoflist[novid,real(chnum)]);i+=1) {
                            _inst=ds_list_find_value(novdat.charoflist[novid,real(chnum)],i); if (instance_exists(_inst)) {if (crinst==chid) {bin=1;
                            _inst.dest=1; if (nowait) {_pers.ntell=0;} if (isSkip) {_pers.alpha=0;} ds_list_delete(novdat.charoflist[novid,real(chnum)],i);} crinst+=1;}} if (bin) {waitingForComplete=1;}} chid=-1;}}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Hiding character: 'char"+string(other.chnum)+"'",c_purple);}}}
    else if (string_copy(fstr,1,string_length("hide "))=="hide ") {chname=string_copy(fstr,string_length("hide ")+1,string_length(fstr)-string_length("hide "));
        if (chname!="") {chnum=person_exists(chname); if (chnum!=-1) {if (chid==-1) {_pers=novdat.charperson[novid,real(chnum)];
            if (instance_exists(_pers)) {_val=ds_list_find_index(novdat.charoflist[novid,real(chnum)],novdat.charperson[novid,real(chnum)]);
                if (_val!=-1) {ds_list_delete(novdat.charoflist[novid,real(chnum)],_val);} _pers.dest=1; if (nowait) {_pers.ntell=0;} waitingForComplete=1;}} else {
                if (chid==0) {_finst=1; _lc=ds_list_size(novdat.charoflist[novid,real(chnum)]); for (i=_lc-1;i&gt;=0;i-=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(chnum)],i);
                    if (instance_exists(_inst)) {_inst.dest=1; if (!_finst||nowait) {_inst.ntell=0;} _finst=0; ds_list_delete(novdat.charoflist[novid,real(chnum)],i);}}
                        if (_lc&gt;0) {waitingForComplete=1;}} else {crinst=1; bin=0; for (i=0;i&lt;ds_list_size(novdat.charoflist[novid,real(chnum)]);i+=1) {
                            _inst=ds_list_find_value(novdat.charoflist[novid,real(chnum)],i); if (instance_exists(_inst)) {if (crinst==chid) {bin=1;
                            _inst.dest=1; if (nowait) {_inst.ntell=0;} if (isSkip) {_pers.alpha=0;} ds_list_delete(novdat.charoflist[novid,real(chnum)],i);} crinst+=1;}} if (bin) {waitingForComplete=1;}} chid=-1;}}}
        if (global.debug) {with (objGUI_chat) {chat_add_color("Hiding character: 'char"+string(other.chnum)+"'",c_purple);}}}
    else if (string_copy(fstr,1,string_length("if bool"))=="if bool") {blnum=string_get_snumber(fstr,string_length("if bool")+1);
        if (blnum!="") {if (real(blnum)&lt;=novdat.boolCount[novid] &amp;&amp; real(blnum)&gt;0) {shdef=string_digits(string_copy(fstr,string_length("if bool ")+1+string_length(blnum),1)); if (shdef!="") {
            if (novdat.bool[novid,real(blnum)]==real(shdef)) {statReading=1;} else {global.curLine+=1; progress+=1; file_text_readln(inRead_R); while (fstr!="end" &amp;&amp; !file_text_eof(inRead_R)) {
                fstr=file_text_read_string(inRead_R); if (string_copy(fstr,1,string_length(" "))==" ") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,1,_count);
                    if (string_copy(_ph,string_length(_ph),1)!=" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxSpaceCount) {break;}}}
                    if (_ph!="") {fstr=string_copy(fstr,string_length(_ph)+1,string_length(fstr)-string_length(_ph));}} global.curLine+=1; progress+=1; file_text_readln(inRead_R);}}}}}}
    else if (string_copy(fstr,1,string_length("if integer"))=="if integer") {blnum=string_get_sstring(fstr,string_length("if integer")+1);
        if (blnum!="") {___val = ds_map_find_value(integers,"integer"+blnum); /*notcen_add('',string(___val)+" "+string(real(___val)));*/ if (!is_undefined(___val)) {if (string_copy(fstr,string_length("if integer ")+string_length(blnum)+1,2)=="&gt; ") {
                shdef=(string_copy(fstr,string_length("if integer &gt; ")+1+string_length(blnum),string_length(fstr)-string_length("if integer &lt; ")-string_length(blnum))); if (shdef!="") {
                if (/*novdat.integer[novid,real(blnum)]*/real(___val)&gt;real(shdef)) {statReading=1;} else {global.curLine+=1; progress+=1; file_text_readln(inRead_R); while (fstr!="end" &amp;&amp; !file_text_eof(inRead_R)) {
                    fstr=file_text_read_string(inRead_R); if (string_copy(fstr,1,string_length(" "))==" ") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,1,_count);
                        if (string_copy(_ph,string_length(_ph),1)!=" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxSpaceCount) {break;}}}
                        if (_ph!="") {fstr=string_copy(fstr,string_length(_ph)+1,string_length(fstr)-string_length(_ph));}} global.curLine+=1; progress+=1; file_text_readln(inRead_R);}}}}
            else if (string_copy(fstr,string_length("if integer ")+string_length(blnum)+1,2)=="&lt; ") {
                shdef=(string_copy(fstr,string_length("if integer &lt; ")+1+string_length(blnum),string_length(fstr)-string_length("if integer &lt; ")-string_length(blnum))); if (shdef!="") {
                if (/*novdat.integer[novid,real(blnum)]*/real(___val)&lt;real(shdef)) {statReading=1;} else {global.curLine+=1; progress+=1; file_text_readln(inRead_R); while (fstr!="end" &amp;&amp; !file_text_eof(inRead_R)) {
                    fstr=file_text_read_string(inRead_R); if (string_copy(fstr,1,string_length(" "))==" ") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,1,_count);
                        if (string_copy(_ph,string_length(_ph),1)!=" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxSpaceCount) {break;}}}
                        if (_ph!="") {fstr=string_copy(fstr,string_length(_ph)+1,string_length(fstr)-string_length(_ph));}} global.curLine+=1; progress+=1; file_text_readln(inRead_R);}}}}
            else if (string_copy(fstr,string_length("if integer ")+string_length(blnum)+1,2)=="&lt;=") {
                shdef=(string_copy(fstr,string_length("if integer &lt;= ")+1+string_length(blnum),string_length(fstr)-string_length("if integer &lt;= ")-string_length(blnum))); if (shdef!="") {
                if (/*novdat.integer[novid,real(blnum)]*/real(___val)&lt;=real(shdef)) {statReading=1;} else {global.curLine+=1; progress+=1; file_text_readln(inRead_R); while (fstr!="end" &amp;&amp; !file_text_eof(inRead_R)) {
                    fstr=file_text_read_string(inRead_R); if (string_copy(fstr,1,string_length(" "))==" ") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,1,_count);
                        if (string_copy(_ph,string_length(_ph),1)!=" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxSpaceCount) {break;}}}
                        if (_ph!="") {fstr=string_copy(fstr,string_length(_ph)+1,string_length(fstr)-string_length(_ph));}} global.curLine+=1; progress+=1; file_text_readln(inRead_R);}}}}
            else if (string_copy(fstr,string_length("if integer ")+string_length(blnum)+1,2)=="&gt;=") {
                shdef=(string_copy(fstr,string_length("if integer &lt;= ")+1+string_length(blnum),string_length(fstr)-string_length("if integer &lt;= ")-string_length(blnum))); if (shdef!="") {
                if (/*novdat.integer[novid,real(blnum)]*/real(___val)&gt;=real(shdef)) {statReading=1;} else {global.curLine+=1; progress+=1; file_text_readln(inRead_R); while (fstr!="end" &amp;&amp; !file_text_eof(inRead_R)) {
                    fstr=file_text_read_string(inRead_R); if (string_copy(fstr,1,string_length(" "))==" ") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,1,_count);
                        if (string_copy(_ph,string_length(_ph),1)!=" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxSpaceCount) {break;}}}
                        if (_ph!="") {fstr=string_copy(fstr,string_length(_ph)+1,string_length(fstr)-string_length(_ph));}} global.curLine+=1; progress+=1; file_text_readln(inRead_R);}}}}
            else if (string_copy(fstr,string_length("if integer ")+string_length(blnum)+1,2)=="= ") {
                shdef=(string_copy(fstr,string_length("if integer = ")+1+string_length(blnum),string_length(fstr)-string_length("if integer = ")-string_length(blnum))); if (shdef!="") {
                if (/*novdat.integer[novid,real(blnum)]*/real(___val)==real(shdef)) {statReading=1;} else {global.curLine+=1; progress+=1; file_text_readln(inRead_R); while (fstr!="end" &amp;&amp; !file_text_eof(inRead_R)) {
                    fstr=file_text_read_string(inRead_R); if (string_copy(fstr,1,string_length(" "))==" ") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,1,_count);
                        if (string_copy(_ph,string_length(_ph),1)!=" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxSpaceCount) {break;}}}
                        if (_ph!="") {fstr=string_copy(fstr,string_length(_ph)+1,string_length(fstr)-string_length(_ph));}} global.curLine+=1; progress+=1; file_text_readln(inRead_R);}}}}
            else if (string_copy(fstr,string_length("if integer ")+string_length(blnum)+1,2)=="==") {
                shdef=(string_copy(fstr,string_length("if integer == ")+1+string_length(blnum),string_length(fstr)-string_length("if integer == ")-string_length(blnum))); if (shdef!="") {
                if (/*novdat.integer[novid,real(blnum)]*/real(___val)==real(shdef)) {statReading=1;} else {global.curLine+=1; progress+=1; file_text_readln(inRead_R); while (fstr!="end" &amp;&amp; !file_text_eof(inRead_R)) {
                    fstr=file_text_read_string(inRead_R); if (string_copy(fstr,1,string_length(" "))==" ") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,1,_count);
                        if (string_copy(_ph,string_length(_ph),1)!=" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxSpaceCount) {break;}}}
                        if (_ph!="") {fstr=string_copy(fstr,string_length(_ph)+1,string_length(fstr)-string_length(_ph));}} global.curLine+=1; progress+=1; file_text_readln(inRead_R);}}}}
            else {shdef=(string_copy(fstr,string_length("if integer ")+1+string_length(blnum),string_length(fstr)-string_length("if integer ")-string_length(blnum))); if (shdef!="") {
            //notcen_add('',string(real(shdef)));
            if (/*novdat.integer[novid,real(blnum)]*/real(___val)==real(shdef)) {statReading=1;} else {global.curLine+=1; progress+=1; file_text_readln(inRead_R); while (fstr!="end" &amp;&amp; !file_text_eof(inRead_R)) {
                fstr=file_text_read_string(inRead_R); if (string_copy(fstr,1,string_length(" "))==" ") {blnum=""; bldef=""; num="_"; _count=1; while (num!="") {_ph=string_copy(fstr,1,_count);
                    if (string_copy(_ph,string_length(_ph),1)!=" ") {_ph=string_copy(_ph,1,string_length(_ph)-1); num="";} else {_count+=1; if (_count&gt;=global.maxSpaceCount) {break;}}}
                    if (_ph!="") {fstr=string_copy(fstr,string_length(_ph)+1,string_length(fstr)-string_length(_ph));}} global.curLine+=1; progress+=1; file_text_readln(inRead_R);}}}}}}}
    else if (string_copy(fstr,1,string_length("end"))=="end") {if (statReading) {statReading=0;}}
    else if (string_copy(fstr,1,string_length("dead end"))=="dead end") {if (file_exists(inRead)) {file_text_close(inRead_R);
        if (global.debug) {with (objGUI_chat) {chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}} game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;}
    else if (string_copy(fstr,1,string_length("game end"))=="game end") {if (file_exists(inRead)) {file_text_close(inRead_R);
        if (global.debug) {with (objGUI_chat) {chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}} game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;}
    else {cmd=string_get_sstring(fstr,1); if (string_length(fstr)&gt;string_length(cmd)+2 &amp;&amp; cmd!="") {if (string_copy(fstr,string_length(cmd)+2,1)=='"') {
            chnum=person_exists(cmd); if (chnum!=-1) {phrase=string_copy(fstr,string_length(cmd+' "')+1,string_length(fstr)-string_length(cmd+' "')-1); if (phrase!="") {
                    _actor=novdat.dchar[novid,real(chnum)]; global.diWindow=dialwin; dialog_text(0,noone,_actor,phrase); dialog_customize(isdialpos,dialposx,dialposy,dialwin,dialcolor,dialoutcl,dialfull);
                    dialog_acolor(0,novdat.charclr[novid,real(chnum)],novdat.charoutclr[novid,real(chnum)]); dialog_deadend(1); waitingForComplete=1;}
                } else {if (rEnd==2) {rEnd=3;} if (global.debug) {with (objGUI_chat) {chat_add_color("Unknown action: '"+string(other.fstr)+"'",c_red);}}}
            } else {cmd1=string_get_sstring(fstr,string_length(cmd)+2); if (string_copy(cmd1,1,string_length("setstate")) == "setstate") {cmd3=string_copy(fstr,string_length(cmd)+string_length(cmd1)+3,string_length(fstr)-(string_length(cmd)+string_length(cmd1)+2));
                if (cmd3!="") {//__obj = ds_map_find_value(objScene.objects,cmd); if (!is_undefined(__obj)) {for (_i=0;_i&lt;__obj.acount;_i+=1) {if (sprite_exists(__obj.aimage[_i])) {sprite_delete(__obj.aimage[_i]);}} __obj.acount=0; __obj.sprState=cmd2; with (__obj) {person_alarm0();}}
                    chnum=person_exists(cmd); if (chnum!=-1) {if (chid==-1) {_pers=novdat.charperson[novid,real(chnum)];
                    if (instance_exists(_pers)) {with (_pers) {sprState=other.cmd3; for (i=0;i&lt;acount;i+=1) {if (sprite_exists(aimage[i])) {sprite_delete(aimage[i]);}} acount=0; person_alarm0();}}} else {
                        if (chid==0) {_finst=1; _lc=ds_list_size(novdat.charoflist[novid,real(chnum)]); for (i=_lc-1;i&gt;=0;i-=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(chnum)],i);
                            if (instance_exists(_inst)) {with (_inst) {sprState=other.cmd3; for (i=0;i&lt;acount;i+=1) {if (sprite_exists(aimage[i])) {sprite_delete(aimage[i]);}} acount=0; person_alarm0();}}}}
                        else {crinst=1; bin=0; for (i=0;i&lt;ds_list_size(novdat.charoflist[novid,real(chnum)]);i+=1) {_inst=ds_list_find_value(novdat.charoflist[novid,real(chnum)],i); if (instance_exists(_inst)) {if (crinst==chid) {
                            with (_inst) {sprState=other.cmd3; for (i=0;i&lt;acount;i+=1) {if (sprite_exists(aimage[i])) {sprite_delete(aimage[i]);}} acount=0; person_alarm0();}} crinst+=1;}}} chid=-1;}}}
                } else {if (rEnd==2) {rEnd=3;} if (global.debug) {with (objGUI_chat) {chat_add_color("Unknown action: '"+string(other.fstr)+"'",c_red);}}}}
        } else {if (rEnd==2) {rEnd=3;} if (global.debug) {with (objGUI_chat) {chat_add_color("Unknown action: '"+string(other.fstr)+"'",c_red);}}}}
    if (nodelay) {nowait=1; if (!waitingForComplete) {rc=0;} else {/*if (fdelay) {*/nodelay=0; nowait=0; rc+=1;/*} else {rc=0;}*/ fdelay=1; waitingForComplete=0;}} else {fdelay=0; rc+=1;
        if (nowait) {if (waitingForComplete) {waitingForComplete=0; norwait=0; nowait=0;}} else {if (global.timeSpend&lt;31) {if (!instance_exists(global.nvBack)) {global.timeSpend=31;}}}}}
    
if (isSkip) {alarm[0]=global.nSkipRate;} else {alarm[0]=global.nRefreshRate;}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.inGame) {instance_destroy();} if (!global.gameIsLoaded) {exit;}
/*if (!isSkip) {if (_alarmStep&gt;global.nRefreshRate*2) {_alarmStep=0; alarm[0]=1;}}
else {if (_alarmStep&gt;global.nSkipRate*2) {_alarmStep=0; alarm[0]=1;}} _alarmStep+=1;
if (canDoSkip) {if (keyboard_check_pressed(vk_control)) {cPressed=1;}} else {cPressed=0; isSkip=0;}
if (global.timeSpend&lt;31) {global.timeSpend+=1;}*/

if (!novdat.isObsolete[novid]) {if (inRead_l!=scenario) {isSkip=0; cPressed=0; nowait=global.nowaitset; waitingForComplete=0;
    if (instance_exists(objSNv_wait)) {with (objSNv_wait) {instance_destroy();}}}
if (novelstep&lt;global.nRefreshRate) {novelstep+=1*Time.deltatime;} else {novelstep=0; if (!novdat.isObsolete[novid]) {_alarmStep=0;
if (!waitingForComplete) {while (!waitingForComplete) {//novel_checkfile();
    if (!waitingForComplete) {if (inRead_l!=scenario) {if (_file != -1) {file_text_close(_file); ds_map_clear(linecache); _file = -1;
        if (global.debug) {with (objGUI_chat) {chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}}
    
    if (filename_ext(scenario) == "") {scenario+=".nsdat";} if (!file_exists(current_directory()+novdat.FolName[novid]+scenario)) {
    if (file_exists(current_directory()+novdat.FolName[novid]+"episodes\"+scenario)) {scenario="episodes\"+scenario;}
    else if (file_exists(current_directory()+novdat.FolName[novid]+"scenario\"+scenario)) {scenario="scenario\"+scenario;}
    else if (file_exists(current_directory()+novdat.FolName[novid]+"scenarios\"+scenario)) {scenario="scenarios\"+scenario;}
    else if (file_exists(current_directory()+novdat.FolName[novid]+"script\"+scenario)) {scenario="script\"+scenario;}
    else if (file_exists(current_directory()+novdat.FolName[novid]+"scripts\"+scenario)) {scenario="scripts\"+scenario;}}
    inRead_l=scenario;
    
    inRead=current_directory()+novdat.FolName[novid]+inRead_l; progress=0; _nss_progress=0;
    if (global.debug) {with (objGUI_chat) {chat_add_color("Opening scenario '"+other.inRead_l+"'...",c_gray);}}
    if (global.debug) {with (objGUI_chat) {chat_add_color("Directory: '...\"+novdat.FolName[other.novid]+other.inRead_l+"'.",c_gray);}}
    if (file_exists(inRead)) {_file=file_text_open_read(inRead); ds_map_clear(ifline); ds_list_clear(ifs); if (_file == -1) {
            notcen_add("E","Scenario doesn't exists."); game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);}
            else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;}
        else {if (global.debug) {with (objGUI_chat) {chat_add_color("Scenario was loaded successfully!",c_gray);}}}
    } else {notcen_add("E","Scenario doesn't exists."); game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);}
        else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); exit;}}}
    
    if (_file != -1 &amp;&amp; inRead_l!="") {
    //if (global.dChoosen!=-1) {fstr=chact[global.dChoosen]; progress=chProgress; _nss_progress=chProgress; global.dChoosen=-1;}
    if (global.dChoosen!=-1) {__value=ds_list_find_value(_questions,global.dChoosen); __progress=real(string_get_tillsymbol(__value,1," "));
        while (_nss_progress&lt;__progress) {/*file_text_readln(_file);*/ _nss_progress+=1; progress+=1;} global.dChoosen=-1;}
    __gettingfromcache=0; if (ds_map_exists(linecache,_nss_progress)) {__value=ds_map_find_value(linecache,_nss_progress);
        if (!is_undefined(__value)) {fstr=__value; __gettingfromcache=1;}}
    if (!noread) {if (!__gettingfromcache) {fstr=file_text_read_string(_file);} global.curLine+=1; progress+=1;} else {noread=0;}
    if (_file!=-1 &amp;&amp; inRead_l!="") {show_debug_message(fstr); novelsomescript(fstr,id);}
    
    if (file_text_eof(_file) &amp;&amp; !noread &amp;&amp; !waitingForComplete &amp;&amp; !__gettingfromcache) {if (_filetexteof&gt;0) {
        if (global.debug) {with (objGUI_chat) {chat_add_color("Closing scenario '"+other.inRead_l+"'...",c_gray);}}
        file_text_close(_file); ds_map_clear(linecache); _file=-1; game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);}
        else {global.nEDid=novid; global.isNExists=novid; room_goto(room_editor);} instance_destroy(); break;} else {_filetexteof=1;}}
    
    if (nowait) {if (waitingForComplete) {waitingForComplete=0; norwait=0; nowait=global.nowaitset;}}
    if (!noread) {if (!__gettingfromcache) {file_text_readln(_file);} _nss_progress+=1;}
    
    } else {notcen_add("E","Scenario doesn't exists.");
        game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {global.nEDid=novid;
            global.isNExists=novid; room_goto(room_editor);} instance_destroy(); break;}}}
    
/*if (isSkip) {alarm[0]=global.nSkipRate;} else {alarm[0]=global.nRefreshRate;}*/} if (_filetexteof&gt;0) {_filetexteof-=1;}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_crTime=get_timer(); if (_crTime &gt; global.tiNoStart &amp;&amp; novid!=-1) {_prefix=novdat.prefix[novid];
    flname=""; if (_prefix=="") {if (!novdat.isObsolete[novid]) {
            flname=string_replace_all(novdat.FolderName[novid],"/","."); flname=string_replace_all(flname,"\",".");}
        else {ini_open(novdat.FName[novid]); flname=ini_read_string("NOVELDATA","Folder",""); if (flname=="") {
                flname=ini_read_string("NOVELDATA","FolderName",""); if (flname=="") {flname=_hName;}} ini_close();}}
    csini_open(current_directory()+"\Data\ndb\"+_prefix+flname+".nsldb");
    _nTime=csini_read_real(global.uniqueNumber,"timeplayed",0);
    csini_write_real(global.uniqueNumber,"timeplayed",_nTime+(_crTime-global.tiNoStart)); csini_close();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
