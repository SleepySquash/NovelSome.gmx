<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha=0; dest=0; image=noone; image_path=""; alarm[0]=1; mvar=global.charOMove_n; imp=0; rpath="";
telled=0; moffx=0; moffy=0; telled2=0; pos=""; dist=""; posx=0; xrev=1; yrev=1; dox=0; doy=0;
shDepth=0; fadein=global.stanFade; fadeout=global.stanFade; fadeinmax=1; ntell=1; cranim="";
waitingForComplete=0; xmoving=0; ymoving=0; lastanim=""; xoff=0; _time1=0; nwsync=0; sisscreen=0;
animation_init(); cuposx=0; cuposy=0; cuscale=1; fd=0; sprState=""; acount=0; s_ofx=0; s_ofy=0; sycentered=0;
statearrayc=0; _linkedas=""; doalarm=1; nogamenolife=0; initidepth=0;
sparallax=0.01; ssdepth=-90; spset=0; ssset=0; sosx=0; sosy=0; sncount=1; sint=1; sfint=1; ssscale=1; real_hview=view_hview;
novid=-1; if (instance_exists(novel)) {novid=novel.novid;} else {if (room==room_editor) {novid=objEditor.novid;}} wasAnimated=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_exists(image)) {sprite_delete(image);}
for (i=0;i&lt;acount;i+=1) {if (sprite_exists(aimage[i])) {sprite_delete(aimage[i]);}}
if (ntell) {if (instance_exists(novel)) {novel.waitingForComplete=0;}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>animation_produce();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (doalarm) {person_alarm0();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room!=room_editor) {if (!global.inGame) {instance_destroy(); exit;} if (!global.gameIsLoaded) {exit;}}
if (global.resChanged) {if (bnum!=-1) {if (novid!=-1) {if (acount&gt;0) {
        for (i=0;i&lt;acount;i+=1) {if (canres[i] &amp;&amp; sprite_exists(aimage[i])) {rofx=sprite_get_width(aimage[i])/2; sheight=sprite_get_height(aimage[i]);
            if (sheight&lt;=real_hview*(sheight/(sheight*sscale[i]))) {rofy=sheight;} else {rofy=real_hview*(sheight/(sheight*sscale[i]));}
            sprite_set_offset(aimage[i],rofx,rofy);}}} else {
    if (sprite_exists(image)) {_ofx=sprite_get_width(image)/2; sheight=sprite_get_height(image); if (sheight&lt;=real_hview*(sheight/(sheight*cuscale))) {_ofy=sheight;} else {_ofy=real_hview*(sheight/(sheight*cuscale));}
        if (bnum!=-1) {if (novid!=-1) {if (dist=='close') {if (novdat.charimg_closeoffx_set[novid,bnum]) {
            _ofx=novdat.charimg_closeoffx[novid,bnum];} if (novdat.charimg_closeoffy_set[novid,bnum]) {
            _ofy=novdat.charimg_closeoffy[novid,bnum];}} else if (dist=='normal') {if (novdat.charimg_normaloffx_set[novid,bnum]) {
            _ofx=novdat.charimg_normaloffx[novid,bnum];} if (novdat.charimg_normaloffy_set[novid,bnum]) {
            _ofy=novdat.charimg_normaloffy[novid,bnum];}} else if (dist=='far') {if (novdat.charimg_faroffx_set[novid,bnum]) {
            _ofx=novdat.charimg_faroffx[novid,bnum];} if (novdat.charimg_faroffy_set[novid,bnum]) {
            _ofy=novdat.charimg_faroffy[novid,bnum];}}}} sprite_set_offset(image,_ofx,_ofy);}}}}}
if (novid!=-1) {if (string(novdat.charanim[novid,bnum])!=string(lastanim)) {if (bnum!=-1) {
    if (string(novdat.charanim[novid,bnum])=="clear") {
        novdat.charanim[novid,bnum]=""; xoff=0; yoff=0; animated=0;}
    if (string(novdat.charanim[novid,bnum])=="stop") {novdat.charanim[novid,bnum]=""; animated=0;}} lastanim=novdat.charanim[novid,bnum];}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room==room_editor) {instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room!=room_editor) {if (!global.inGame) {instance_destroy(); exit;} if (!global.gameIsLoaded) {exit;}} if (imp) {
    if (!dest) {if (alpha&lt;fadeinmax &amp;&amp; !fd) {if (!global.gamePause) {alpha+=fadein*Time.deltatime; if (alpha&gt;1) {alpha=1;}}} else {fd=1;
    if (!areseted) {if (bnum!=-1) {if (novid!=-1) {novdat.charanim[novid,bnum]="";}} areseted=1;}
    if (!global.gamePause) {if (!telled) {if (instance_exists(novel)) {novel.waitingForComplete=0;} telled=1;}}}} else {
    if (alpha&gt;0) {if (!global.gamePause) {alpha-=fadeout*Time.deltatime; if (alpha&lt;0) {alpha=0;}}} else {instance_destroy(); exit;}} if (alpha&gt;0) {
    for (i=0;i&lt;acount;i+=1) {if (sprite_exists(aimage[i])) {depth = initidepth+sdepth[i]+shDepth;
        moffx=-(view_wview*parallax[i]/2)+(mouse_x-view_xview)*parallax[i]; moffy=(mouse_y-view_yview)*parallax[i];
        texture_set_interpolation(interpolation[i]); _extyy=0; if (ycentered[i]) {_extyy = -view_hview/2-yoff-sprite_get_height(aimage[i])/2;}
        draw_sprite_ext(aimage[i],-1,view_xview+view_wview/2+moffx+posx+cuposx+xoff+dox+indxoff[i],view_yview+view_hview+moffy+cuposy+yoff+doy+_extyy+indyoff[i],xrev*cuscale*xscale*sscale[i],yrev*cuscale*yscale*sscale[i],0,c_white,alpha);}}}
        texture_set_interpolation(global.isInterpolation);
} else {if (!sprite_exists(image)) {if (!telled) {if (instance_exists(novel)) {novel.waitingForComplete=0;} telled=1;} 
    exit;} if (!dest) {if (alpha&lt;fadeinmax &amp;&amp; !fd) {if (!global.gamePause) {alpha+=fadein*Time.deltatime; if (alpha&gt;1) {alpha=1;}}} else {fd=1;
    if (!areseted) {if (bnum!=-1) {if (novid!=-1) {novdat.charanim[novid,bnum]="";}} areseted=1;}
    if (!global.gamePause) {if (!telled) {if (instance_exists(novel)) {novel.waitingForComplete=0;} telled=1;}}}} else {
    if (alpha&gt;0) {if (!global.gamePause) {alpha-=fadeout*Time.deltatime; if (alpha&lt;0) {alpha=0;}}} else {if (sprite_exists(image)) {sprite_delete(image);} instance_destroy();}}
if (sprite_exists(image)) {depth = initidepth+shDepth;
    moffx=-(view_wview*mvar/2)+(mouse_x-view_xview)*mvar; moffy=(mouse_y-view_yview)*mvar;
    draw_sprite_ext(image,-1,view_xview+view_wview/2+moffx+posx+cuposx+xoff+dox,view_yview+view_hview+moffy+cuposy+yoff+doy,xrev*cuscale*xscale,yrev*cuscale*yscale,0,c_white,alpha);}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
