<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9997</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>objDialBack_create();

needzoom=0;
alph=0; dShowed=1;
dialogueDrawing=0;
timetoskip=0; quscanned=0;
timeVar=0; t=0; tdest=0; nowIsShowing=1;
audioPlaying=0; dest=0; fdelete=0;
doupd=1; _isqu=0; _qutype=0; _spk=""; _choices=0;

fullSize=0;
NBoxOpacity=0;
NBoxOpacity_max=1;
NBox_opacity_gain=0.1;

global.dChoosen=-1;
global.curDiag=-1; rst=0; lastdiag=-1; diagcount=0;
// border vars
border_opacity = 0.9;
border_color1 = c_white;
border_color2 = c_black;

// dialog vars
speed_press = 4;
speed_normal = 2;
button[0] = ord('C');
button[1] = vk_space;
button[2] = vk_enter;
mbutton[0] = mb_left;

// panel
panel_init(sprDial_box,c_dkgray);

box_opacity=.0;

name_color=c_yellow;

//Some vars
dialog = "";
speaker = "";
txt = "";
txt_speed = 0;
diag = 0;
opacity=0;
choice=0;
chosen=0;
qts=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fontToDraw)
draw_set_valign(-1)
if (!global.inGame) {instance_destroy(); exit;} if (!instance_exists(global.dialog)) {exit;}
if (!fullSize) {rtext_offx=text_offx; rtext_offy=text_offy;
    if (global.dialOffFromCenter) {rtext_offx=view_wview/2+text_offx;}
    if (global.dialOffFromCenter) {rtext_offy=box_height-box_height/2+text_offy;}}
else {rtext_offx=ftext_offx; rtext_offy=ftext_offy;
    if (global.dialFOffFromCenter) {rtext_offx=view_wview/2+ftext_offx;}
    if (global.dialFOffFromCenter) {rtext_offy=view_hview/2+ftext_offy;}}

if (tdest) {if (opacity&gt;0) {opacity-=box_opacity_gain*Time.deltatime; /*NBoxOpacity-=NBox_opacity_gain;*/} else {instance_destroy();}} else {
    if (nowIsShowing) {if (dShowed) {if (opacity&lt;max_opacity) {opacity+=box_opacity_gain*Time.deltatime;
        if (opacity&gt;max_opacity) {opacity=max_opacity;}}} else {if (opacity&gt;0) {opacity-=box_opacity_gain*Time.deltatime;}}}
    else {if (opacity&gt;0) {opacity-=box_opacity_gain*Time.deltatime;}}}
draw_set_alpha(opacity)

if (doupd) {_isqu=global.dialog.is_question[global.dialog.diag]; _qutype=global.dialog.qutype[global.dialog.diag]; _spk=global.dialog.speaker[global.dialog.diag];
    if (_isqu) {_choices=global.dialog.choices[global.dialog.diag];
        if (_qutype) {if (!quscanned) {for (i=0;i&lt;_choices;i+=1) {_ch[i]=global.dialog.choice[global.dialog.diag,i];}}}}}

if (!fullSize) {global.__panel=global.dialBox; if (_isqu) {draw_set_font(fontToDraw);
    if (_qutype == 1) {if (!quscanned) {_mw=20; _my=string_height('A')*_choices+20; for (i=0;i&lt;_choices;i+=1) {
        if (string_width(_ch[i])+20&gt;_mw) {_mw=string_width(_ch[i])+20;}} quscanned=1;}
        panel_draw(view_xview+view_wview/2-_mw/2,view_yview+view_hview/2-_my/2,view_xview+view_wview/2+_mw/2,view_yview+view_hview/2+_my/2,diOutColor,diColor);}
    else {panel_draw(view_xview+box_offx,view_yview+view_hview-box_offy-box_height,view_xview+view_wview-box_offx,view_yview+view_hview-box_offy,diOutColor,diColor);}
} else {panel_draw(view_xview+box_offx,view_yview+view_hview-box_offy-box_height,view_xview+view_wview-box_offx,view_yview+view_hview-box_offy,diOutColor,diColor);}}
else {global.__panel=global.dialFullbox; panel_draw(view_xview+view_wview-fbox_offx,view_yview+view_hview-fbox_offy,view_xview+fbox_offx,view_yview+fbox_offy,diOutColor,diColor);}
// TEXT BOX BORDER
draw_set_alpha(opacity);
if _isqu=0
{
    draw_set_alpha(opacity)
    
    // NAME BOX
    if is_string(_spk)
    {
    if _spk != ""
    {//draw_set_alpha(NBoxOpacity)
        //draw_roundrect_color(view_xview+box_offx,view_yview+view_hview-box_offy-box_height-name_off,view_xview+box_offx+name_width,view_yview+view_hview-box_offy-box_height-name_off-name_height,box_color,box_color,0)
        global.__panel=global.dialNamebox; uoffx=0; //if (instance_exists(conn)) {if (speaker[diag]==conn.name) {uoffx=view_wview-box_offx*2-name_width;}}
        crnamewidth=name_width; if (string_width(_spk)+16&gt;name_width) {crnamewidth=string_width(_spk)+16;}
        crnameheight=name_height; if (string_height(_spk)+4&gt;name_height) {crnameheight=string_height(_spk)+4;}
        panel_draw(view_xview+box_offx+nbox_offx+rtext_offx,view_yview+view_hview-box_offy-box_height-name_off-crnameheight,view_xview+box_offx+nbox_offx+rtext_offx+crnamewidth+uoffx,view_yview+view_hview-box_offy-box_height-name_off,diOutColor,diColor)
    }
    }
    draw_set_alpha(opacity)
    
    // NAME BOX BORDER
    //if speaker[diag] != ""
    {
        //draw_roundrect_color(view_xview+box_offx,view_yview+view_hview-box_offy-box_height-name_off-1,view_xview+box_offx+name_width,view_yview+view_hview-box_offy-box_height-name_off-name_height,border_color1,border_color1,1)
        //draw_roundrect_color(view_xview+box_offx-1,view_yview+view_hview-box_offy-box_height-name_off,view_xview+box_offx+name_width+1,view_yview+view_hview-box_offy-box_height-name_off-name_height-1,border_color2,border_color2,1)
    }
}

if (dest) {if (t&lt;1) {t+=1*Time.deltatime;} else {tdest=1;}} draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OBSOLETE
/*draw_set_font(Neucha18)
draw_set_valign(-1)
if (!global.inGame) {instance_destroy(); exit;} if (!instance_exists(global.dialog)) {exit;}

if (tdest) {if (opacity&gt;0) {opacity-=box_opacity_gain;} else {instance_destroy();}} else {if (opacity&lt;max_opacity) {opacity+=box_opacity_gain;}}
draw_set_alpha(opacity)

if (global.dialog.is_question[global.dialog.diag]) {draw_set_font(Neucha18);
    if (global.dialog.qutype[global.dialog.diag]) {if (!quscanned) {_mw=20; _my=string_height('A')*global.dialog.choices[global.dialog.diag]+20; for (i=0;i&lt;global.dialog.choices[global.dialog.diag];i+=1) {
        if (string_width(global.dialog.choice[global.dialog.diag,i])+20&gt;_mw) {_mw=string_width(global.dialog.choice[global.dialog.diag,i])+20;}} quscanned=1;}
        panel_draw(view_xview+view_wview/2-_mw/2,view_yview+view_hview/2-_my/2,view_xview+view_wview/2+_mw/2,view_yview+view_hview/2+_my/2);}
    else {panel_draw(view_xview+box_offx,view_yview+view_hview-box_offy-box_height,view_xview+view_wview-box_offx,view_yview+view_hview-box_offy);}
} else {panel_draw(view_xview+box_offx,view_yview+view_hview-box_offy-box_height,view_xview+view_wview-box_offx,view_yview+view_hview-box_offy);}
// TEXT BOX BORDER
draw_set_alpha(opacity);
if global.dialog.is_question[global.dialog.diag]=0
{
    draw_set_alpha(opacity)
    
    // NAME BOX
    if is_string(global.dialog.speaker[global.dialog.diag])
    {
    if global.dialog.speaker[global.dialog.diag] != ""
    {
        //draw_roundrect_color(view_xview+box_offx,view_yview+view_hview-box_offy-box_height-name_off,view_xview+box_offx+name_width,view_yview+view_hview-box_offy-box_height-name_off-name_height,box_color,box_color,0)
        uoffx=0; //if (instance_exists(conn)) {if (speaker[diag]==conn.name) {uoffx=view_wview-box_offx*2-name_width;}}
        panel_draw(view_xview+box_offx+uoffx,view_yview+view_hview-box_offy-box_height-name_off-name_height,view_xview+box_offx+name_width+uoffx,view_yview+view_hview-box_offy-box_height-name_off)
    }
    }
    draw_set_alpha(opacity)
    
    // NAME BOX BORDER
    //if speaker[diag] != ""
    {
        //draw_roundrect_color(view_xview+box_offx,view_yview+view_hview-box_offy-box_height-name_off-1,view_xview+box_offx+name_width,view_yview+view_hview-box_offy-box_height-name_off-name_height,border_color1,border_color1,1)
        //draw_roundrect_color(view_xview+box_offx-1,view_yview+view_hview-box_offy-box_height-name_off,view_xview+box_offx+name_width+1,view_yview+view_hview-box_offy-box_height-name_off-name_height-1,border_color2,border_color2,1)
    }
}

if (dest) {if (t&lt;1) {t+=1;} else {tdest=1;}} draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
