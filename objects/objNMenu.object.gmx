<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hyy=0; _ftm=0; etype=0; selPage=0; dprd=-1; linited=0; alarm[0]=1;
mouse_clear(mb_middle); trTo=0; lastTr=0; goToMenu=0; goToEditor=0; goToStore=0; alpha=0; eSpr=noone; waitForAnswer=0; bSpr=global.menuBackgroundBlur;
if (global.cNovel_id&lt;0 || global.cNovel_id&gt;global.novelCount) {room_goto(room_menu); exit;} _tLogin=global.username; _tPassword="";
novid=global.cNovel_id; if (!global.menuInited) {global.shMSetYY=1;} backobj=noone; options_init(); lchanged=0;
global.shMExpaned=novid; global.lRMenu=room_nmenu; alCan=0; menutype=0; drglow=0; ximg=0.8; yimg=0.8;
alphab=1; alpha2=0; alpha1=0; drglow=0; flowout=0; f=0; alph1=0; fstate=0; _backoff=1.35; alpha3=1; t=0; tact=0; hf=0; hft=0; mPlaying=0;
if (global.shMType!=0) {if (global.shMType==4) {etype=2; trTo=2; lastTr=2;}} global.shMType=1; __tried=0; drawmenubackground=0; playnomusic=0;
novelsomescript_logicinit();

window_reset_size(); drelement_init();

if (global.menuInited) {fstate=2; alpha1=1; _backoff=clamp(1+0.15-(0.2*alpha1),1,2); f=2; flowout=1; alCan=1;}
sprWelcome=noone; sprWelcomeblur=noone;
if (!global.menuInited) {sprWelcome=sprite_add(working_directory+"Stuff\Sprites\Interface\Welcome.png",1,0,0,0,0);
    if (sprite_exists(sprWelcome)) {sprite_set_offset(sprWelcome,sprite_get_width(sprWelcome)/2,sprite_get_height(sprWelcome)/2);}
        else {sprWelcome=noone; fstate=2; alpha1=1; _backoff=clamp(1+0.15-(0.2*alpha1),1,2); f=2; flowout=1; alCan=1;}}

/*if (global.gameBundle==-1) {if (!sprite_exists(global.menuBackground)) {global.menuBackground=sprite_add(working_directory+global.mBack_path,1,0,0,0,0);
    if (sprite_exists(global.menuBackground)) {
        sprite_set_offset(global.menuBackground,sprite_get_width(global.menuBackground)/2,sprite_get_height(global.menuBackground)/2);}}
if (!sprite_exists(global.menuBackgroundBlur)) {global.menuBackgroundBlur=sprite_add(working_directory+global.mBackBlur_path,1,0,0,0,0);
    if (sprite_exists(global.menuBackgroundBlur)) {
        sprite_set_offset(global.menuBackgroundBlur,sprite_get_width(global.menuBackgroundBlur)/2,sprite_get_height(global.menuBackgroundBlur)/2);}}}*/

tpName=novdat.Name[novid];
tpMusic=novdat.Music[novid]; tpMPreview=novdat.MusicPreview[novid]; tpBack=novdat.Background[novid]; tpFolName=novdat.FolName[novid];

if (global.menuInited) {if (tpMusic!="") {if (music_get_playing()!=tpFolName+"\"+tpMusic) {music_play_path(tpFolName+"\"+tpMusic);
        objMusic.ch=3; if (!global.musicIs) {objMusic.ch=6;} music_set_seek(tpMPreview);}} else {
    if (music_get_playing()!=global.menuMusic) {music_play_path(global.menuMusic); music_set_seek(global.musicMStart);}} mPlaying=1;}
if (!global.menuInited) {global.menuInited=1;}

global.savCount=120; for (i=1;i&lt;=global.savCount;i+=1) {thspr[i]=noone;}
lastWidth=global.winSW; lastHeight=global.winSH; global.wSW=global.winSW; global.wSH=global.winSH;
lastFS=window_get_fullscreen(); global.gRChanged=0; if (novdat.isObsolete[novid]) {ini_open(novdat.FName[novid]);
    global.savCount=ini_read_real("EVENT:INIT","MaxSaveCount",120); for (i=1;i&lt;=global.savCount;i+=1) {thspr[i]=noone;}
    novdat.wSize_w[novid]=ini_read_real("EVENT:INIT","WindowWidth",global.winSW);
        novdat.wSize_h[novid]=ini_read_real("EVENT:INIT","WindowHeight",global.winSH);
        if (novdat.wSize_w[novid]!=global.winSW||novdat.wSize_h[novid]!=global.winSH) {window_set_fullscreen(0);
            if (display_support_size(novdat.wSize_w[novid],novdat.wSize_h[novid])) {global.wSH=novdat.wSize_h[novid]; global.wSW=novdat.wSize_w[novid]; global.gRChanged=1;
                window_set_size(novdat.wSize_w[novid],novdat.wSize_h[novid]); view_wview=novdat.wSize_w[novid]; view_hview=novdat.wSize_h[novid];} else {
            if (window_get_width()&lt;novdat.wSize_w[novid]) {ratio=novdat.wSize_h[novid]/novdat.wSize_w[novid];
                novdat.wSize_w[novid]=window_get_width()-10; novdat.wSize_h[novid]=novdat.wSize_w[novid]*ratio;}
            if (window_get_height()&lt;novdat.wSize_h[novid]) {ratio=novdat.wSize_w[novid]/novdat.wSize_h[novid];
                novdat.wSize_h[novid]=window_get_height()-10; novdat.wSize_w[novid]=novdat.wSize_h[novid]*ratio;}
            global.wSH=novdat.wSize_h[novid]; global.wSW=novdat.wSize_w[novid]; global.gRChanged=1;
            window_set_size(novdat.wSize_w[novid],novdat.wSize_h[novid]); view_wview=novdat.wSize_w[novid]; view_hview=novdat.wSize_h[novid];}
        game_center();}
ini_close();} else {if (ds_map_exists(novdat.events[novid],"novelmenustart")) {nss_extbegin(); noread=0;
    _file = file_text_open_read(novdat.FName[novid]); _isReading=0; while (!file_text_eof(_file)) {if (!_isReading) {
        while (!_isReading) {if (file_text_eof(_file)) {break;} fstr = file_text_read_string(_file);
            while (string_copy(fstr,1,1) == " ") {if (string_length(fstr)&lt;=1) {break;} else {fstr = string_copy(fstr,2,string_length(fstr)-1);}}
            if (string_lower(string_copy(fstr,1,string_length("void novelmenustart"))) == "void novelmenustart") {_isReading = 1;}
            file_text_readln(_file); _nss_progress+=1;}
        } else {if (!noread) {fstr = file_text_read_string(_file);} else {noread=0;}
            while (string_copy(fstr,1,1) == " ") {if (string_length(fstr)&lt;=1) {break;} else {fstr = string_copy(fstr,2,string_length(fstr)-1);}}
            if (string_lower(string_copy(fstr,1,string_length("end"))) == "end") {_isReading = 0;}
            else if (string_lower(string_copy(fstr,1,string_length("void "))) == "void ") {
                if (string_lower(string_copy(fstr,string_length("void ")+1,string_length(fstr)-string_length("void "))) != "novelmenustart") {_isReading = 0;}}
            else {novelsomescript(other.fstr,init);}
            if (!noread) {file_text_readln(_file); _nss_progress+=1;}}}
    file_text_close(_file); nss_extend();}}
_pass=0; if (lastWidth!=global.winSW || lastHeight!=global.winSH) {_pass=1;} uchar_savenv(global.cNovel_id,global.cNovel,_pass);
linited=1; reload_nsmenu();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(objScr_gameInit)) {if ((lastWidth!=view_wview || lastHeight!=view_hview) &amp;&amp; !lastFS) {window_set_size(lastWidth,lastHeight); game_center();}
window_set_fullscreen(lastFS); global.wSW=global.winSW; global.wSH=global.winSH; if (sprite_exists(eSpr)) {sprite_delete(eSpr);} global.gRChanged=0;}
if (sprite_exists(sprWelcome)) {sprite_delete(sprWelcome);}
if (instance_exists(backobj)) {with (backobj) {instance_destroy();}}
drelement_clear(); ds_list_destroy(pagelist); ds_list_destroy(__ifs);
/*for (i=0;i&lt;elCount[999];i+=1) {switch (element[999,i]) {
        case "button": if (sprite_exists(elspr1[999,i])) {sprite_delete(elspr1[999,i]);}
            if (sprite_exists(elspr2[999,i])) {sprite_delete(elspr2[999,i]);} break;
        case "image": if (sprite_exists(elspr[999,i])) {sprite_delete(elspr[999,i]);} break;}}
for (i=0;i&lt;elCount[998];i+=1) {switch (element[998,i]) {
        case "button": if (sprite_exists(elspr1[998,i])) {sprite_delete(elspr1[998,i]);}
            if (sprite_exists(elspr2[998,i])) {sprite_delete(elspr2[998,i]);} break;
        case "image": if (sprite_exists(elspr[998,i])) {sprite_delete(elspr[998,i]);} break;}}
for (i=0;i&lt;elCount[997];i+=1) {switch (element[997,i]) {
        case "button": if (sprite_exists(elspr1[997,i])) {sprite_delete(elspr1[997,i]);}
            if (sprite_exists(elspr2[997,i])) {sprite_delete(elspr2[997,i]);} break;
        case "image": if (sprite_exists(elspr[997,i])) {sprite_delete(elspr[997,i]);} break;}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>button_set_clickble(!waitForAnswer); if (!goToMenu &amp;&amp; !goToEditor &amp;&amp; !goToStore) {if (trTo!=lastTr) {if (alpha&gt;0) {alpha-=0.22*Time.deltatime;} else {
    lastTr=trTo; isLoading=1; isReq=0; etype=trTo;}} else {if (alCan) {
    if (alpha&lt;1) {alpha+=0.12*Time.deltatime;}}}} else {if (instance_exists(backobj)) {backobj.dest=1; backobj.alpha=alpha;} if (alpha&gt;0) {alpha-=0.12*Time.deltatime; alpha1-=0.12*Time.deltatime;} else {
        if (goToMenu) {room_goto(room_menu);} if (goToEditor) {room_goto(room_editor);} if (goToStore) {room_goto(room_store);}}}
_pass=1; if (customMenu) {_pass=drawmenubackground;} if (!sprite_exists(eSpr) &amp;&amp; !instance_exists(backobj) &amp;&amp; _pass) {if (sprite_exists(bSpr)) {
    moffx=-(view_wview*0.008/2)+(mouse_x-view_xview)*0.008; moffy=-(view_hview*0.008/2)+(mouse_y-view_yview)*0.008;
    mbackx=(view_wview+(view_wview*0.008))/((sprite_get_width(bSpr))); mbacky=(view_hview+(view_hview*0.008))/((sprite_get_height(bSpr)));
    if (mbackx&gt;mbacky) {mbacky=mbackx;} else {mbackx=mbacky;}
    draw_sprite_ext(bSpr,-1,view_xview+view_wview/2+moffx,view_yview+view_hview/2+moffy,mbackx*_backoff,mbacky*_backoff,0,c_white,alpha1);}
    else {if (!__tried) {
        if (!sprite_exists(global.menuBackground)) {global.menuBackground=sprite_add(current_directory()+global.mBack_path,1,0,0,0,0);
            if (sprite_exists(global.menuBackground)) {sprite_set_offset(global.menuBackground,sprite_get_width(global.menuBackground)/2,sprite_get_height(global.menuBackground)/2);}}
        if (!sprite_exists(global.menuBackgroundBlur)) {global.menuBackgroundBlur=sprite_add(current_directory()+global.mBackBlur_path,1,0,0,0,0);
            if (sprite_exists(global.menuBackgroundBlur)) {sprite_set_offset(global.menuBackgroundBlur,sprite_get_width(global.menuBackgroundBlur)/2,sprite_get_height(global.menuBackgroundBlur)/2);}}
        __tried=1;}}}
if (sprite_exists(eSpr)) {moffx=-(view_wview*0.008/2)+(mouse_x-view_xview)*0.008; moffy=-(view_hview*0.008/2)+(mouse_y-view_yview)*0.008; alphmod=2;
    mbackx=(view_wview+(view_wview*global.backOMove))/((sprite_get_width(eSpr)));
    mbacky=(view_hview+(view_hview*global.backOMove))/((sprite_get_height(eSpr)));
    if (mbackx&gt;mbacky) {mbacky=mbackx;} else {mbackx=mbacky;}
    draw_sprite_ext(eSpr,-1,view_xview+view_wview/2+moffx,view_yview+view_hview/2+moffy,mbackx*_backoff,mbacky*_backoff,0,c_white,alpha1);}

if (!goToMenu &amp;&amp; !goToEditor &amp;&amp; !goToStore) {if (fstate&gt;=1) {if (flowout==1) {if (_backoff&gt;1) {_backoff-=0.01*Time.deltatime;} if (f==0) {if (alpha1&lt;1) {alpha1+=0.025*Time.deltatime;} //_backoff=clamp(1+0.15-(0.2*alpha1),1,2);
    if (alpha1&gt;=0.45) {f=1;}} else {if (alpha1&lt;1) {alpha1+=0.025*Time.deltatime;}} if (f==1) {if (t&lt;5) {t+=1*Time.deltatime;} else {f=2;}}
    if (f==2) {if (alpha3&gt;0) {alpha3-=0.05*Time.deltatime;} else {f=3;}}  if (menutype!=0) {flowout=2; if (!global.isGit) {if (!instance_exists(social)) {instance_create(0,0,social);}} f=3;
    if (!playnomusic) {if (!mPlaying &amp;&amp; !instance_exists(objScr_gameInit)) {if (tpMusic!="") {
        if (music_get_playing()!=tpFolName+"\"+tpMusic) {
            music_play_path(tpFolName+"\"+tpMusic); music_set_seek(tpMPreview);}}
        else {if (music_get_playing()!=global.menuMusic) {music_play_path(global.menuMusic);
            music_set_seek(global.musicMStart);}} mPlaying=1;}}}
    if (alpha1&gt;=0.8 &amp;&amp; _backoff&lt;=1.15) {alCan=1; if (alpha2&lt;1) {alpha2+=0.05*Time.deltatime;}} if (alpha2&gt;=1 &amp;&amp; alpha1&gt;=1) {if (!global.isGit) {if (!instance_exists(social)) {instance_create(0,0,social);}} flowout=2;}} else {
    if (alpha2&lt;1) {alpha2+=0.05*Time.deltatime;} if (alpha1&lt;1) {alpha1+=0.05*Time.deltatime;} alCan=1;}
if (f&gt;=2) {if (!flowout) {if (winActive) {if (alphab&lt;1) {alphab+=0.09;} if (_backoff&gt;1) {_backoff=min(_backoff,_backoff-0.001*Time.deltatime);}}
    else {if (_backoff&lt;1.07) {_backoff=max(_backoff,_backoff+0.0005*Time.deltatime);} if (alphab&gt;0) {alphab-=0.01*Time.deltatime;}}}}}}

if (!goToMenu &amp;&amp; !goToEditor &amp;&amp; !goToStore) {if ((keyboard_check_pressed(vk_enter) || mouse_check_button_pressed(mb_left)) &amp;&amp; fstate&lt;2) {
    fstate=2; alpha1=1; alCan=1; f=2; _backoff=clamp(1+0.15-(0.2*alpha1),1,2); alph1=0; flowout=1;}
if (fstate&gt;=3) {if (alphab&gt;0) {alphab-=0.05*Time.deltatime;}}
if (fstate==0) {if (alph1&lt;1) {alph1+=0.02*Time.deltatime;} if (alph1&gt;=1) {fstate=1;}}
if (alph1&gt;0) {if (fstate&lt;=0) {ximg+=0.0015*Time.deltatime; yimg+=0.0015*Time.deltatime; if (alph1&gt;=0.5) {drglow=1;}} else {ximg+=0.0010*Time.deltatime; yimg+=0.0010*Time.deltatime;}
    if (alph1&gt;=0.2) {if (flowout==0) {flowout=1;}}}
if (fstate&gt;=1) {if (alphab&gt;0) {alphab-=0.05*Time.deltatime;} if (!playnomusic) {
    if (!mPlaying &amp;&amp; !instance_exists(objScr_gameInit)) {if (tpMusic!="") {
        if (music_get_playing()!=tpFolName+"\"+tpMusic) {music_play_path(tpFolName+"\"+tpMusic); music_set_seek(tpMPreview);}} else {
        if (music_get_playing()!=global.menuMusic) {music_play_path(global.menuMusic); music_set_seek(global.musicMStart);}} mPlaying=1;}}}
if (fstate==1) {_ftm+=1*Time.deltatime; if (_ftm&gt;=12) {fstate=2;}}
if (fstate==2) {if (alph1&gt;0) {alph1-=0.05*Time.deltatime;} if (alph1&lt;=0) {fstate=3;
    if (sprite_exists(sprWelcome)) {sprite_delete(sprWelcome);} if (sprite_exists(sprWelcomeblur)) {sprite_delete(sprWelcomeblur);}}}
draw_set_alpha(alphab); draw_rectangle_color(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,c_black,c_black,c_black,c_black,0); draw_set_alpha(1); draw_set_alpha(1);
if (sprite_exists(sprWelcome)) {draw_sprite_ext(sprWelcome,-1,view_xview+view_wview/2,view_yview+view_hview/2,ximg,yimg,0,c_white,alph1);}
if (drglow) {if (sprite_exists(sprWelcomeblur)) {draw_sprite_ext(sprWelcomeblur,0,view_xview+view_wview/2,view_yview+view_hview/2,ximg,yimg,0,c_white,alph1-0.5);}}}

button_set_clickble(alpha&gt;=1);
draw_set_alpha(((alpha*255)*0.376)/255); if (etype==0) {width=400;
draw_roundrect_colour(view_xview+view_wview/2-width/2,view_yview+view_hview/2-hyy/2,view_xview+view_wview/2+width/2,view_yview+view_hview/2+hyy/2,c_black,c_black,0);} else {
draw_roundrect_colour(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,c_black,c_black,0);} draw_set_alpha(alpha);

if (etype==0) {if (customMenu) {draw_nsmenu();} if (elCPage==1) {
    draw_text_set(Pacifica28,c_white,fa_center,fa_middle);
    if (global.gatesEnabled) {if (global.hInited) {if (!global.loggedIn) {if (button_outback(view_xview+view_wview/2,view_yview+string_height("A")/2+5,lang.not_logged_in+" &gt;",global.mButtonClr,global.mButtonOutClr,c_black,0)) {trTo=2;}
    ab=view_yview+string_height("A")+6; draw_text_set(Neucha18,c_white,fa_center,fa_top);
    draw_text_outline_ext(view_xview+view_wview/2,ab,lang.not_logged_in_note,c_red,c_white);}
    else {if (button_outback(view_xview+view_wview/2,view_yview+string_height("A")/2+5,lang.you_are+" "+global.username+" &gt;",global.mButtonClr,global.mButtonOutClr,c_black,0)) {goToStore=1;} strh=string_height("A");
        draw_text_set(Pacifica21,c_white,fa_center,fa_middle); if (instance_exists(social)) {draw_text_outline(view_xview+view_wview/2,view_yview+strh+18,get_status(social.status));}}
    } else {if (instance_exists(social)) {button_set_clickble(0);}
    if (button_outback(view_xview+view_wview/2,view_yview+string_height("A")/2+5,lang.connecting_to+" Heaven's Gates...",global.mButtonClr,global.mButtonOutClr,c_black,0)) {global.trToConnect=0; instance_create(0,0,social);} button_set_clickble(1);}}
    //else {button_set_clickble(0); if (button_outback(view_xview+view_wview/2,view_yview+string_height("A")/2+5,"Heaven's Gates "+lang.disabled,global.mButtonClr,global.mButtonOutClr,c_black,0)) {} button_set_clickble(1);}
    button_set_clickble(alpha&gt;=1);}

    button_set_clickble(lastTr==0); draw_text_set(Century20,c_white,fa_center,fa_top);
    if (global.gameBundle != global.cNovel_id) {if (button_outback(view_xview+10+string_width("&lt; "+lang.exit_to_menu)/2,view_yview+10+string_height("A")/2,"&lt; "+lang.exit_to_menu,c_white,c_dkgray,c_black,0)) {goToMenu=1;}}
    if (!customMenu) {yyh=view_hview/2-hyy/2+string_height("A")/2; syy=yyh; draw_text_set(Pacifica39,c_white,fa_center,fa_top);
    draw_text_outline(view_xview+view_wview/2,view_yview+yyh-string_height("A")-39,novdat.Name[novid]); draw_text_set(Pacifica28,c_white,fa_center,fa_top);
    if (button_outback(view_xview+view_wview/2,view_yview+yyh+string_height("A")/2,lang.play,c_white,c_dkgray,c_black,0)) {global.isTesting=0; game_init(novid);} yyh+=string_height("A")+5
    if (button_outback(view_xview+view_wview/2,view_yview+yyh+string_height("A")/2,lang.load,c_white,c_dkgray,c_black,0)) {for (ii=1;ii&lt;=global.savCount;ii+=1) {if (sprite_exists(thspr[ii])) {sprite_delete(thspr[ii]);}} trTo=1;} yyh+=string_height("A")+5
    if (button_outback(view_xview+view_wview/2,view_yview+yyh+string_height("A")/2,lang.edit,c_white,c_dkgray,c_black,0)) {goToEditor=1; global.nEDid=novid; global.isNExists=novid;} yyh+=string_height("A")*2+10
    if (button_outback(view_xview+view_wview/2,view_yview+yyh+string_height("A")/2,"&lt; "+lang.exit_to_menu,c_white,c_dkgray,c_black,0)) {goToMenu=1;} yyh+=string_height("A")+5
    if (button_outback(view_xview+view_wview/2,view_yview+yyh+string_height("A")/2,lang.sexit,c_white,c_dkgray,c_black,0)) {game_end();} yyh+=string_height("A") hyy=yyh-syy+20;}}

if (etype==5) {trTo=0; elCPage=elTPage;}

if (etype==1) {button_set_clickble(lastTr==1); draw_set_alpha(alpha); draw_nsmenu();
    draw_text_set(Century20,c_white,fa_center,fa_top);
    if (global.gameBundle != global.cNovel_id) {if (button_outback(view_xview+10+string_width("&lt; "+lang.exit_to_menu)/2,view_yview+10+string_height("A")/2,"&lt; "+lang.exit_to_menu,c_white,c_dkgray,c_black,0)) {goToMenu=1;}}
    novid=global.cNovel_id; gpalpha=alpha/2; savemode=0; if (linited) {draw_saves();}
    if (mouse_check_button_pressed(mb_right) &amp;&amp; !cUnder) {for (ii=1;ii&lt;=global.savCount;ii+=1) {if (sprite_exists(thspr[ii])) {sprite_delete(thspr[ii]);}} trTo=0;} draw_text_set(Pacifica28,c_white,fa_center,fa_top);
    if (button_outback(view_xview+view_wview/2,view_yview+view_hview-string_height("A")-10,"&lt; "+lang.back,c_white,c_dkgray,c_black,0)) {trTo=0;
        for (ii=1;ii&lt;=global.savCount;ii+=1) {if (sprite_exists(thspr[ii])) {sprite_delete(thspr[ii]);}} mouse_clear(mb_left);} yyh+=string_height("A")+5;}

if (etype==3) {alpha3=alpha; draw_set_alpha(alpha3); draw_nsmenu();
    if (!mtpskin) {if (mouse_check_button_pressed(mb_right)) {if (!mtpres) {trTo=0; uchar_save();} else {mtpres=0;} mouse_clear(mb_right);}}
    draw_options();}

if (etype==4) {draw_set_alpha(alpha); if (mouse_check_button_pressed(mb_right)) {if (lchanged) {story_scan(); reload_nsmenu(); uchar_save(); lchanged=0;} trTo=0;}
    draw_nsmenu(); draw_text_set(Pacifica28,c_white,fa_center,fa_top); yyh=-20;
    if (global.localisation=="English") {_c1=c_lime; _c2=c_gray;} else {_c1=c_white; _c2=c_dkgray;}
    if (button_outback(view_xview+view_wview/2,view_yview+view_hview/2+yyh,"English",_c1,_c2,c_black,0)) {lchanged=1; global.localisation="English";} yyh+=string_height("A")+5;
    if (global.localisation=="Русский") {_c1=c_lime; _c2=c_gray;} else {_c1=c_white; _c2=c_dkgray;}
    if (button_outback(view_xview+view_wview/2,view_yview+view_hview/2+yyh,"Русский",_c1,_c2,c_black,0)) {lchanged=1; global.localisation="Русский";} yyh+=string_height("A")+5;
    draw_text_set(Pacifica28,c_white,fa_center,fa_middle);
    if (button_outback(view_xview+view_wview/2,view_yview+view_hview-string_height("A")/2-5,"&lt; "+lang.back,global.mButtonClr,global.mButtonOutClr,c_black,0)) {if (lchanged) {story_scan(); reload_nsmenu(); uchar_save(); lchanged=0;} trTo=0;}}

if (etype==2) {button_set_clickble(lastTr==2); if (mouse_check_button_pressed(mb_right)) {trTo=0;} if (etype==2) {if (!waitForAnswer) {button_set_clickble(1);}
        else {button_set_clickble(0);}} else {button_set_clickble(0);}
    if (!global.loggedIn) {yh=-60; draw_text_set(Pacifica28,c_white,fa_center,fa_top); _str=lang.your_username; if (_tLogin!="" &amp;&amp; _tLogin!=".") {_str=_tLogin;}
        strw=string_width(_str); draw_text_set(Pacifica16,c_white,fa_center,fa_top);
        draw_text_outline(view_xview+view_wview/2-70,view_yview+280+yh,lang.username+": "); yh+=string_height("A")+4;
        draw_text_set(Pacifica28,c_white,fa_center,fa_top);
        if (button_outback(view_xview+view_wview/2,view_yview+280+yh+string_height("A")/2,_str,c_orange,global.mButtonOutClr,c_black,1)) {
            window_set_fullscreen(0); gts=get_string(lang.type_your_username+": ",_tLogin); if (gts!="") {_tLogin=gts;}} yh+=string_height("A")+8;
        draw_text_set(Pacifica28,c_white,fa_center,fa_top); _str=lang.your_password; if (_tPassword!="" &amp;&amp; _tPassword!=".") {_str="********";}
        strw=string_width(_str); draw_text_set(Pacifica16,c_white,fa_center,fa_top);
        draw_text_outline(view_xview+view_wview/2-70,view_yview+280+yh,lang.password+": "); yh+=string_height("A")+4;
        draw_text_set(Pacifica28,c_white,fa_center,fa_top);
        if (button_outback(view_xview+view_wview/2,view_yview+280+yh+string_height("A")/2,_str,c_orange,global.mButtonOutClr,c_black,1)) {
            window_set_fullscreen(0); gts=get_string(lang.type_your_password+": ",_tPassword); if (gts!="") {_tPassword=gts;}} yh+=string_height("A")+8;
        if (button_outback(view_xview+view_wview/2-string_width(lang.register)/2-10,view_yview+280+yh+string_height("A")/2,lang.login,c_aqua,global.mButtonOutClr,c_black,1)) {
            global.username=_tLogin; global.password=_tPassword;
            if (global.username!="" &amp;&amp; string_count(" ",global.username)!=string_length(global.username) &amp;&amp; global.password!="" &amp;&amp; string_count(" ",global.password)!=string_length(global.password)) {
                client_send_login(global.username,global.password);}}
        if (button_outback(view_xview+view_wview/2+string_width(lang.login)/2+10,view_yview+280+yh+string_height("A")/2,lang.register,c_aqua,global.mButtonOutClr,c_black,1)) {
            global.username=_tLogin; global.password=_tPassword;
            if (global.username!="" &amp;&amp; string_count(" ",global.username)!=string_length(global.username) &amp;&amp; global.password!="" &amp;&amp; string_count(" ",global.password)!=string_length(global.password)) {
                client_send_register(global.username,global.password); waitForAnswer=1;}} yh+=string_height("A")+8;
        draw_text_set(Pacifica16,c_white,fa_center,fa_top);
        if (pointbutton(view_xview+view_wview/2,view_yview+280+yh+string_height("A")/2,lang.remember_login,global.mButtonClr,global.mButtonOutClr,c_black,global.remUsername,1)) {global.remUsername=!global.remUsername;} yh+=string_height("A")+4;
        if (pointbutton(view_xview+view_wview/2,view_yview+280+yh+string_height("A")/2,lang.remember_password,global.mButtonClr,global.mButtonOutClr,c_black,global.remPassword,1)) {global.remPassword=!global.remPassword;}}
    else {draw_text_set(Pacifica28,c_white,fa_center,fa_top); goToStore=1;}
    draw_text_set(Pacifica28,c_white,fa_center,fa_middle);
    if (button_outback(view_xview+view_wview/2,view_yview+view_hview-string_height("A")/2-5,"&lt; "+lang.back,global.mButtonClr,global.mButtonOutClr,c_black,0)) {trTo=0; mouse_clear(mb_left);}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
