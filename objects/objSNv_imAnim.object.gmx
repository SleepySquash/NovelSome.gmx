<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha=0; dest=0; alarm[0]=1; pt=0;
telled=0; tabout=1; bnum=-1;
animation_init(); anim=""; timeLeft=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (tabout &amp;&amp; !anotell &amp;&amp; !atelled) {if (instance_exists(novel)) {novel.waitingForComplete=0;}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!animated) {exit;} if (nwsync) {cond=(waitingForComplete);} else {cond=1;}
if (wtime&gt;0) {if (_wtm&lt;wtime) {_wtm+=1;} else {_wtm=0; waitingForComplete=0; wtime=0;}}
if (cond) {if (xmoving) {if (_time1&lt;timeLeft) {xoff+=xmcon; _time1+=1;} else {xmoving=0; _time1=0; waitingForComplete=0;}}
if (ymoving) {if (_time2&lt;timeLeft) {yoff+=ymcon; _time2+=1;} else {ymoving=0; _time2=0; waitingForComplete=0;}}
if (afading) {if (_time3&lt;timeLeft) {alpha+=fspd; _time3+=1;} else {afading=0; _time3=0; waitingForComplete=0;}}}
if (waitingForComplete) {alarm[1]=1; exit;} else {if (nwsync) {nwsync=0;}} if (crline&gt;=lineCount) {
    if (!atelled &amp;&amp; !anotell) {if (instance_exists(novel)) {novel.waitingForComplete=0;} atelled=1;} animated=0;
        instance_destroy(); exit;} crstr=line[crline]; shline=1;
if (string_copy(crstr,1,string_length("repeat start"))=="repeat start") {if (crline+1&lt;lineCount) {
    if (string_copy(line[crline+1],1,string_length('repeat count '))=='repeat count ') {
        _rcon=string_digits(string_copy(line[crline+1],string_length('repeat count ')+1,string_length(line[crline+1])-string_length('repeat count ')));
            if (_rcon!="") {repCount=real(_rcon); if (crline+2&lt;lineCount) {isRepeat=1; rLine=crline+2;}}} else {repCount=0; rLine=crline+1; isRepeat=1;}}}
else if (string_copy(crstr,1,string_length("repeat end"))=="repeat end") {if (isRepeat) {if (repCount&lt;=0) {crline=rLine; alarm[1]=1; exit;}
    else {repCur+=1; if (repCur&gt;=repCount) {isRepeat=0; repCur=0;} else {crline=rLine; alarm[1]=1; exit;}}}}
else if (string_copy(crstr,1,string_length("nowait sync"))=="nowait sync") {nowait=1; nwsync=1;}
else if (string_copy(crstr,1,string_length("animation nowait"))=="animation nowait") {if (!atelled &amp;&amp; !anotell) {if (instance_exists(novel)) {novel.waitingForComplete=0;} atelled=1;}}
else if (string_copy(crstr,1,string_length("nowait"))=="nowait") {nowait=1; nwsync=0;}
else if (string_copy(crstr,1,string_length("wait "))=="wait ") {hmany=string_digits(string_copy(line[crline],string_length('wait ')+1,global.maxDigitCount));
    if (hmany!="") {wtime=real(hmany); waitingForComplete=1;}}
if (nowait) {if (waitingForComplete) {waitingForComplete=0; nowait=0;}}
crline+=shline; alarm[1]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.inGame) {instance_destroy(); exit;} if (!global.gameIsLoaded) {alarm[0]=1; exit;} if (string(anim)!="") {
    isok=animation_storevar_path(string(anim)); if (isok) {animated=1; alarm[1]=1;} else {instance_destroy();}} else {instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.inGame) {instance_destroy(); exit;} if (!global.gameIsLoaded) {exit;}
if (currentAnim!=lastanim) {if (string(currentAnim)=="clear") {xoff=0; yoff=0; animated=0;}
    if (string(currentAnim)=="stop") {animated=0;} lastanim=currentAnim;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
