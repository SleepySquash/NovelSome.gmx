<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha=0; dest=0; global.btCl1=0; line=-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.btCl1=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.btCl1=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!dest) {if (alpha&lt;1) {alpha+=0.2;}} else {global.btCl1=1; if (alpha&gt;0) {alpha-=0.2;} else {instance_destroy();}}
if (room!=room_editor) {instance_destroy(); exit;}

global.btCl1=1; if (mouse_check_button_pressed(mb_right)) {dest=1;}
draw_set_alpha(alpha/3); draw_rectangle_colour(0,0,view_xview+view_wview,view_yview+view_hview,c_black,c_black,c_black,c_black,0); draw_set_alpha(alpha/1.6);
draw_rectangle_colour(view_xview+view_wview/2-250,view_yview+view_hview/2-170,view_xview+view_wview/2+250,view_yview+view_hview/2+170,c_black,c_black,c_black,c_black,0);
draw_rectangle_colour(view_xview+view_wview/2-250,view_yview+view_hview/2-170,view_xview+view_wview/2+250,view_yview+view_hview/2+170,c_white,c_white,c_white,c_white,1);
draw_set_alpha(alpha); draw_text_set(Pacifica21,c_white,fa_center,fa_middle); draw_text_outline_sep(view_xview+view_wview/2,view_yview+view_hview/2,"Имейте в виду, что изменение имени персонажа может привести к ошибкам в сценарии! Заменить все старые имена персонажа на новые в сценарии придётся самостоятельно!",500);
if (button_outback(view_xview+view_wview/2-20-string_width(lang.cancel)/2,view_yview+view_hview/2+160-string_height("A")/2,lang.scontinue,c_white,c_dkgray,c_black,0)) {
    with (objEditor) {gts=get_string("Укажите здесь имя",novdat.dchar[novid,chSel]); if (gts!="") {rlChan=1; novdat.dchar[novid,chSel]=gts; novdat.char[novid,chSel]=novdat.dchar[novid,chSel]; str=check_for_folder_availablen(novdat.char[novid,chSel]); if (str!="") {novdat.char[novid,chSel]=str;}
        tpCName_r=novdat.char[novid,chSel]; tpCName=novdat.dchar[novid,chSel]; pStr=tpCName_r;
        rnum=0; if (tpCharEnd&gt;=1) {for (i=1;i&lt;=tpCharEnd;i+=1) {if (i!=chSel) {if (string_copy(novdat.char[novid,i],1,string_length(pStr))==pStr) {if (string_length(novdat.char[novid,i])&gt;string_length(pStr)) {
            num=string_get_snumber(novdat.char[novid,i],string_length(pStr)+1); if (num!="") {if (real(num)+1&gt;rnum) {tpCName_r=tpCName+string(real(num)+1); pStr=tpCName_r; rnum=real(num)+1;}} else {/*tpCName_r=tpCName+"2"; pStr=tpCName_r;*/}} else {tpCName_r=tpCName+"2"; pStr=tpCName_r;}}}}}
        for (i=0;i&lt;1;i+=1) {if (tpPackStart[i]&lt;=tpCharCount) {for (ii=tpPackStart[i];ii&lt;tpPackEnd[i];ii+=1) {if (ii!=chSel) {if (string_copy(novdat.char[novid,ii],1,string_length(pStr))==pStr) {if (string_length(novdat.char[novid,ii])&gt;string_length(pStr)) {
            num=string_get_snumber(novdat.char[novid,ii],string_length(pStr)+1); if (num!="") {if (real(num)+1&gt;rnum) {tpCName_r=tpCName+string(real(num)+1); pStr=tpCName_r; rnum=real(num)+1;}} else {/*tpCName_r=tpCName+"2"; pStr=tpCName_r;*/}} else {tpCName_r=tpCName+"2"; pStr=tpCName_r;}}}}}}
        novdat.char[novid,chSel]=tpCName_r; novdat.dchar[novid,chSel]=tpCName;
        
        /*rnum=0; if (tpCharEnd&gt;=1) {for (i=1;i&lt;=tpCharEnd;i+=1) {if (i!=chSel) {if (string_copy(novdat.char[novid,i],1,string_length(novdat.dchar[novid,chSel]))==novdat.dchar[novid,chSel]) {if (string_length(novdat.char[novid,i])&gt;string_length(novdat.dchar[novid,chSel])) {
            num=string_get_snumber(novdat.char[novid,i],string_length(novdat.dchar[novid,chSel])+1); if (num!="") {if (real(num)+1&gt;rnum) {novdat.char[novid,chSel]=novdat.dchar[novid,chSel]+string(real(num)+1); rnum=real(num)+1;}} else {novdat.char[novid,chSel]=novdat.dchar[novid,chSel]+"2";}} else {novdat.char[novid,chSel]=novdat.dchar[novid,chSel]+"2";}}}}}
        for (i=0;i&lt;1;i+=1) {if (tpPackStart[i]&lt;=tpCharCount) {for (ii=tpPackStart[i];ii&lt;tpPackEnd[i];ii+=1) {if (ii!=chSel) {if (string_copy(novdat.char[novid,ii],1,string_length(novdat.dchar[novid,chSel]))==novdat.dchar[novid,chSel]) {if (string_length(novdat.char[novid,ii])&gt;string_length(novdat.dchar[novid,chSel])) {
            num=string_get_snumber(novdat.char[novid,ii],string_length(novdat.dchar[novid,chSel])+1); if (num!="") {if (real(num)+1&gt;rnum) {novdat.char[novid,chSel]=novdat.dchar[novid,chSel]+string(real(num)+1); rnum=real(num)+1;}} else {novdat.char[novid,chSel]=novdat.dchar[novid,chSel]+"2";}} else {novdat.char[novid,chSel]=novdat.dchar[novid,chSel]+"2";}}}}}}*/
        
        if (novdat.charf[novid,chSel]=="") {FS_ini_open(FS_current_directory()+"\Novels\"+tpFileName+".nsndat");
        FS_ini_write_string("EVENT:INIT","char"+string(chSel),novdat.char[novid,chSel]);
        FS_ini_write_string("EVENT:INIT","dchar"+string(chSel),novdat.dchar[novid,chSel]); FS_ini_close();} else {
        FS_file_copy(novdat.charf[novid,chSel],novdat.charf[novid,chSel]+".bak");
        file=FS_file_text_open_read(novdat.charf[novid,chSel]); lncount=0; while (!FS_file_text_eof(file)) {line[lncount]=FS_file_text_read_string(file); FS_file_text_readln(file); lncount+=1;}
        FS_file_text_close(file); file=FS_file_text_open_write(novdat.charf[novid,chSel]); FS_file_text_write_string(file,"DELETED"); FS_file_text_close(file);
        FS_file_delete(novdat.charf[novid,chSel]);
        novdat.charf[novid,chSel]=filename_path(novdat.charf[novid,chSel])+novdat.char[novid,chSel]+".nschar"; file=FS_file_text_open_write(novdat.charf[novid,chSel]);
        crl=0; nw=0; dw=0; repeat (lncount) {if (string_copy(line[crl],1,string_length("name "))=="name ") {nw=1; FS_file_text_write_string(file,"name "+novdat.char[novid,chSel]);}
            else if (string_copy(line[crl],1,string_length("dname "))=="dname ") {dw=1; FS_file_text_write_string(file,"dname "+novdat.dchar[novid,chSel]);}
            else {FS_file_text_write_string(file,line[crl]);} FS_file_text_writeln(file); crl+=1;}
        if (!nw) {FS_file_text_write_string(file,"name "+novdat.char[novid,chSel]); FS_file_text_writeln(file);}
        if (!dw) {FS_file_text_write_string(file,"dname "+novdat.dchar[novid,chSel]); FS_file_text_writeln(file);} FS_file_text_close(file);}
        
        }}
    dest=1; mouse_clear(mb_left);}
if (button_outback(view_xview+view_wview/2+20+string_width(lang.scontinue)/2,view_yview+view_hview/2+160-string_height("A")/2,lang.cancel,c_white,c_dkgray,c_black,0)) {dest=1; mouse_clear(mb_left);}
if (!dest) {global.btCl1=0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
