<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha=0; gpage=0; xxws=0; yyhs=0; selPage=0; lgpage=0; lpage=0;
sidepanel=0; sdpanel_alpha=0; sdpanel_x=0; saving=0; dprd=-1;
sdpanel_inv=0; hpalpha=0; hsnd=noone; waiting=0; cUnder=0; customMenu=0;
novelsomescript_logicinit(); drelement_init(); options_init();

fadein=0.1; fadeout=0.1;

dttime=0; global.isDialogue=0; global.isDiChoice=0;
lastisdi=0; quest=noone; __x=0; __y=0; customMenu=0; lastCustomMenu=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (skindat.drawGamePauseFrom != lastCustomMenu) {customMenu=0; if (skindat.drawGamePauseFrom=="") {drelement_clear(); lastCustomMenu="";}
    if (skindat.drawGamePauseFrom != "") {if (global.inGame &amp;&amp; global.gameIsLoaded) {if (instance_exists(novel)) {novid=novel.novid; if (novid!=-1) {
    drelement_clear(); drelement_reload(skindat.drawGamePauseFrom,0,"DrawGamePause","DrawGamePause"); firstScan=0;
    if (skindat.drawGamePauseFrom != "" &amp;&amp; customMenu) {_file = file_text_open_read(skindat.drawGamePauseFrom); if (_file != -1) {
    noread=0; _isReading=0; nss_extbegin(); nss_handle_logic(1);
        while (!file_text_eof(_file)) {if (!_isReading) {fstr=file_text_read_string(_file);
            while (string_copy(fstr,1,1) == " ") {if (string_length(fstr)&lt;=1) {fstr=""; break;} else {fstr = string_copy(fstr,2,string_length(fstr)-1);}}
            if (nss_check("void ")) {__void = string_copy(fstr,string_length("void ")+1,string_length(fstr)-string_length("void "));
                if (string_lower(__void) == "reload") {_isReading = 1;}}
            file_text_readln(_file); _nss_progress+=1;} else {
            if (!noread) {fstr=file_text_read_string(_file);} else {noread=0;}
            while (string_copy(fstr,1,1) == " ") {if (string_length(fstr)&lt;=1) {fstr=""; break;} else {fstr = string_copy(fstr,2,string_length(fstr)-1);}}
            if (nss_check("void ")) {__void = string_copy(fstr,string_length("void ")+1,string_length(fstr)-string_length("void "));
                if (string_lower(__void) != "reload") {_isReading = 0;}}
            else if (nss_check("end")) {if (ds_list_size(ifs)&lt;=0) {_isReading = 0;} else {novelsomescript(fstr,id);}} else {novelsomescript(fstr,id);}
            if (!noread) {file_text_readln(_file); _nss_progress+=1;}}}
        file_text_close(_file); nss_extend(); nss_handle_logic(0);}}
    lastCustomMenu=skindat.drawGamePauseFrom;}}}}}

if (waiting) {exit;} if (!global.btCl1) {exit;}
if (global.inGame &amp;&amp; global.gameIsLoaded) {
if (keyboard_check_pressed(vk_escape)) {if (!global.chat_open) {if (global.canGamePause) {global.gamePause=!global.gamePause; gpage=0; keyboard_clear(vk_escape);}}}
_pass=mouse_check_button_pressed(mb_right); if (!global.gamePause) {if (instance_exists(obj3DCamera)) {if (obj3DCamera.moveMouse == 1) {_pass=0;
    if (mouse_check_button_pressed(mb_right)) {__x=mouse_x; __y=mouse_y} if (mouse_check_button_released(mb_right)) {
        _pass = (mouse_x == __x &amp;&amp; mouse_y == __y);}}}}
if (_pass) {if (gpage!=0) {if (!cUnder) {gpage=0; mouse_clear(mb_right);}} else {
    if (!global.chat_open &amp;&amp; !global.trBack) {cp=1; for (hi=0;hi&lt;instance_number(objHUD);hi+=1) {_hud=instance_find(objHUD,hi);
            if (_hud.hud!="") {for (i=0;i&lt;_hud.elCount[_hud.elCPage];i+=1) {if (_hud.element[_hud.elCPage,i]=="mouse_pressed") {
                if (_hud.elmb[_hud.elCPage,i]==mb_right) {if (!global.gamePause) {cp=0;}}}}}}
        if (cp) {if (global.canGamePause) {global.gamePause=!global.gamePause; gpage=0; mouse_clear(mb_right);}}}}}}

if (instance_exists(objGUI_dialogue)) {
    global.isDialogue=1; dttime=0;
    global.isDiChoice=objGUI_dialogue.is_question[objGUI_dialogue.diag];
} else {if (dttime&lt;3) {dttime+=1;} else {global.isDialogue=0; global.isDiChoice=0;}}
//if (global.isDialogue != lastisdi) {notcen_add('N','DI CHANGE: '+string(global.isDialogue)); lastisdi=global.isDialogue;}

//if (drag_are()) {
//    if (typing_are()) {drag_set(0);}
//    if (global.gamePause) {drag_set(0);}
//    if (!instance_exists(global.idDrag)) {drag_set(0);}}
//if (!window_has_focus()) {drag_set(0);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>i_d = ds_map_find_value(async_load, "id");
if (i_d == quest) {waiting=0; if (ds_map_find_value(async_load, "status")) {saving=1;}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (waiting) {exit;}
if (saving) {_needlocal=0; if (global.gameBundle!=-1) {_savefolder="";} else {
    if (novdat.prefix[novel.novid]!="") {_savefolder = novdat.prefix[novel.novid];}
    else {_savefolder=string_replace_all(novdat.FolderName[novel.novid],"/","."); _needlocal=1;
        _savefolder=string_replace_all(_savefolder,"\","."); _savefolder="local\"+_savefolder;}}
    if (file_exists(current_directory()+"\Saves\"+_savefolder+"\Thumbnail"+string(savenum)+".png")) {
        ns_file_delete(current_directory()+"\Saves\"+_savefolder+"\Thumbnail"+string(savenum)+".png");}
    if (file_exists(current_directory()+"Saves\"+_savefolder+"\Save"+string(savenum)+".nsave")) {
        ns_file_delete(current_directory()+"Saves\"+_savefolder+"\Save"+string(savenum)+".nsave");}
    if (!directory_exists(current_directory()+"\Saves\")) {ns_directory_create(current_directory()+"\Saves\");}
    if (_needlocal) {if (!directory_exists(current_directory()+"\Saves\local\")) {ns_directory_create(current_directory()+"\Saves\local\");}}
    if (!directory_exists(current_directory()+"\Saves\"+_savefolder+"\")) {
        ns_directory_create(current_directory()+"\Saves\"+_savefolder+"\");}
    file=csfile_text_open_write(current_directory()+"\Saves\"+_savefolder+"\Save"+string(savenum)+".nsave");
    csfile_text_write_string(file,"novel "+string(novdat.Name[novel.novid])); csfile_text_writeln(file);
    csfile_text_write_string(file,"novelid "+string(novel.novid)); csfile_text_writeln(file);
    csfile_text_write_string(file,"version "+string(novdat.Version[novel.novid])); csfile_text_writeln(file);
    csfile_text_write_string(file,"scenario "+string(novel.scenario)); csfile_text_writeln(file);
    csfile_text_write_string(file,"progress "+string(novel._nss_progress)); csfile_text_writeln(file);
    if (global.skChanged_path!="") {csfile_text_write_string(file,"skinchanged path "+(global.skChanged_path)); csfile_text_writeln(file);
        csfile_text_write_string(file,"skinchanged isFN "+string(global.skChanged_isFN)); csfile_text_writeln(file);}
    if (ds_list_size(objGUI_trace.list)&gt;0) {
    csfile_text_write_string(file,"tr start"); csfile_text_writeln(file);
    draw_text_set(Neucha18,c_white,fa_left,fa_top); maxsize=1280/string_height("A")+1;
    if (maxsize&gt;ds_list_size(objGUI_trace.list)) {maxsize=ds_list_size(objGUI_trace.list);}
    for (i=0;i&lt;maxsize;i+=1) {csfile_text_write_string(file,ds_list_find_value(objGUI_trace.list,i)); csfile_text_writeln(file);}
    csfile_text_write_string(file,"tr end"); csfile_text_writeln(file);}
    csfile_text_write_string(file,"waiting "+string(novel.waitingForComplete)); csfile_text_writeln(file);
    if (novel.waitingForComplete) {if (instance_exists(objSNv_wait)) {_a=instance_find(objSNv_wait,0);
        csfile_text_write_string(file,"wait time "+string(_a.time)); csfile_text_writeln(file);
        csfile_text_write_string(file,"wait unlimited "+string(_a.unlimited)); csfile_text_writeln(file);}}
    ib=0; if (ds_map_size(novel.bools)&gt;0) {varnum=ds_map_find_first(novel.bools); ib+=1; vardef=ds_map_find_value(novel.bools,varnum);
        csfile_text_write_string(file,""+string(varnum)+" "+string(vardef)); csfile_text_writeln(file);} for (i=ib;i&lt;ds_map_size(novel.bools);i+=1) {
        varnum=ds_map_find_next(novel.bools,varnum); vardef=ds_map_find_value(novel.bools,varnum);
        csfile_text_write_string(file,""+string(varnum)+" "+string(vardef)); csfile_text_writeln(file);}
    ib=0; if (ds_map_size(novel.integers)&gt;0) {varnum=ds_map_find_first(novel.integers); ib+=1; vardef=ds_map_find_value(novel.integers,varnum);
        csfile_text_write_string(file,""+string(varnum)+" "+string(vardef)); csfile_text_writeln(file);} for (i=ib;i&lt;ds_map_size(novel.integers);i+=1) {
        varnum=ds_map_find_next(novel.integers,varnum); vardef=ds_map_find_value(novel.integers,varnum);
        csfile_text_write_string(file,""+string(varnum)+" "+string(vardef)); csfile_text_writeln(file);}
    ib=0; if (ds_map_size(novel.strings)&gt;0) {varnum=ds_map_find_first(novel.strings); ib+=1; vardef=ds_map_find_value(novel.strings,varnum);
        csfile_text_write_string(file,""+string(varnum)+" "+string(vardef)); csfile_text_writeln(file);} for (i=ib;i&lt;ds_map_size(novel.strings);i+=1) {
        varnum=ds_map_find_next(novel.strings,varnum); vardef=ds_map_find_value(novel.strings,varnum);
        csfile_text_write_string(file,""+string(varnum)+" "+string(vardef)); csfile_text_writeln(file);}
    ib=0; if (ds_map_size(novel.fontspath)&gt;0) {varnum=ds_map_find_first(novel.fontspath); ib+=1; vardef=ds_map_find_value(novel.fontspath,varnum);
        csfile_text_write_string(file,"fontn "+string(varnum)+" "+string(vardef)); csfile_text_writeln(file);} for (i=ib;i&lt;ds_map_size(novel.fontspath);i+=1) {
        varnum=ds_map_find_next(novel.fontspath,varnum); vardef=ds_map_find_value(novel.fontspath,varnum);
        csfile_text_write_string(file,"fontn "+string(varnum)+" "+string(vardef)); csfile_text_writeln(file);}
    if (ds_map_size(novel.links) &gt; 0) {csfile_text_write_string(file,"links start"); csfile_text_writeln(file);
        for (i=0;i&lt;ds_map_size(novel.links);i+=1) {if (i==0) {__find=ds_map_find_first(novel.links);}
            else {__find=ds_map_find_next(novel.links,__find);} __v=ds_map_find_value(novel.links,__find);
            if (!is_undefined(__v)) {_pass=1; if (!is_string(__v)) {if (ds_map_exists(novel.linkstype,__find)) {
                __v1=ds_map_find_value(novel.linkstype,__find); if (!is_undefined(__v1)) {if (string(__v1) == "instance") {_pass=0;}}}}
            if (_pass) {_opass=1; if (is_string(__v)) {if (ds_map_exists(novel.fonts,__v)) {__v1=ds_map_find_value(novel.fonts,__v);
                if (font_exists(__v1)) {_opass=0;}}} if (_opass) {
                csfile_text_write_string(file,string(is_string(__v))+' "'+__find+'" "'+string(__v)+'"'); csfile_text_writeln(file);}
                else {csfile_text_write_string(file,'2 "'+__find+'" "'+string(__v)+'" "'+string(font_get_size(__v1))+'" "'+string(font_get_bold(__v1))
+'" "'+string(font_get_italic(__v1))+'" "'+string(font_get_first(__v1))+'" "'+string(font_get_last(__v1))+'"'); csfile_text_writeln(file);}}}}
        csfile_text_write_string(file,"links end"); csfile_text_writeln(file);}
    csfile_text_write_string(file,"_isSkipping "+string(novel._isSkipping)); csfile_text_writeln(file);
    for (i=0;i&lt;ds_list_size(novel.ifs);i+=1) {csfile_text_write_string(file,"if"+string(i)+" elvar "+novel.elvar[i]); csfile_text_writeln(file);
        csfile_text_write_string(file,"if"+string(i)+" elact "+novel.elact[i]); csfile_text_writeln(file);
        csfile_text_write_string(file,"if"+string(i)+" elval "+novel.elval[i]); csfile_text_writeln(file);
        csfile_text_write_string(file,"if"+string(i)+" elisstring "+string(novel.elisstring[i])); csfile_text_writeln(file);}
    for (i=0;i&lt;ds_list_size(novel._nss_script);i+=1) {csfile_text_write_string(file,"_nss_script "+ds_list_find_value(novel._nss_script,i)); csfile_text_writeln(file);}
    if (instance_number(objSNv_background)&gt;0) {
    csfile_text_write_string(file,"backgrounddepth "+string(global.backgrounddepth*1000000000)); csfile_text_writeln(file);
    for (i=0;i&lt;instance_number(objSNv_background);i+=1) {aobj=instance_find(objSNv_background,i); if (instance_exists(aobj)) {
    if (!aobj.nogamenolife) {csfile_text_write_string(file,"background add "+string(aobj.rpath+aobj.rfname)); csfile_text_writeln(file);
        if (global.nvBack==aobj) {csfile_text_write_string(file,"b it's me, mario"); csfile_text_writeln(file);}
        if (aobj.backgroundDB!="") {csfile_text_write_string(file,"b backgroundDB "+string(aobj.backgroundDB)); csfile_text_writeln(file);}
        if (aobj._linkedas!="") {csfile_text_write_string(file,"b linked "+string(aobj._linkedas)); csfile_text_writeln(file);}
        csfile_text_write_string(file,"b xscale "+string(aobj.xscale)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b yscale "+string(aobj.yscale)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b fadein "+string(aobj.fadein)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b fadeout "+string(aobj.fadeout)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b fademax "+string(aobj.fadeinmax)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b cuposx "+string(aobj.cuposx)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b cuposy "+string(aobj.cuposy)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b initidepth "+string(aobj.initidepth*1000000000)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b rParallax "+string(aobj.rParallax)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b shDepth "+string(aobj.shDepth)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b imp_offsetisx "+string(aobj.imp_offsetisx)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b imp_offsetisy "+string(aobj.imp_offsetisy)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b imp_offsetx "+string(aobj.imp_offsetx)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b imp_offsety "+string(aobj.imp_offsety)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b xoff "+string(aobj.xoff)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b yoff "+string(aobj.yoff)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b telled "+string(aobj.telled)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b tabout "+string(aobj.tabout)); csfile_text_writeln(file);
        if (aobj.imp) {for (i=0;i&lt;aobj.acount;i+=1) {
            csfile_text_write_string(file,"b indxoff"+string(i)+" "+string(aobj.indxoff[i])); csfile_text_writeln(file);
            csfile_text_write_string(file,"b indyoff"+string(i)+" "+string(aobj.indyoff[i])); csfile_text_writeln(file);}}
        csfile_text_write_string(file,"b alpha "+string(aobj.alpha)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b animated "+string(aobj.animated)); csfile_text_writeln(file);
        csfile_text_write_string(file,"b wasAnimated "+string(aobj.wasAnimated)); csfile_text_writeln(file);
        if ((aobj.cranim!="" &amp;&amp; aobj.animated) || aobj.wasAnimated) {csfile_text_write_string(file,"b anim "+string(aobj.cranim)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b crline "+string(aobj.crline)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b isRepeat "+string(aobj.isRepeat)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b repCur "+string(aobj.repCur)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b repCount "+string(aobj.repCount)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b rline "+string(aobj.rLine)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b waiting "+string(aobj.waitingForComplete)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b nowait "+string(aobj.nowait)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b nwsync "+string(aobj.nwsync)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b wtm "+string(aobj._wtm)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b wtime "+string(aobj.wtime)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b atelled "+string(aobj.atelled)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b anotell "+string(aobj.anotell)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b xmoving "+string(aobj.xmoving)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b ymoving "+string(aobj.ymoving)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b xscaling "+string(aobj.xscaling)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b yscaling "+string(aobj.yscaling)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b afading "+string(aobj.afading)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b xmovingW "+string(aobj.xmovingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b ymovingW "+string(aobj.ymovingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b xscalingW "+string(aobj.xscalingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b yscalingW "+string(aobj.yscalingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b afadingW "+string(aobj.afadingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b xpointend "+string(aobj.xpointend)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b ypointend "+string(aobj.ypointend)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b time1 "+string(aobj._time1)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b time2 "+string(aobj._time2)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b time3 "+string(aobj._time3)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b time4 "+string(aobj._time4)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b time5 "+string(aobj._time5)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b timeLeft1 "+string(aobj.timeLeft1)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b timeLeft2 "+string(aobj.timeLeft2)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b timeLeft3 "+string(aobj.timeLeft3)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b timeLeft4 "+string(aobj.timeLeft4)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b timeLeft5 "+string(aobj.timeLeft5)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b xmcon "+string(aobj.xmcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b ymcon "+string(aobj.ymcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b xslcon "+string(aobj.xslcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b yslcon "+string(aobj.yslcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"b fspd "+string(aobj.fspd)); csfile_text_writeln(file);}}}}}
    if (instance_number(objSNv_person)&gt;0) {
    csfile_text_write_string(file,"persondepth "+string(global.persondepth*100000)); csfile_text_writeln(file);
    for (i=0;i&lt;instance_number(objSNv_person);i+=1) {aobj=instance_find(objSNv_person,i);
        if (aobj.bnum!=-1) {csfile_text_write_string(file,"person add "+string(novdat.char[novel.novid,aobj.bnum])); csfile_text_writeln(file);}
        else {csfile_text_write_string(file,"person add"); csfile_text_writeln(file);}
        if (aobj._linkedas!="") {csfile_text_write_string(file,"p linked "+string(aobj._linkedas)); csfile_text_writeln(file);}
        csfile_text_write_string(file,"p state "+string(aobj.sprState)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p statearrayc "+string(aobj.statearrayc)); csfile_text_writeln(file);
        for (_i=0;_i&lt;aobj.statearrayc;_i+=1) {csfile_text_write_string(file,"p statearray"+string(_i)+" "+string(aobj.statearray[_i])); csfile_text_writeln(file);}
        csfile_text_write_string(file,"p dist "+string(aobj.dist)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p pos "+string(aobj.pos)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p posx "+string(aobj.posx)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p cuposx "+string(aobj.cuposx)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p cuposy "+string(aobj.cuposy)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p cuscale "+string(aobj.cuscale)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p xscale "+string(aobj.xscale)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p yscale "+string(aobj.yscale)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p initidepth "+string(aobj.initidepth*100000)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p xrev "+string(aobj.xrev)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p yrev "+string(aobj.yrev)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p depth "+string(aobj.shDepth)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p alpha "+string(aobj.alpha)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p dest "+string(aobj.dest)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p yscale "+string(aobj.yscale)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p additionaldrawing "+string(aobj.additionaldrawing)); csfile_text_writeln(file);
        if (aobj.additionaldrawing) {csfile_text_write_string(file,"p adr_tell "+string(aobj.adr_tell)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p adr_doy "+string(aobj.adr_doy)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p adr_dox "+string(aobj.adr_dox)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p adr_yrev "+string(aobj.adr_yrev)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p adr_xrev "+string(aobj.adr_xrev)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p adr_cuscale "+string(aobj.adr_cuscale)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p adr_cuposy "+string(aobj.adr_cuposy)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p adr_cuposx "+string(aobj.adr_cuposx)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p adr_posx "+string(aobj.adr_posx)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p adr_fadeout "+string(aobj.adr_fadeout)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p adr_alpha "+string(aobj.adr_alpha)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p adr_imp "+string(aobj.adr_imp)); csfile_text_writeln(file);}
        csfile_text_write_string(file,"p itpath "+string(aobj.itpath)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p itfname "+string(aobj.itfname)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p sint "+string(aobj.sint)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p sfint "+string(aobj.sfint)); csfile_text_writeln(file);
        if (aobj.itfname != "" &amp;&amp; !aobj.imp) {csfile_text_write_string(file,"p sosx "+string(aobj.sosx)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p sosy "+string(aobj.sosy)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p _ofx "+string(aobj._ofx)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p _ofy "+string(aobj._ofy)); csfile_text_writeln(file);}
        csfile_text_write_string(file,"p sparallax "+string(aobj.sparallax)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p originalfname "+string(aobj.originalfname)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p fadein "+string(aobj.fadein)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p fadeout "+string(aobj.fadeout)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p fademax "+string(aobj.fadeinmax)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p telled "+string(aobj.telled)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p ntell "+string(aobj.ntell)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p animated "+string(aobj.animated)); csfile_text_writeln(file);
        csfile_text_write_string(file,"p wasAnimated "+string(aobj.wasAnimated)); csfile_text_writeln(file);
        if ((aobj.cranim!="" &amp;&amp; aobj.animated)|| aobj.wasAnimated) {csfile_text_write_string(file,"p anim "+string(aobj.cranim)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p crline "+string(aobj.crline)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p isRepeat "+string(aobj.isRepeat)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p repCur "+string(aobj.repCur)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p repCount "+string(aobj.repCount)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p rline "+string(aobj.rLine)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p waiting "+string(aobj.waitingForComplete)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p nowait "+string(aobj.nowait)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p nwsync "+string(aobj.nwsync)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p wtm "+string(aobj._wtm)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p wtime "+string(aobj.wtime)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p atelled "+string(aobj.atelled)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p anotell "+string(aobj.anotell)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p xmoving "+string(aobj.xmoving)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p ymoving "+string(aobj.ymoving)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p xscaling "+string(aobj.xscaling)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p yscaling "+string(aobj.yscaling)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p afading "+string(aobj.afading)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p xmovingW "+string(aobj.xmovingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p ymovingW "+string(aobj.ymovingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p xscalingW "+string(aobj.xscalingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p yscalingW "+string(aobj.yscalingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p afadingW "+string(aobj.afadingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p xpointend "+string(aobj.xpointend)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p ypointend "+string(aobj.ypointend)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p time1 "+string(aobj._time1)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p time2 "+string(aobj._time2)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p time3 "+string(aobj._time3)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p time4 "+string(aobj._time4)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p time5 "+string(aobj._time5)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p timeLeft1 "+string(aobj.timeLeft1)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p timeLeft2 "+string(aobj.timeLeft2)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p timeLeft3 "+string(aobj.timeLeft3)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p timeLeft4 "+string(aobj.timeLeft4)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p timeLeft5 "+string(aobj.timeLeft5)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p xmcon "+string(aobj.xmcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p ymcon "+string(aobj.ymcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p xslcon "+string(aobj.xslcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p yslcon "+string(aobj.yslcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"p fspd "+string(aobj.fspd)); csfile_text_writeln(file);}}}
        csfile_text_write_string(file,"is3DHide "+string(global.is3DHide)); csfile_text_writeln(file);
    if (instance_exists(obj3DCamera)) {csfile_text_write_string(file,"3d"); csfile_text_writeln(file);
        if (ds_map_size(objScene.states)&gt;0) {_tex = ds_map_find_first(objScene.states);}
        for (_i=0;_i&lt;ds_map_size(objScene.states);_i+=1) {_va = ds_map_find_value(objScene.states,_tex);
            csfile_text_write_string(file,"object "+string(_tex)+" setstate "+string(_va)); csfile_text_writeln(file);
            if (_i&lt;ds_map_size(objScene.states)) {_tex = ds_map_find_next(objScene.states,_tex);}}
        csfile_text_write_string(file,"scene "+string(objScene.path)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c x "+string(obj3DCamera.x)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c y "+string(obj3DCamera.y)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c z "+string(obj3DCamera.z)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c direction "+string(obj3DCamera.direction)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c pitch "+string(obj3DCamera.pitch)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c fov "+string(obj3DCamera.FOV)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c angle "+string(obj3DCamera.cameraangle)); csfile_text_writeln(file);
        if (instance_exists(objPlayer)) {
            csfile_text_write_string(file,"spawn obj player "+string(objPlayer.x)+" "+string(objPlayer.y)+" "+string(objPlayer.z)); csfile_text_writeln(file);
            csfile_text_write_string(file,"pl canMove "+string(objPlayer.canMove)); csfile_text_writeln(file);}
        if (instance_exists(obj3DCamera.follow)) {if (obj3DCamera.follow.onvarName == "obj point") {
            csfile_text_write_string(file,"spawn obj Point "+string(obj3DCamera.follow.x)+" "+string(obj3DCamera.follow.y)+" "+string(obj3DCamera.follow.z)); csfile_text_writeln(file);}
            csfile_text_write_string(file,"c follow "+string(obj3DCamera.follow.onvarName)); csfile_text_writeln(file);}
        csfile_text_write_string(file,"c moveMouse "+string(obj3DCamera.moveMouse)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c canView "+string(obj3DCamera.canView)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c viewLimx1 "+string(obj3DCamera.viewLimx1)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c viewLimx2 "+string(obj3DCamera.viewLimx2)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c viewLimz "+string(obj3DCamera.viewLimz)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c alpha "+string(obj3DCamera.alpha)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c fadeinmax "+string(obj3DCamera.fadeinmax)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c zheight "+string(obj3DCamera.zheight)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c _looktox "+string(obj3DCamera._looktox)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c _looktoy "+string(obj3DCamera._looktoy)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c _looktoz "+string(obj3DCamera._looktoz)); csfile_text_writeln(file);
        csfile_text_write_string(file,"c animated "+string(obj3DCamera.animated)); csfile_text_writeln(file); aobj=obj3DCamera;
        if (aobj.animated &amp;&amp; aobj.cranim!="") {csfile_text_write_string(file,"c anim "+string(aobj.cranim)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c crline "+string(aobj.crline)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c isRepeat "+string(aobj.isRepeat)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c repCur "+string(aobj.repCur)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c repCount "+string(aobj.repCount)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c rline "+string(aobj.rLine)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c waiting "+string(aobj.waitingForComplete)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c nowait "+string(aobj.nowait)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c nwsync "+string(aobj.nwsync)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c wtm "+string(aobj._wtm)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c wtime "+string(aobj.wtime)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c atelled "+string(aobj.atelled)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c anotell "+string(aobj.anotell)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c xmoving "+string(aobj.xmoving)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c ymoving "+string(aobj.ymoving)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c zmoving "+string(aobj.zmoving)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c xscaling "+string(aobj.xscaling)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c yscaling "+string(aobj.yscaling)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c afading "+string(aobj.afading)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c lookingAt "+string(aobj.lookingAt)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c fovingOut "+string(aobj.fovingOut)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c xmovingW "+string(aobj.xmovingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c ymovingW "+string(aobj.ymovingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c zmovingW "+string(aobj.zmovingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c xscalingW "+string(aobj.xscalingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c yscalingW "+string(aobj.yscalingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c afadingW "+string(aobj.afadingW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c lookingAtW "+string(aobj.lookingAtW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c fovingOutW "+string(aobj.fovingOutW)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c xpointend "+string(aobj.xpointend)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c ypointend "+string(aobj.ypointend)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c time1 "+string(aobj._time1)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c time2 "+string(aobj._time2)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c time3 "+string(aobj._time3)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c time4 "+string(aobj._time4)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c time5 "+string(aobj._time5)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c time6 "+string(aobj._time6)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c time7 "+string(aobj._time7)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c time8 "+string(aobj._time8)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c timeLeft1 "+string(aobj.timeLeft1)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c timeLeft2 "+string(aobj.timeLeft2)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c timeLeft3 "+string(aobj.timeLeft3)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c timeLeft4 "+string(aobj.timeLeft4)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c timeLeft5 "+string(aobj.timeLeft5)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c timeLeft6 "+string(aobj.timeLeft6)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c timeLeft7 "+string(aobj.timeLeft7)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c timeLeft8 "+string(aobj.timeLeft8)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c xmcon "+string(aobj.xmcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c ymcon "+string(aobj.ymcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c zmcon "+string(aobj.zmcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c xslcon "+string(aobj.xslcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c yslcon "+string(aobj.yslcon)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c lktAt_dir "+string(aobj.lktAt_dir)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c lktAt_spd "+string(aobj.lktAt_spd)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c lktAt_pitch "+string(aobj.lktAt_pitch)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c fvOut_end "+string(aobj.fvOut_end)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c fvOut_spd "+string(aobj.fvOut_spd)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c fvOut_stFov "+string(aobj.fvOut_stFov)); csfile_text_writeln(file);
            csfile_text_write_string(file,"c fspd "+string(aobj.fspd)); csfile_text_writeln(file);}}
    csfile_text_write_string(file,"backOMove "+string(global.backOMove)); csfile_text_writeln(file);
    csfile_text_write_string(file,"charOMove_n "+string(global.charOMove_n)); csfile_text_writeln(file);
    csfile_text_write_string(file,"charOMove_f "+string(global.charOMove_f)); csfile_text_writeln(file);
    csfile_text_write_string(file,"charOMove_c "+string(global.charOMove_c)); csfile_text_writeln(file);
    csfile_text_write_string(file,"d isdialpos "+string(novel.isdialpos)); csfile_text_writeln(file);
    csfile_text_write_string(file,"d dialposx "+string(novel.dialposx)); csfile_text_writeln(file);
    csfile_text_write_string(file,"d dialposy "+string(novel.dialposy)); csfile_text_writeln(file);
    csfile_text_write_string(file,"d dialwin "+string(novel.dialwin)); csfile_text_writeln(file);
    csfile_text_write_string(file,"d dialclear "+string(novel.dialclear)); csfile_text_writeln(file);
    csfile_text_write_string(file,"d dialfull "+string(novel.dialfull)); csfile_text_writeln(file);
    csfile_text_write_string(file,"d dialtnfot "+string(novel.dialtnfot)); csfile_text_writeln(file);
    if (novel.dialcolor!=global.dialBackClr) {csfile_text_write_string(file,"dialcolor "+string(colour_get_red(novel.dialcolor))+" "+string(colour_get_green(novel.dialcolor))+" "+string(colour_get_blue(novel.dialcolor))); csfile_text_writeln(file);}
    if (novel.dialoutcl!=global.dialBackOutclr) {csfile_text_write_string(file,"dialoutcl "+string(colour_get_red(novel.dialoutcl))+" "+string(colour_get_green(novel.dialoutcl))+" "+string(colour_get_blue(novel.dialoutcl))); csfile_text_writeln(file);}
    if (global.dDrawFont_t!=global.dialTextFont_t) {csfile_text_write_string(file,"font "+string(global.dDrawFont_t)); csfile_text_writeln(file);}
    if (instance_exists(global.dialog)) {aobj=global.dialog; if (!aobj.is_question[0]) {
        csfile_text_write_string(file,"d text "+string(aobj.dialog[0])); csfile_text_writeln(file);
        csfile_text_write_string(file,"d speaker "+string(aobj.speaker[0])); csfile_text_writeln(file);
        csfile_text_write_string(file,"d dialClear "+string(aobj.dialClear)); csfile_text_writeln(file);
        csfile_text_write_string(file,"d dialTNoFadeout "+string(aobj.dialTNoFadeout)); csfile_text_writeln(file);
        csfile_text_write_string(file,"d dialwin "+string(aobj.dialwin)); csfile_text_writeln(file);
        //csfile_text_write_string(file,"d opacity "+string(aobj.opacity)); csfile_text_writeln(file);
        //csfile_text_write_string(file,"d max_opacity "+string(aobj.max_opacity)); csfile_text_writeln(file);
        csfile_text_write_string(file,"d fullSize "+string(aobj.fullSize)); csfile_text_writeln(file);
        csfile_text_write_string(file,"d dest "+string(aobj.dest)); csfile_text_writeln(file);
        csfile_text_write_string(file,"d tdest "+string(aobj.tdest)); csfile_text_writeln(file);
        csfile_text_write_string(file,"d txt "+string(aobj.txt)); csfile_text_writeln(file);
        csfile_text_write_string(file,"d txt_speed "+string(aobj.txt_speed)); csfile_text_writeln(file);
        if (aobj.dclrcnt[0]&gt;0) {csfile_text_write_string(file,"d dclrcnt "+string(aobj.dclrcnt[0])); csfile_text_writeln(file);
            for (i=0;i&lt;aobj.dclrcnt[0];i+=1) {csfile_text_write_string(file,"d dclrstart"+string(i)+" "+string(aobj.dclrstart[0,i])); csfile_text_writeln(file);
                csfile_text_write_string(file,"d dclrend"+string(i)+" "+string(aobj.dclrend[0,i])); csfile_text_writeln(file);
                csfile_text_write_string(file,"d dclrself"+string(i)+" "+string(colour_get_red(aobj.dclrself[0,i]))+" "+string(colour_get_green(aobj.dclrself[0,i]))+" "+string(colour_get_blue(aobj.dclrself[0,i]))); csfile_text_writeln(file);}}
        if (aobj.stopcount&gt;0) {csfile_text_write_string(file,"d stopcount "+string(aobj.stopcount)); csfile_text_writeln(file);
            csfile_text_write_string(file,"d stopcurrent "+string(aobj.stopcurrent)); csfile_text_writeln(file);
            for (i=0;i&lt;aobj.stopcount;i+=1) {csfile_text_write_string(file,"d istop"+string(i)+" "+string(aobj.istop[i])); csfile_text_writeln(file);}}
        csfile_text_write_string(file,"d dShowed "+string(aobj.dShowed)); csfile_text_writeln(file);
        csfile_text_write_string(file,"d canPress "+string(aobj.canPress)); csfile_text_writeln(file);
        csfile_text_write_string(file,"d dtextself "+string(aobj.dtextself[0])); csfile_text_writeln(file);
        csfile_text_write_string(file,"d isdialpos "+string(aobj.isdialpos)); csfile_text_writeln(file);
        if (aobj.speaker[0]!="") {csfile_text_write_string(file,"d actorclr "+string(colour_get_red(global.dialog.actorclr[0]))+" "+string(colour_get_green(global.dialog.actorclr[0]))+" "+string(colour_get_blue(global.dialog.actorclr[0]))); csfile_text_writeln(file);
            csfile_text_write_string(file,"d actoroutclr "+string(colour_get_red(global.dialog.actoroutclr[0]))+" "+string(colour_get_green(global.dialog.actoroutclr[0]))+" "+string(colour_get_blue(global.dialog.actoroutclr[0]))); csfile_text_writeln(file);}
        csfile_text_write_string(file,"d global.diWindow "+string(global.diWindow)); csfile_text_writeln(file);
        if (aobj.isdialpos) {csfile_text_write_string(file,"d dialposx "+string(aobj.dialposx)); csfile_text_writeln(file);
            csfile_text_write_string(file,"d dialposy "+string(aobj.dialposy)); csfile_text_writeln(file);}
        if (instance_exists(global.dialogBack)) {if (aobj.dialwin &amp;&amp; !global.dialForcedBClr) {
            csfile_text_write_string(file,"d diColor "+string(colour_get_red(global.dialogBack.diColor))+" "+string(colour_get_green(global.dialogBack.diColor))+" "+string(colour_get_blue(global.dialogBack.diColor))); csfile_text_writeln(file);
            csfile_text_write_string(file,"d diOutColor "+string(colour_get_red(global.dialogBack.diOutColor))+" "+string(colour_get_green(global.dialogBack.diOutColor))+" "+string(colour_get_blue(global.dialogBack.diOutColor))); csfile_text_writeln(file);}}}
        else {csfile_text_write_string(file,"d i'm question yay"); csfile_text_writeln(file);
            if (novel.waitingForComplete &amp;&amp; !aobj.dest) {csfile_text_write_string(file,"waiting 0"); csfile_text_writeln(file);}}}
    if (instance_number(objHUD)&gt;0) {for (i=0;i&lt;instance_number(objHUD);i+=1) {aobj=instance_find(objHUD,i);
        csfile_text_write_string(file,"hud add "+string(aobj.hud)); csfile_text_writeln(file);
        csfile_text_write_string(file,"h hudPath "+string(aobj.hudPath)); csfile_text_writeln(file);
        csfile_text_write_string(file,"h hudHide "+string(aobj.hudHide)); csfile_text_writeln(file);
        csfile_text_write_string(file,"h fadein "+string(aobj.fadein)); csfile_text_writeln(file);
        csfile_text_write_string(file,"h fadeout "+string(aobj.fadeout)); csfile_text_writeln(file);
        csfile_text_write_string(file,"h fademax "+string(aobj.fademax)); csfile_text_writeln(file);
        csfile_text_write_string(file,"h alpha "+string(aobj.alpha)); csfile_text_writeln(file);
        csfile_text_write_string(file,"h dest "+string(aobj.dest)); csfile_text_writeln(file);
        csfile_text_write_string(file,"h dbName "+string(aobj.dbName)); csfile_text_writeln(file);
        if (aobj._linkedas!="") {csfile_text_write_string(file,"h linked "+string(aobj._linkedas)); csfile_text_writeln(file);}
        csfile_text_write_string(file,"h fadeintell "+string(aobj.fadeintell)); csfile_text_writeln(file);
        csfile_text_write_string(file,"h fadeouttell "+string(aobj.fadeouttell)); csfile_text_writeln(file);}}
    if (!objMusic.pathed) {fname="Stuff\Music\"+string(objMusic.currentMusic)+".ogg";} else {fname=string(objMusic.currentMusic);}
    csfile_text_write_string(file,"music "+string(fname)); csfile_text_writeln(file);
    csfile_text_write_string(file,"music seek "+string(music_get_seek())); csfile_text_writeln(file);
    csfile_text_write_string(file,"mfademax "+string(global.mFadeMax)); csfile_text_writeln(file);
    csfile_text_write_string(file,"mfadein "+string(global.mFadeIn)); csfile_text_writeln(file);
    csfile_text_write_string(file,"mfadeout "+string(global.mFadeOut)); csfile_text_writeln(file);
    csfile_text_write_string(file,"ambfademax "+string(global.ambFadeMax)); csfile_text_writeln(file);
    csfile_text_write_string(file,"ambfadein "+string(global.ambFadeIn)); csfile_text_writeln(file);
    csfile_text_write_string(file,"ambfadeout "+string(global.ambFadeOut)); csfile_text_writeln(file);
    if (instance_number(objEmitter)&gt;0) {for (i=0;i&lt;instance_number(objEmitter);i+=1) {aobj=instance_find(objEmitter,i); if (!aobj.isDest) {
        csfile_text_write_string(file,"emitter add "+string(aobj.type)); csfile_text_writeln(file);
        csfile_text_write_string(file,"e fname "+string(aobj.rfname)); csfile_text_writeln(file);
        csfile_text_write_string(file,"e fadein "+string(aobj.fadein)); csfile_text_writeln(file);
        csfile_text_write_string(file,"e fadeout "+string(aobj.fadeout)); csfile_text_writeln(file);
        csfile_text_write_string(file,"e fademax "+string(aobj.fademax)); csfile_text_writeln(file);
        csfile_text_write_string(file,"e seek "+string(audio_sound_get_track_position(aobj.sound))); csfile_text_writeln(file);
        if (aobj._blnum!="") {csfile_text_write_string(file,"e blnum "+string(aobj._blnum)); csfile_text_writeln(file);}}}}
    csfile_text_close(file); if (sprite_exists(thspr[savenum])) {sprite_delete(thspr[savenum]);} if (surface_exists(application_surface)) {
        ospr=sprite_create_from_surface(application_surface,0,0,view_wview,view_hview,0,0,0,0);
        surf=surface_create(200,120); _a=0; while (!surface_exists(surf)) {if (_a&gt;200) {break;} surf=surface_create(200,120); _a+=1;}
        if (surface_exists(surf)) {surface_set_target(surf);
            draw_sprite_ext(ospr,-1,0,0,200/sprite_get_width(ospr),120/sprite_get_height(ospr),0,c_white,1); surface_reset_target();
            /*if (!global.thuAppData) {surface_save(surf,working_directory+"Temp\Thumbnail"+string(savenum)+".jpg");
            file=file_bin_open(working_directory+"Temp\Thumbnail"+string(savenum)+".jpg",0);
            fsize=file_bin_size(file); i=0; repeat (fsize) {sdata[i]=file_bin_read_byte(file); i+=1;} file_bin_close(file);
            file=FS_file_bin_open(current_directory()+"\Saves\"+string(novdat.prefix[novel.novid]+novdat.FolderName[novel.novid])+"\Thumbnail"+string(savenum)+".jpg",1);
            i=0; repeat (fsize) {FS_file_bin_write_byte(file,sdata[i]); i+=1;} FS_file_bin_close(file);} else {
            surface_save(surf,working_directory+"Saves\"+string(novdat.prefix[novel.novid]+novdat.FolderName[novel.novid])+"\Thumbnail"+string(savenum)+".jpg");}*/
            _f=file_find_first(working_directory+"blank.return",0); file_find_close();
            _path=working_directory; if (file_exists(_f)) {_path=filename_path(_f);} _path+="Temp\";
            if (!directory_exists(working_directory+"Temp")) {directory_create(working_directory+"Temp");}
            surface_save(surf,_path+"Thumbnail"+string(savenum)+".png");
            ns_file_copy(_path+"Thumbnail"+string(savenum)+".png",current_directory()+"Saves\"+_savefolder+"\Thumbnail"+string(savenum)+".png");
            file_delete(_path+"\Thumbnail"+string(savenum)+".png");
            surface_free(surf); sprite_delete(ospr);}} saving=0;}

if (!global.inGame) {alpha=0; global.gamePause=0; exit;}
if (!global.gameIsLoaded) {alpha=0; global.gamePause=0; exit;}

draw_set_alpha(alpha/2);
if (lgpage!=gpage) {if (lgpage==1) {for (ii=1;ii&lt;=global.savCount;ii+=1) {
    if (selPage==pcount-1 &amp;&amp; lpage) {if (ii&gt;lpcount) {break;}} if (sprite_exists(thspr[ii])) {sprite_delete(thspr[ii]);}}} lgpage=gpage;}

if (alpha&gt;0) {if (!customMenu || global.isTesting || gpage!=0) {draw_rectangle_colour(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,c_black,c_black,c_black,c_black,0);} wwidth=160;
if (gpage==0) {if (!customMenu || global.isTesting) {draw_sprite_pos(global.loadedSpriteGUI_buttonShadow,-1,view_xview+view_wview/2+wwidth,view_yview-100,view_xview+view_wview/2+wwidth,
    view_yview+view_hview+100,view_xview+view_wview/2-wwidth,view_yview+view_hview+100,view_xview+view_wview/2-wwidth,view_yview-100,alpha/2);}}
else {draw_set_alpha(alpha/2); draw_rectangle_colour(view_xview,view_yview,view_xview+view_wview,view_yview+view_hview,c_black,c_black,c_black,c_black,0);}
if (global.gamePause) {button_set_clickble(1);} else {button_set_clickble(0);}
draw_set_alpha(alpha);

if (gpage==0) {if (!customMenu || global.isTesting) {
draw_text_set(Pacifica28,c_white,fa_center,fa_top);
clr=c_white; oclr=c_dkgray; if (global.isTesting || global.savCount&lt;=0) {button_set_clickble(0); clr=c_gray;}
if (button_outback(view_xview+view_wview/2,view_yview+view_hview/2,lang.save_game+" &gt;",clr,oclr,c_black,1)) {gpage=1;}
if (button_outback(view_xview+view_wview/2,view_yview+view_hview/2+5+string_height('A'),lang.load_game+" &gt;",clr,oclr,c_black,1)) {gpage=2;}
if (global.isTesting) {button_set_clickble(1);}
str=lang.exit_to_menu; if (global.isTesting) {str=lang.exit_to_editor;}
if (button_outback(view_xview+view_wview/2,view_yview+view_hview-string_height("A")-20,str,c_white,c_gray,c_black,1)) {
    novid=-1; game_deinit(); if (!global.isTesting) {room_goto(global.lRMenu);} else {if (instance_exists(novel)) {
        global.nEDid=novel.novid; global.isNExists=novel.novid;} room_goto(room_editor);}}}
else {if (instance_exists(novel)) {button_set_clickble(!global.trBack);
    _isSkipping=0; _ifcount=0; draw_set_alpha(alpha);
    for (hudi=0;hudi&lt;elCount[elCPage];hudi+=1) {drelement_draw(elCPage,hudi);} button_set_clickble(1);}}}

else if (gpage==1) {savemode=1; novid=novel.novid; gpalpha=alpha/2; draw_saves(); draw_text_set(Pacifica28,c_white,fa_center,fa_top);
    if (!instance_exists(objGUI_overwrite)) {if (mouse_check_button_pressed(mb_right) &amp;&amp; !cUnder) {gpage=0; mouse_clear(mb_right);}}
    if (button_outback(view_xview+view_wview/2,view_yview+view_hview-string_height("A")-20,"&lt; "+lang.back,c_white,c_gray,c_black,1)) {
        for (ii=1;ii&lt;=global.savCount;ii+=1) {if (sprite_exists(thspr[ii])) {sprite_delete(thspr[ii]);}} gpage=0;}}

else if (gpage==2) {savemode=0; novid=novel.novid; gpalpha=alpha/2; draw_saves(); draw_text_set(Pacifica28,c_white,fa_center,fa_top);
    if (!instance_exists(objGUI_load)) {if (mouse_check_button_pressed(mb_right) &amp;&amp; !cUnder) {gpage=0; mouse_clear(mb_right);}}
    if (button_outback(view_xview+view_wview/2,view_yview+view_hview-string_height("A")-20,"&lt; "+lang.back,c_white,c_gray,c_black,1)) {
        for (ii=1;ii&lt;=global.savCount;ii+=1) {if (sprite_exists(thspr[ii])) {sprite_delete(thspr[ii]);}} gpage=0;}}}

else if (gpage==3) {alpha3=alpha; draw_set_alpha(alpha3);
    if (!mtpskin) {if (mouse_check_button_pressed(mb_right)) {if (!mtpres) {gpage=0; uchar_save();} else {mtpres=0;} mouse_clear(mb_right);}}
    draw_options();}

draw_set_alpha(1); if (global.gamePause) {if (alpha&lt;1) {alpha+=fadein*Time.deltatime; if (fadein==0) {alpha=1;}}} else {if (alpha&gt;0) {alpha-=fadeout*Time.deltatime; if (fadeout==0) {alpha=0;}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
