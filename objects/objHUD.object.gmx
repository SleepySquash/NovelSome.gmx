<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hud=""; lhud=""; doSmooth=0; alpha=0; aFading=0; _shHide=0; _tt=0;
hudHide=0; tpFolName=""; tpBack=""; hudPath=""; doRef=0;
trTo=0; elTPage=1; toHud=""; toHudPath=""; ltoHud=""; ltoHudPath="";
_linkedas=""; dbName="noname"; dest=0; fademax=1;
fadeintell=1; fadeouttell=1; fadein=0.1; fadeout=0.1;
drelement_init(); novelsomescript_logicinit();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drelement_clear(); ds_list_destroy(__ifs); ds_list_destroy(pagelist);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (lhud!=hud) {hudHide=_shHide; _shHide=0;
if (!instance_exists(novel)) {hudPath="";}
    else {if (novel.novid!=-1) {novid=novel.novid;} else {hudPath="";}}
    drelement_reload(hudPath,1,"DrawHUD","Draw");
    
    _file = file_text_open_read(hudPath); if (_file != -1) {
    noread=0; _isReading=0; nss_extbegin(); nss_handle_logic(1);
        while (!file_text_eof(_file)) {if (!_isReading) {fstr=file_text_read_string(_file);
            while (string_copy(fstr,1,1) == " ") {if (string_length(fstr)&lt;=1) {fstr=""; break;} else {fstr = string_copy(fstr,2,string_length(fstr)-1);}}
            if (nss_check("void ")) {__void = string_copy(fstr,string_length("void ")+1,string_length(fstr)-string_length("void "));
                if (string_lower(__void) == "reload") {_isReading = 1;}}
            file_text_readln(_file); _nss_progress+=1;} else {
            if (!noread) {fstr=file_text_read_string(_file);} else {noread=0;}
            while (string_copy(fstr,1,1) == " ") {if (string_length(fstr)&lt;=1) {fstr=""; break;} else {fstr = string_copy(fstr,2,string_length(fstr)-1);}}
            if (nss_check("void ")) {__void = string_copy(fstr,string_length("void ")+1,string_length(fstr)-string_length("void "));
                if (string_lower(__void) != "reload") {_isReading = 0;}}
            else if (nss_check("end")) {if (ds_list_size(ifs)&lt;=0) {_isReading = 0;} else {novelsomescript(fstr,id);}} else {novelsomescript(fstr,id);}
            if (!noread) {file_text_readln(_file); _nss_progress+=1;}}}
        file_text_close(_file); nss_extend(); nss_handle_logic(0);}
    
    lhud=hud;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drelement_clear();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (dest) {if (alpha&gt;0) {alpha-=fadeout; if (alpha&lt;0) {alpha=0;}}
    else {if (fadeouttell) {if (instance_exists(novel)) {novel.waitingForComplete=0;} fadeouttell=0;} instance_destroy();}}
else {if (!hudHide) {if (alpha&lt;fademax) {alpha+=fadein; if (alpha&gt;1) {alpha=1;}}
        else {if (fadeintell) {if (instance_exists(novel)) {novel.waitingForComplete=0;} fadeintell=0;}}}
    else {if (alpha&gt;0) {alpha-=fadeout; if (alpha&lt;0) {alpha=0;}}}}
if (alpha&gt;0) {if (instance_exists(novel)) {button_set_clickble(!global.gamePause &amp;&amp; !global.trBack &amp;&amp; !hudHide);
    _isSkipping=0; _ifcount=0; draw_set_alpha(alpha);
    for (hudi=0;hudi&lt;elCount[elCPage];hudi+=1) {drelement_draw(elCPage,hudi);} button_set_clickble(1);}}
/*if (!hudHide) {if (aFading) {if (alpha&gt;0) {alpha-=0.18*Time.deltatime;}} else {if (hud!="") {
    if (trTo==5) {if (alpha&gt;0) {alpha-=0.18*Time.deltatime;} else {trTo=0; doSmooth=1; elCPage=elTPage;}}
    else {if (doSmooth) {if (alpha&lt;1) {alpha+=0.18*Time.deltatime;}} else {alpha=1;}}}}} else {
        if (doSmooth) {if (alpha&gt;0) {alpha-=0.18*Time.deltatime;}} else {alpha = 0;}}
if (alpha&gt;0) {if (instance_exists(novel)) {button_set_clickble(!global.gamePause &amp;&amp; !global.trBack &amp;&amp; !hudHide);
    global.mHUD=0; _isSkipping=0; _ifcount=0; draw_set_alpha(alpha);
    for (hudi=0;hudi&lt;elCount[elCPage];hudi+=1) {drelement_draw(elCPage,hudi);} button_set_clickble(1);}}
else {global.mHUD=0;}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
