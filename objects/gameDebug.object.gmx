<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10003</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>updfps=0; fpstimed=fps; checkMousePos=0; rtime=0; clrmouse=0; lWFocus=1;

global.resChanged=0;
lwindow_width=window_get_width();
lwindow_height=window_get_height();
lastwidth=window_get_width(); lastwidth2=lastwidth;
lastheight=window_get_height(); lastheight2=lastheight;
drawDoCursor=0; drawDoCursorInpos=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_end)) {draw_texture_flush(); game_restart();}
if (keyboard_check_pressed(vk_home)) {global.gatesEnabled=!global.gatesEnabled; if (global.gatesEnabled) {
    if (!instance_exists(social)) {instance_create(0,0,social);}} else {if (instance_exists(social)) {with (social) {timeToDisconnect=380;}}}}
cp=1; if (room==room_editor) {if (!global.debug) {cp=0;}}
if (cp) {if (keyboard_check_pressed(vk_f4)) {window_set_fullscreen(!window_get_fullscreen());}}

if (os_browser == browser_not_a_browser) {if (os_type!=os_windows) {
    window_width=display_get_width(); window_height=display_get_height();
    global.winSW=window_width; global.winSH=window_height;
    global.wSW=window_width; global.wSH=window_height;}
    else {window_width=window_get_width(); window_height=window_get_height();}}
else {window_width=browser_width; window_height=browser_height;
    global.winSW=browser_width; global.winSH=browser_height;
    global.wSW=browser_width; global.wSH=browser_height;}

/*if (os_browser != browser_not_a_browser) {
    window_width=browser_width; window_height=browser_height;
    view_wview = window_width; view_hview = window_height;
    view_wport = view_wview; view_hport = view_hview;
    if (window_width != lwindow_width || window_height != lwindow_height) {
        window_set_rectangle(0,0,display_get_width(),display_get_height());
        game_center(); surface_resize(application_surface, view_wview, view_hview);
        lwindow_width=window_width; lwindow_height=window_height;}
    global.winSW=browser_width; global.winSH=browser_height;
    global.wSW=browser_width; global.wSH=browser_height;}*/

if (os_browser == browser_not_a_browser) {
if (window_width!=lastwidth2 || window_height!=lastheight2) {
    global.resChanged=1; lastwidth2=window_width; lastheight2=window_height;} else {global.resChanged=0;}

if (clrmouse) {if (rtime&lt;4) {rtime+=1;} else {rtime=0; clrmouse=0;}
    if (mouse_check_button(mb_left)) {clrmouse=0; rtime=0; mouse_clear(mb_left);}}
if (window_has_focus()!=lWFocus) {view_wport = view_wview; view_hport = view_hview;
    surface_resize(application_surface, view_wview, view_hview); lWFocus=window_has_focus();}
if (!window_has_focus() || view_wview&lt;100 || view_hview&lt;100) {exit;}
if (window_width!=lastwidth || view_wview!=window_width) {
    /*window_set_size(window_width,round(window_width/1.779141104));*/ lastwidth=window_width; lastheight=window_height;
    //window_set_position(display_get_width()/2,display_get_height()/2);
    view_wview=lastwidth; view_hview=lastheight;
    with (objChat) {chat_edit('',12,12,view_wview-8,view_hview-24*3.4,34,7,view_hview-24*2,c_black,38,200);}
    with (objGUI_chat) {chat_edit('',12,12,view_wview-8,view_hview-24*3.4,34,7,view_hview-24*2,c_black,38,200);}
    view_wport = view_wview;
    view_hport = view_hview;
    surface_resize(application_surface, view_wview, view_hview); exit;}
if (window_height!=lastheight || view_hview!=window_height) {
    /*window_set_size(round(window_height*1.779141104),window_height);*/ lastwidth=window_width; lastheight=window_height;
    view_wview=lastwidth; view_hview=lastheight;
    with (objChat) {chat_edit('',12,12,view_wview-8,view_hview-24*3.4,34,7,view_hview-24*2,c_black,38,200);}
    with (objGUI_chat) {chat_edit('',12,12,view_wview-8,view_hview-24*3.4,34,7,view_hview-24*2,c_black,38,200);}
    view_wport = view_wview;
    view_hport = view_hview;
    surface_resize(application_surface, view_wview, view_hview);}
    //window_set_position(display_get_width()/2,display_get_height()/2);}
if (view_wport!=view_wview) {view_wport=view_wview;
    surface_resize(application_surface, view_wview, view_hview);} if (view_hport!=view_hview) {view_hport=view_hview;
    surface_resize(application_surface, view_wview, view_hview);}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (os_browser == browser_not_a_browser) {if (os_type!=os_windows) {
    window_width=display_get_width(); window_height=display_get_height();}
    else {window_width=window_get_width(); window_height=window_get_height();}}
else {window_width=browser_width; window_height=browser_height;}
view_wview=window_width; view_hview=window_height;
view_wport = view_wview; view_hport = view_hview;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (os_browser == browser_not_a_browser) {
if (os_type!=os_windows) {window_width=display_get_width(); window_height=display_get_height();}
    else {window_width=window_get_width(); window_height=window_get_height();}
    view_wview=window_width; view_hview=window_height;
    view_wport = view_wview; view_hport = view_hview;
} else {window_set_rectangle(0,0,browser_width,browser_height);
    window_width=browser_width; window_height=browser_height;
    view_wview = window_width; view_hview = window_height;
    view_wport = view_wview; view_hport = view_hview;
    surface_resize(application_surface, view_wview, view_hview);
    global.winSW=browser_width; global.winSH=browser_height;
    global.wSW=browser_width; global.wSH=browser_height;}
//else {window_width=browser_width; window_height=browser_height;
//    window_set_rectangle(0,0,display_get_width(),display_get_height());}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawDoCursor=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);
draw_circle_colour(0,0,2,c_white,c_white,0);
draw_circle_colour(view_wview,0,2,c_white,c_white,0);
draw_circle_colour(view_wview,view_hview,2,c_white,c_white,0);
draw_circle_colour(0,view_hview,2,c_white,c_white,0);
if (room==room_init) {exit;}
draw_text_set(Pacifica12,0,fa_right,fa_bottom); ifdb=""; if (global.ndebug) {ifdb=" (uid: "+string(global.uniqueNumber)+")";}
yy=5; if (global.gameBundle==-1) {draw_text_soutline(view_xview+view_wview-5,view_yview+view_hview-yy,string(global.version)+ifdb); yy+=string_height("A")+5;}
if (global.author!="") {_text=" by "+string(global.author);} else {_text="";}
draw_set_font(Pacifica16); if (global.gameBundle==-1) {draw_text_soutline(view_xview+view_wview-5,view_yview+view_hview-yy,string(global.project)+_text); yy+=string_height("A")+5;}
if (updfps&lt;5) {updfps+=1*Time.deltatime;} else {fpstimed=fps_real; updfps=0;}
draw_set_font(Pacifica12); draw_text_soutline(view_xview+view_wview-5,view_yview+view_hview-yy,"FPS: "+string(round(fpstimed))+" ("+string(round(fps))+")");
if (global.ndebug) {draw_text_set(Arial12,0,fa_left,fa_top); text=""; text+="pl: "+string("0"); if (room==room_menu) {text+="#expanedid: "+string(objMenu.expanedid)+"; rexpaned: "+string(objMenu.rexpaned);}
    if (instance_exists(novel)) {text+="#scenario: "+string(novel.scenario)+"; progress: "+string(novel.progress);}
    draw_text_soutline(view_xview+5,view_yview+5,text);}
if (checkMousePos) {draw_text_set(Arial12,0,fa_left,fa_top); draw_text_soutline(mouse_x+20,mouse_y+10,string(mouse_x)+"; "+string(mouse_y));}
if (global.debug) {if (instance_exists(obj3DCamera)) {__adz=""; if (obj3DCamera._lookfromz!=0) {__adz = "("+string(round(obj3DCamera.z))+")";}
    draw_text_set(Arial12,0,fa_left,fa_bottom); draw_text_outline(view_xview+10,view_yview+view_hview-10,
    string(round(obj3DCamera.x))+" "+string(round(obj3DCamera.y))+" "+string(round(obj3DCamera.z+obj3DCamera._lookfromz))+__adz+"#"+string(obj3DCamera.direction)+" "+string(obj3DCamera.pitch));}}

if (drawDoCursor) {__x = view_xview+view_wview/2; __y = view_yview+view_hview/2;
    if (drawDoCursorInpos) {__x = mouse_x; __y = mouse_y;} draw_sprite(sprite6,0,__x,__y);}

//if (!window_get_fullscreen()) {if (window_get_width()!=1160||window_get_height()!=round(1160/1.779141104)) {draw_text_set(SAO30,c_white,fa_center,fa_middle);
//if (draw_get_button(view_xview+view_wview/2,view_yview+view_hview-string_height("A")/2-4,"Resize window",string_width("Resize window")+4,string_height("A")+2,c_black,c_white,c_black,1)) {
//    window_set_size(1160,round(1160/1.779141104)); mouse_clear(mb_left); rtime=0; clrmouse=1; if (global.inGame) {
//        if (!global.trBack) {global.gamePause=1;}}}}}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="114">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (os_browser == browser_not_a_browser) {if (os_type!=os_windows) {
    window_width=display_get_width(); window_height=display_get_height();}
    else {window_width=window_get_width(); window_height=window_get_height();}}
else {window_width=browser_width; window_height=browser_height;}
if (window_width!=global.winSW||window_height!=global.winSH
||view_wview!=global.winSW||view_hview!=global.winSH) {
    window_set_size(global.winSW,global.winSH);
    view_wview = global.winSW; view_hview = global.winSH;
    view_wport = view_wview; view_hport = view_hview;
    surface_resize(application_surface, view_wview, view_hview);}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="112">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.GUIVisible = !global.GUIVisible;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
